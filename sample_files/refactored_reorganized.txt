Code Atlas Generation Script - Enhanced with External Library Support and SocketIO Emit Detection
===================================================================================================================
Available implementations:
  - Analysis Original: Always available
  - Analysis Refactored: Yes
  - Reconnaissance Original: Always available
  - Reconnaissance Refactored: Yes
  - Resolver Original: Yes
  - Resolver Refactored: Yes
  - Resolver Reorganized: Yes
Using: recon:refactored + analysis:refactored (best available refactored)
Resolver: reorganized

Discovered 8 Python files to analyze:
  - admin_manager.py
  - database_manager.py
  - decorators.py
  - event_validator.py
  - inheritence_complex.py
  - proxy_handler.py
  - session_manager.py
  - socketio_events.py

Running reconnaissance pass...
[RECON_COMPAT] Using refactored reconnaissance implementation
  === REFACTORED RECONNAISSANCE PASS START ===
  === Analyzing admin_manager.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: admin_manager
      [IMPORT] Processing direct imports
      [IMPORT] Processing direct imports
    [EXTERNAL_MODULE] Direct import: threading
      [IMPORT] Processing direct imports
    [EXTERNAL_MODULE] Direct import: uuid
    [RECON_CLASS] Starting class analysis: OperationType
    [CLASS_RECON] Processing class: OperationType
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: admin_manager.OperationType with 1 parents
      [CLASS_CONTEXT] Entered class: admin_manager.OperationType
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute USER_MANAGEMENT to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] USER_MANAGEMENT: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute SYSTEM_CONFIGURATION to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] SYSTEM_CONFIGURATION: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute DATA_MIGRATION to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] DATA_MIGRATION: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute SECURITY_AUDIT to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] SECURITY_AUDIT: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute PERFORMANCE_TUNING to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] PERFORMANCE_TUNING: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute BACKUP_RESTORE to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] BACKUP_RESTORE: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationType
      [CLASS_ATTR] Added attribute MONITORING_SETUP to admin_manager.OperationType: {'type': 'auto'}
      [CLASS_ATTR] MONITORING_SETUP: auto
      [CLASS_CONTEXT] Exiting class: admin_manager.OperationType
    [CLASS_FINALIZE] Updated admin_manager.OperationType with 7 attributes
    [RECON_CLASS] Completed class analysis: OperationType
    [RECON_CLASS] Starting class analysis: OperationStatus
    [CLASS_RECON] Processing class: OperationStatus
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: admin_manager.OperationStatus with 1 parents
      [CLASS_CONTEXT] Entered class: admin_manager.OperationStatus
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationStatus
      [CLASS_ATTR] Added attribute PENDING to admin_manager.OperationStatus: {'type': 'auto'}
      [CLASS_ATTR] PENDING: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationStatus
      [CLASS_ATTR] Added attribute IN_PROGRESS to admin_manager.OperationStatus: {'type': 'auto'}
      [CLASS_ATTR] IN_PROGRESS: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationStatus
      [CLASS_ATTR] Added attribute COMPLETED to admin_manager.OperationStatus: {'type': 'auto'}
      [CLASS_ATTR] COMPLETED: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationStatus
      [CLASS_ATTR] Added attribute FAILED to admin_manager.OperationStatus: {'type': 'auto'}
      [CLASS_ATTR] FAILED: auto
      [CLASS_ASSIGN] Processing class-level assignment in admin_manager.OperationStatus
      [CLASS_ATTR] Added attribute CANCELLED to admin_manager.OperationStatus: {'type': 'auto'}
      [CLASS_ATTR] CANCELLED: auto
      [CLASS_CONTEXT] Exiting class: admin_manager.OperationStatus
    [CLASS_FINALIZE] Updated admin_manager.OperationStatus with 5 attributes
    [RECON_CLASS] Completed class analysis: OperationStatus
    [RECON_CLASS] Starting class analysis: OperationResult
    [CLASS_RECON] Processing class: OperationResult
    [CLASS_RECON] Stored class: admin_manager.OperationResult with 0 parents
      [CLASS_CONTEXT] Entered class: admin_manager.OperationResult
      [CLASS_ATTR] Added attribute operation_id to admin_manager.OperationResult: {'type': 'str'}
      [CLASS_ANN_ATTR] operation_id: str
      [CLASS_ATTR] Added attribute operation_type to admin_manager.OperationResult: {'type': 'OperationType'}
      [CLASS_ANN_ATTR] operation_type: OperationType
      [CLASS_ATTR] Added attribute status to admin_manager.OperationResult: {'type': 'OperationStatus'}
      [CLASS_ANN_ATTR] status: OperationStatus
      [CLASS_ATTR] Added attribute start_time to admin_manager.OperationResult: {'type': 'datetime'}
      [CLASS_ANN_ATTR] start_time: datetime
      [CLASS_ATTR] Added attribute end_time to admin_manager.OperationResult: {'type': 'Optional[datetime]'}
      [CLASS_ANN_ATTR] end_time: Optional[datetime]
      [CLASS_ATTR] Added attribute success to admin_manager.OperationResult: {'type': 'bool'}
      [CLASS_ANN_ATTR] success: bool
      [CLASS_ATTR] Added attribute message to admin_manager.OperationResult: {'type': 'str'}
      [CLASS_ANN_ATTR] message: str
      [CLASS_ATTR] Added attribute data to admin_manager.OperationResult: {'type': 'Dict[str, Any]'}
      [CLASS_ANN_ATTR] data: Dict[str, Any]
      [CLASS_ATTR] Added attribute errors to admin_manager.OperationResult: {'type': 'List[str]'}
      [CLASS_ANN_ATTR] errors: List[str]
      [CLASS_ATTR] Added attribute warnings to admin_manager.OperationResult: {'type': 'List[str]'}
      [CLASS_ANN_ATTR] warnings: List[str]
    [FUNCTION_RECON] Processing method: get_duration
      [RETURN_TYPE] Found return type: Optional[timedelta]
    [FUNCTION_RECON] Stored method: admin_manager.OperationResult.get_duration
    [FUNCTION_RECON] Processing method: add_error
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] error: str
    [FUNCTION_RECON] Stored method: admin_manager.OperationResult.add_error
    [FUNCTION_RECON] Processing method: add_warning
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] warning: str
    [FUNCTION_RECON] Stored method: admin_manager.OperationResult.add_warning
      [CLASS_CONTEXT] Exiting class: admin_manager.OperationResult
    [CLASS_FINALIZE] Updated admin_manager.OperationResult with 10 attributes
    [RECON_CLASS] Completed class analysis: OperationResult
    [RECON_CLASS] Starting class analysis: AdminManager
    [CLASS_RECON] Processing class: AdminManager
    [CLASS_RECON] Stored class: admin_manager.AdminManager with 0 parents
      [CLASS_CONTEXT] Entered class: admin_manager.AdminManager
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager.__init__
    [FUNCTION_RECON] Processing method: _initialize_system_config
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._initialize_system_config
    [FUNCTION_RECON] Processing method: execute_operation
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] operation_type: str
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager.execute_operation
    [FUNCTION_RECON] Processing method: _execute_specific_operation
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._execute_specific_operation
    [FUNCTION_RECON] Processing method: _handle_user_management
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_user_management
    [FUNCTION_RECON] Processing method: _handle_system_configuration
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_system_configuration
    [FUNCTION_RECON] Processing method: _handle_data_migration
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_data_migration
    [FUNCTION_RECON] Processing method: _handle_security_audit
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_security_audit
    [FUNCTION_RECON] Processing method: _handle_performance_tuning
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_performance_tuning
    [FUNCTION_RECON] Processing method: _handle_backup_restore
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_backup_restore
    [FUNCTION_RECON] Processing method: _handle_monitoring_setup
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._handle_monitoring_setup
    [FUNCTION_RECON] Processing method: _result_to_dict
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] result: OperationResult
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._result_to_dict
    [FUNCTION_RECON] Processing method: _add_audit_entry
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] result: OperationResult
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager._add_audit_entry
    [FUNCTION_RECON] Processing method: get_operation_status
      [RETURN_TYPE] Found return type: Optional[Dict[str, Any]]
      [PARAM_TYPE] operation_id: str
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager.get_operation_status
    [FUNCTION_RECON] Processing method: get_active_operations
      [RETURN_TYPE] Found return type: List[str]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager.get_active_operations
    [FUNCTION_RECON] Processing method: get_system_status
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager.get_system_status
    [FUNCTION_RECON] Processing method: cancel_operation
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] operation_id: str
    [FUNCTION_RECON] Stored method: admin_manager.AdminManager.cancel_operation
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] operations_history: Dict[str, OperationResult]
      [ATTR_ANNOT] active_operations: Set[str]
      [ATTR_FROM_VALUE] operation_lock inferred as: threading.RLock
      [ATTR_ANNOT] admin_permissions: Dict[str, Set[OperationType]]
      [ATTR_ANNOT] system_config: Dict[str, Any]
      [ATTR_ANNOT] audit_log: List[Dict[str, Any]]
    [INIT_ATTRS] Found 6 attributes
      [CLASS_ATTR] Added attribute operations_history to admin_manager.AdminManager: {'type': 'Dict[str, OperationResult]'}
      [CLASS_ATTR] Added attribute active_operations to admin_manager.AdminManager: {'type': 'Set[str]'}
      [CLASS_ATTR] Added attribute operation_lock to admin_manager.AdminManager: {'type': 'threading.RLock'}
      [CLASS_ATTR] Added attribute admin_permissions to admin_manager.AdminManager: {'type': 'Dict[str, Set[OperationType]]'}
      [CLASS_ATTR] Added attribute system_config to admin_manager.AdminManager: {'type': 'Dict[str, Any]'}
      [CLASS_ATTR] Added attribute audit_log to admin_manager.AdminManager: {'type': 'List[Dict[str, Any]]'}
      [CLASS_CONTEXT] Exiting class: admin_manager.AdminManager
    [CLASS_FINALIZE] Updated admin_manager.AdminManager with 6 attributes
    [RECON_CLASS] Completed class analysis: AdminManager
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] manager: AdminManager
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] result: manager.execute_operation
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] result: manager.execute_operation
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] status: manager.get_system_status
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 4 classes
  [RECON_SUMMARY] Found 20 functions/methods
  [RECON_SUMMARY] Found 3 state variables
  [RECON_SUMMARY] Found 0 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 4 classes
    Found 20 functions/methods
    Found 3 state variables
    Found 0 external classes
    Found 0 external functions
  === Analyzing database_manager.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: database_manager
      [IMPORT] Processing direct imports
    [EXTERNAL_MODULE] Direct import: threading
      [IMPORT] Processing direct imports
      [IMPORT] Processing direct imports
    [RECON_CLASS] Starting class analysis: DatabaseConnection
    [CLASS_RECON] Processing class: DatabaseConnection
    [CLASS_RECON] Stored class: database_manager.DatabaseConnection with 0 parents
      [CLASS_CONTEXT] Entered class: database_manager.DatabaseConnection
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] connection_id: str
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.__init__
    [FUNCTION_RECON] Processing method: execute
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] query: str
      [PARAM_TYPE] params: Optional[tuple]
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.execute
    [FUNCTION_RECON] Processing method: commit
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.commit
    [FUNCTION_RECON] Processing method: rollback
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.rollback
    [FUNCTION_RECON] Processing method: begin_transaction
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] isolation_level: Optional[str]
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.begin_transaction
    [FUNCTION_RECON] Processing method: close
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.close
    [FUNCTION_RECON] Processing method: is_connected
      [RETURN_TYPE] Found return type: bool
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.is_connected
    [FUNCTION_RECON] Processing method: get_stats
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: database_manager.DatabaseConnection.get_stats
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter connection_id has type hint: str
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] connection_id = connection_id : str
      [ATTR_FROM_VALUE] is_open inferred as: int
      [ATTR_FROM_VALUE] in_transaction inferred as: int
      [ATTR_FROM_VALUE] isolation_level inferred as: str
      [ATTR_FROM_VALUE] query_count inferred as: int
      [ATTR_FROM_VALUE] last_query_time inferred as: time.time
      [ATTR_FROM_VALUE] lock inferred as: threading.RLock
    [INIT_ATTRS] Found 7 attributes
      [CLASS_ATTR] Added attribute connection_id to database_manager.DatabaseConnection: {'type': 'str'}
      [CLASS_ATTR] Added attribute is_open to database_manager.DatabaseConnection: {'type': 'int'}
      [CLASS_ATTR] Added attribute in_transaction to database_manager.DatabaseConnection: {'type': 'int'}
      [CLASS_ATTR] Added attribute isolation_level to database_manager.DatabaseConnection: {'type': 'str'}
      [CLASS_ATTR] Added attribute query_count to database_manager.DatabaseConnection: {'type': 'int'}
      [CLASS_ATTR] Added attribute last_query_time to database_manager.DatabaseConnection: {'type': 'time.time'}
      [CLASS_ATTR] Added attribute lock to database_manager.DatabaseConnection: {'type': 'threading.RLock'}
      [CLASS_CONTEXT] Exiting class: database_manager.DatabaseConnection
    [CLASS_FINALIZE] Updated database_manager.DatabaseConnection with 7 attributes
    [RECON_CLASS] Completed class analysis: DatabaseConnection
    [RECON_CLASS] Starting class analysis: TransactionManager
    [CLASS_RECON] Processing class: TransactionManager
    [CLASS_RECON] Stored class: database_manager.TransactionManager with 0 parents
      [CLASS_CONTEXT] Entered class: database_manager.TransactionManager
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] connection: DatabaseConnection
      [PARAM_TYPE] isolation_level: str
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.__init__
    [FUNCTION_RECON] Processing method: begin_transaction
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.begin_transaction
    [FUNCTION_RECON] Processing method: commit_transaction
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.commit_transaction
    [FUNCTION_RECON] Processing method: rollback_transaction
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.rollback_transaction
    [FUNCTION_RECON] Processing method: close_connection
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.close_connection
    [FUNCTION_RECON] Processing method: execute_in_transaction
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] query: str
      [PARAM_TYPE] params: Optional[tuple]
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.execute_in_transaction
    [FUNCTION_RECON] Processing method: transaction_context
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.transaction_context
    [FUNCTION_RECON] Processing method: get_transaction_info
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: database_manager.TransactionManager.get_transaction_info
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter connection has type hint: DatabaseConnection
      [INIT_PARAM] Parameter isolation_level has type hint: str
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] connection = connection : DatabaseConnection
      [ATTR_FROM_PARAM] isolation_level = isolation_level : str
      [ATTR_FROM_VALUE] transaction_started inferred as: int
      [ATTR_ANNOT] start_time: Optional[float]
      [ATTR_FROM_VALUE] operations_count inferred as: int
    [INIT_ATTRS] Found 5 attributes
      [CLASS_ATTR] Added attribute connection to database_manager.TransactionManager: {'type': 'DatabaseConnection'}
      [CLASS_ATTR] Added attribute isolation_level to database_manager.TransactionManager: {'type': 'str'}
      [CLASS_ATTR] Added attribute transaction_started to database_manager.TransactionManager: {'type': 'int'}
      [CLASS_ATTR] Added attribute start_time to database_manager.TransactionManager: {'type': 'Optional[float]'}
      [CLASS_ATTR] Added attribute operations_count to database_manager.TransactionManager: {'type': 'int'}
      [CLASS_CONTEXT] Exiting class: database_manager.TransactionManager
    [CLASS_FINALIZE] Updated database_manager.TransactionManager with 5 attributes
    [RECON_CLASS] Completed class analysis: TransactionManager
    [MODULE_ANN_STATE] _connection_pool: List[DatabaseConnection]
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] _pool_lock: threading.Lock
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] _connection_counter: Unknown
    [FUNCTION_RECON] Processing function: get_db_connection
      [RETURN_TYPE] Found return type: DatabaseConnection
    [FUNCTION_RECON] Stored function: database_manager.get_db_connection
    [FUNCTION_RECON] Processing function: close_all_connections
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored function: database_manager.close_all_connections
    [FUNCTION_RECON] Processing function: get_pool_stats
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored function: database_manager.get_pool_stats
    [FUNCTION_RECON] Processing function: create_transaction_manager
      [RETURN_TYPE] Found return type: TransactionManager
      [PARAM_TYPE] isolation_level: str
    [FUNCTION_RECON] Stored function: database_manager.create_transaction_manager
    [FUNCTION_RECON] Processing function: database_transaction
      [PARAM_TYPE] isolation_level: str
    [FUNCTION_RECON] Stored function: database_manager.database_transaction
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] conn: get_db_connection
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] tx_manager: TransactionManager
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] stats: get_pool_stats
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 2 classes
  [RECON_SUMMARY] Found 21 functions/methods
  [RECON_SUMMARY] Found 6 state variables
  [RECON_SUMMARY] Found 0 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 2 classes
    Found 21 functions/methods
    Found 6 state variables
    Found 0 external classes
    Found 0 external functions
  === Analyzing decorators.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: decorators
      [IMPORT] Processing direct imports
      [IMPORT] Processing direct imports
    [EXTERNAL_IMPORT] Processing from threading
    [EXTERNAL_CLASS] Added: threading.Lock (alias: Lock)
      [IMPORT] Processing direct imports
    [MODULE_ANN_STATE] PERFORMANCE_METRICS: Dict[str, List[float]]
    [MODULE_ANN_STATE] AUTH_CACHE: Dict[str, bool]
    [MODULE_ANN_STATE] RATE_LIMIT_CACHE: Dict[str, Dict[str, Any]]
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] TRACE_LOCK: Lock
    [RECON_CLASS] Starting class analysis: DecoratorRegistry
    [CLASS_RECON] Processing class: DecoratorRegistry
    [CLASS_RECON] Stored class: decorators.DecoratorRegistry with 0 parents
      [CLASS_CONTEXT] Entered class: decorators.DecoratorRegistry
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: decorators.DecoratorRegistry.__init__
    [FUNCTION_RECON] Processing method: register_decorator
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] name: str
      [PARAM_TYPE] decorator: Callable
    [FUNCTION_RECON] Stored method: decorators.DecoratorRegistry.register_decorator
    [FUNCTION_RECON] Processing method: get_decorator_chain
      [RETURN_TYPE] Found return type: List[str]
      [PARAM_TYPE] func_name: str
    [FUNCTION_RECON] Stored method: decorators.DecoratorRegistry.get_decorator_chain
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] registered_decorators: Dict[str, Callable]
      [ATTR_ANNOT] decorator_chains: Dict[str, List[str]]
      [ATTR_ANNOT] active_traces: List[str]
    [INIT_ATTRS] Found 3 attributes
      [CLASS_ATTR] Added attribute registered_decorators to decorators.DecoratorRegistry: {'type': 'Dict[str, Callable]'}
      [CLASS_ATTR] Added attribute decorator_chains to decorators.DecoratorRegistry: {'type': 'Dict[str, List[str]]'}
      [CLASS_ATTR] Added attribute active_traces to decorators.DecoratorRegistry: {'type': 'List[str]'}
      [CLASS_CONTEXT] Exiting class: decorators.DecoratorRegistry
    [CLASS_FINALIZE] Updated decorators.DecoratorRegistry with 3 attributes
    [RECON_CLASS] Completed class analysis: DecoratorRegistry
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] _decorator_registry: DecoratorRegistry
    [FUNCTION_RECON] Processing function: trace
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] func: Optional[Callable]
    [FUNCTION_RECON] Stored function: decorators.trace
    [FUNCTION_RECON] Processing function: monitor_performance
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] func: Optional[Callable]
    [FUNCTION_RECON] Stored function: decorators.monitor_performance
    [FUNCTION_RECON] Processing function: validate_auth
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] required_role: Optional[str]
      [PARAM_TYPE] check_session: bool
    [FUNCTION_RECON] Stored function: decorators.validate_auth
    [FUNCTION_RECON] Processing function: rate_limit
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] calls: int
      [PARAM_TYPE] period: int
      [PARAM_TYPE] per_user: bool
      [PARAM_TYPE] key_func: Optional[Callable]
    [FUNCTION_RECON] Stored function: decorators.rate_limit
    [RECON_CLASS] Starting class analysis: ClassBasedDecorator
    [CLASS_RECON] Processing class: ClassBasedDecorator
    [CLASS_RECON] Stored class: decorators.ClassBasedDecorator with 0 parents
      [CLASS_CONTEXT] Entered class: decorators.ClassBasedDecorator
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] config: Dict[str, Any]
    [FUNCTION_RECON] Stored method: decorators.ClassBasedDecorator.__init__
    [FUNCTION_RECON] Processing method: __call__
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] func: Callable
    [FUNCTION_RECON] Stored method: decorators.ClassBasedDecorator.__call__
    [FUNCTION_RECON] Processing method: _validate_arguments
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] func: Callable
      [PARAM_TYPE] args: tuple
      [PARAM_TYPE] kwargs: dict
    [FUNCTION_RECON] Stored method: decorators.ClassBasedDecorator._validate_arguments
    [FUNCTION_RECON] Processing method: _transform_result
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] result: Any
    [FUNCTION_RECON] Stored method: decorators.ClassBasedDecorator._transform_result
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter config has type hint: Dict[str, Any]
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] config = config : Dict[str, Any]
      [ATTR_FROM_VALUE] call_count inferred as: int
      [ATTR_FROM_VALUE] last_call_time inferred as: int
    [INIT_ATTRS] Found 3 attributes
      [CLASS_ATTR] Added attribute config to decorators.ClassBasedDecorator: {'type': 'Dict[str, Any]'}
      [CLASS_ATTR] Added attribute call_count to decorators.ClassBasedDecorator: {'type': 'int'}
      [CLASS_ATTR] Added attribute last_call_time to decorators.ClassBasedDecorator: {'type': 'int'}
      [CLASS_CONTEXT] Exiting class: decorators.ClassBasedDecorator
    [CLASS_FINALIZE] Updated decorators.ClassBasedDecorator with 3 attributes
    [RECON_CLASS] Completed class analysis: ClassBasedDecorator
    [FUNCTION_RECON] Processing function: create_custom_decorator
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] name: str
      [PARAM_TYPE] pre_hook: Optional[Callable]
      [PARAM_TYPE] post_hook: Optional[Callable]
      [PARAM_TYPE] error_hook: Optional[Callable]
    [FUNCTION_RECON] Stored function: decorators.create_custom_decorator
    [FUNCTION_RECON] Processing function: multi_decorator
      [RETURN_TYPE] Found return type: Callable
    [FUNCTION_RECON] Stored function: decorators.multi_decorator
    [FUNCTION_RECON] Processing function: conditional_decorator
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] condition: Union[bool, Callable]
      [PARAM_TYPE] decorator: Callable
    [FUNCTION_RECON] Stored function: decorators.conditional_decorator
    [FUNCTION_RECON] Processing function: advanced_cache
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] ttl: int
      [PARAM_TYPE] key_func: Optional[Callable]
      [PARAM_TYPE] serializer: Optional[Callable]
      [PARAM_TYPE] validator: Optional[Callable]
    [FUNCTION_RECON] Stored function: decorators.advanced_cache
    [FUNCTION_RECON] Processing function: create_monitoring_decorator
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] metrics_collector: Any
    [FUNCTION_RECON] Stored function: decorators.create_monitoring_decorator
    [FUNCTION_RECON] Processing function: transaction_decorator
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] isolation_level: str
      [PARAM_TYPE] rollback_on: Optional[List[Type[Exception]]]
    [FUNCTION_RECON] Stored function: decorators.transaction_decorator
    [RECON_CLASS] Starting class analysis: PropertyDecorator
    [CLASS_RECON] Processing class: PropertyDecorator
    [CLASS_RECON] Stored class: decorators.PropertyDecorator with 0 parents
      [CLASS_CONTEXT] Entered class: decorators.PropertyDecorator
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] validator: Optional[Callable]
      [PARAM_TYPE] transformer: Optional[Callable]
      [PARAM_TYPE] cache: bool
    [FUNCTION_RECON] Stored method: decorators.PropertyDecorator.__init__
    [FUNCTION_RECON] Processing method: __call__
      [RETURN_TYPE] Found return type: property
      [PARAM_TYPE] func: Callable
    [FUNCTION_RECON] Stored method: decorators.PropertyDecorator.__call__
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter validator has type hint: Optional[Callable]
      [INIT_PARAM] Parameter transformer has type hint: Optional[Callable]
      [INIT_PARAM] Parameter cache has type hint: bool
    [INIT_ANALYSIS] Found 3 parameter type hints
      [ATTR_FROM_PARAM] validator = validator : Optional[Callable]
      [ATTR_FROM_PARAM] transformer = transformer : Optional[Callable]
      [ATTR_FROM_PARAM] cache = cache : bool
      [ATTR_ANNOT] _cache_storage: Dict[int, Any]
    [INIT_ATTRS] Found 4 attributes
      [CLASS_ATTR] Added attribute validator to decorators.PropertyDecorator: {'type': 'Optional[Callable]'}
      [CLASS_ATTR] Added attribute transformer to decorators.PropertyDecorator: {'type': 'Optional[Callable]'}
      [CLASS_ATTR] Added attribute cache to decorators.PropertyDecorator: {'type': 'bool'}
      [CLASS_ATTR] Added attribute _cache_storage to decorators.PropertyDecorator: {'type': 'Dict[int, Any]'}
      [CLASS_CONTEXT] Exiting class: decorators.PropertyDecorator
    [CLASS_FINALIZE] Updated decorators.PropertyDecorator with 4 attributes
    [RECON_CLASS] Completed class analysis: PropertyDecorator
    [FUNCTION_RECON] Processing function: complex_calculation
      [RETURN_TYPE] Found return type: Dict[str, float]
      [PARAM_TYPE] data: List[Dict[str, Any]]
      [PARAM_TYPE] multiplier: float
    [FUNCTION_RECON] Stored function: decorators.complex_calculation
    [FUNCTION_RECON] Processing function: admin_operation
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] operation_type: str
      [PARAM_TYPE] parameters: Dict[str, Any]
    [FUNCTION_RECON] Stored function: decorators.admin_operation
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] performance_monitor: create_custom_decorator
    [FUNCTION_RECON] Processing function: cached_expensive_operation
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] input_data: Any
    [FUNCTION_RECON] Stored function: decorators.cached_expensive_operation
    [FUNCTION_RECON] Processing function: debug_function
      [RETURN_TYPE] Found return type: str
    [FUNCTION_RECON] Stored function: decorators.debug_function
    [FUNCTION_RECON] Processing function: multi_decorated_function
      [RETURN_TYPE] Found return type: str
      [PARAM_TYPE] param: str
    [FUNCTION_RECON] Stored function: decorators.multi_decorated_function
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 3 classes
  [RECON_SUMMARY] Found 24 functions/methods
  [RECON_SUMMARY] Found 6 state variables
  [RECON_SUMMARY] Found 1 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 3 classes
    Found 24 functions/methods
    Found 6 state variables
    Found 1 external classes
    Found 0 external functions
  === Analyzing event_validator.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: event_validator
      [IMPORT] Processing direct imports
      [IMPORT] Processing direct imports
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] T: TypeVar
    [RECON_CLASS] Starting class analysis: ValidationLevel
    [CLASS_RECON] Processing class: ValidationLevel
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: event_validator.ValidationLevel with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationLevel
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationLevel
      [CLASS_ATTR] Added attribute INFO to event_validator.ValidationLevel: {'type': 'auto'}
      [CLASS_ATTR] INFO: auto
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationLevel
      [CLASS_ATTR] Added attribute WARNING to event_validator.ValidationLevel: {'type': 'auto'}
      [CLASS_ATTR] WARNING: auto
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationLevel
      [CLASS_ATTR] Added attribute ERROR to event_validator.ValidationLevel: {'type': 'auto'}
      [CLASS_ATTR] ERROR: auto
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationLevel
      [CLASS_ATTR] Added attribute CRITICAL to event_validator.ValidationLevel: {'type': 'auto'}
      [CLASS_ATTR] CRITICAL: auto
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationLevel
    [CLASS_FINALIZE] Updated event_validator.ValidationLevel with 4 attributes
    [RECON_CLASS] Completed class analysis: ValidationLevel
    [RECON_CLASS] Starting class analysis: ValidationResult
    [CLASS_RECON] Processing class: ValidationResult
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: event_validator.ValidationResult with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationResult
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationResult
      [CLASS_ATTR] Added attribute VALID to event_validator.ValidationResult: {'type': 'auto'}
      [CLASS_ATTR] VALID: auto
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationResult
      [CLASS_ATTR] Added attribute INVALID to event_validator.ValidationResult: {'type': 'auto'}
      [CLASS_ATTR] INVALID: auto
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationResult
      [CLASS_ATTR] Added attribute REQUIRES_REVIEW to event_validator.ValidationResult: {'type': 'auto'}
      [CLASS_ATTR] REQUIRES_REVIEW: auto
      [CLASS_ASSIGN] Processing class-level assignment in event_validator.ValidationResult
      [CLASS_ATTR] Added attribute CONDITIONALLY_VALID to event_validator.ValidationResult: {'type': 'auto'}
      [CLASS_ATTR] CONDITIONALLY_VALID: auto
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationResult
    [CLASS_FINALIZE] Updated event_validator.ValidationResult with 4 attributes
    [RECON_CLASS] Completed class analysis: ValidationResult
    [RECON_CLASS] Starting class analysis: ValidationError
    [CLASS_RECON] Processing class: ValidationError
    [CLASS_RECON] Stored class: event_validator.ValidationError with 0 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationError
      [CLASS_ATTR] Added attribute field to event_validator.ValidationError: {'type': 'str'}
      [CLASS_ANN_ATTR] field: str
      [CLASS_ATTR] Added attribute message to event_validator.ValidationError: {'type': 'str'}
      [CLASS_ANN_ATTR] message: str
      [CLASS_ATTR] Added attribute level to event_validator.ValidationError: {'type': 'ValidationLevel'}
      [CLASS_ANN_ATTR] level: ValidationLevel
      [CLASS_ATTR] Added attribute code to event_validator.ValidationError: {'type': 'str'}
      [CLASS_ANN_ATTR] code: str
      [CLASS_ATTR] Added attribute context to event_validator.ValidationError: {'type': 'Dict[str, Any]'}
      [CLASS_ANN_ATTR] context: Dict[str, Any]
      [CLASS_ATTR] Added attribute suggestions to event_validator.ValidationError: {'type': 'List[str]'}
      [CLASS_ANN_ATTR] suggestions: List[str]
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationError
    [CLASS_FINALIZE] Updated event_validator.ValidationError with 6 attributes
    [RECON_CLASS] Completed class analysis: ValidationError
    [RECON_CLASS] Starting class analysis: ValidationReport
    [CLASS_RECON] Processing class: ValidationReport
    [CLASS_RECON] Stored class: event_validator.ValidationReport with 0 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationReport
      [CLASS_ATTR] Added attribute result to event_validator.ValidationReport: {'type': 'ValidationResult'}
      [CLASS_ANN_ATTR] result: ValidationResult
      [CLASS_ATTR] Added attribute errors to event_validator.ValidationReport: {'type': 'List[ValidationError]'}
      [CLASS_ANN_ATTR] errors: List[ValidationError]
      [CLASS_ATTR] Added attribute warnings to event_validator.ValidationReport: {'type': 'List[ValidationError]'}
      [CLASS_ANN_ATTR] warnings: List[ValidationError]
      [CLASS_ATTR] Added attribute metadata to event_validator.ValidationReport: {'type': 'Dict[str, Any]'}
      [CLASS_ANN_ATTR] metadata: Dict[str, Any]
      [CLASS_ATTR] Added attribute validation_time to event_validator.ValidationReport: {'type': 'float'}
      [CLASS_ANN_ATTR] validation_time: float
      [CLASS_ATTR] Added attribute rules_applied to event_validator.ValidationReport: {'type': 'List[str]'}
      [CLASS_ANN_ATTR] rules_applied: List[str]
    [FUNCTION_RECON] Processing method: is_valid
      [RETURN_TYPE] Found return type: bool
    [FUNCTION_RECON] Stored method: event_validator.ValidationReport.is_valid
    [FUNCTION_RECON] Processing method: has_errors
      [RETURN_TYPE] Found return type: bool
    [FUNCTION_RECON] Stored method: event_validator.ValidationReport.has_errors
    [FUNCTION_RECON] Processing method: has_warnings
      [RETURN_TYPE] Found return type: bool
    [FUNCTION_RECON] Stored method: event_validator.ValidationReport.has_warnings
    [FUNCTION_RECON] Processing method: get_error_codes
      [RETURN_TYPE] Found return type: List[str]
    [FUNCTION_RECON] Stored method: event_validator.ValidationReport.get_error_codes
    [FUNCTION_RECON] Processing method: add_error
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] field: str
      [PARAM_TYPE] message: str
      [PARAM_TYPE] code: str
      [PARAM_TYPE] level: ValidationLevel
      [PARAM_TYPE] context: Dict[str, Any]
      [PARAM_TYPE] suggestions: List[str]
    [FUNCTION_RECON] Stored method: event_validator.ValidationReport.add_error
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationReport
    [CLASS_FINALIZE] Updated event_validator.ValidationReport with 6 attributes
    [RECON_CLASS] Completed class analysis: ValidationReport
    [RECON_CLASS] Starting class analysis: ValidationRule
    [CLASS_RECON] Processing class: ValidationRule
      [INHERITANCE] Simple parent: Protocol
    [CLASS_RECON] Stored class: event_validator.ValidationRule with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationRule
    [FUNCTION_RECON] Processing method: validate
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.ValidationRule.validate
    [FUNCTION_RECON] Processing method: get_rule_name
      [RETURN_TYPE] Found return type: str
    [FUNCTION_RECON] Stored method: event_validator.ValidationRule.get_rule_name
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationRule
    [CLASS_FINALIZE] Updated event_validator.ValidationRule with 0 attributes
    [RECON_CLASS] Completed class analysis: ValidationRule
    [RECON_CLASS] Starting class analysis: BaseValidationRule
    [CLASS_RECON] Processing class: BaseValidationRule
      [INHERITANCE] Simple parent: ABC
    [CLASS_RECON] Stored class: event_validator.BaseValidationRule with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.BaseValidationRule
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] rule_name: str
      [PARAM_TYPE] description: str
    [FUNCTION_RECON] Stored method: event_validator.BaseValidationRule.__init__
    [FUNCTION_RECON] Processing method: _validate_implementation
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.BaseValidationRule._validate_implementation
    [FUNCTION_RECON] Processing method: validate
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.BaseValidationRule.validate
    [FUNCTION_RECON] Processing method: get_rule_name
      [RETURN_TYPE] Found return type: str
    [FUNCTION_RECON] Stored method: event_validator.BaseValidationRule.get_rule_name
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter rule_name has type hint: str
      [INIT_PARAM] Parameter description has type hint: str
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] rule_name = rule_name : str
      [ATTR_FROM_PARAM] description = description : str
      [ATTR_FROM_VALUE] enabled inferred as: int
      [ATTR_FROM_VALUE] priority inferred as: int
      [ATTR_ANNOT] dependencies: List[str]
    [INIT_ATTRS] Found 5 attributes
      [CLASS_ATTR] Added attribute rule_name to event_validator.BaseValidationRule: {'type': 'str'}
      [CLASS_ATTR] Added attribute description to event_validator.BaseValidationRule: {'type': 'str'}
      [CLASS_ATTR] Added attribute enabled to event_validator.BaseValidationRule: {'type': 'int'}
      [CLASS_ATTR] Added attribute priority to event_validator.BaseValidationRule: {'type': 'int'}
      [CLASS_ATTR] Added attribute dependencies to event_validator.BaseValidationRule: {'type': 'List[str]'}
      [CLASS_CONTEXT] Exiting class: event_validator.BaseValidationRule
    [CLASS_FINALIZE] Updated event_validator.BaseValidationRule with 5 attributes
    [RECON_CLASS] Completed class analysis: BaseValidationRule
    [RECON_CLASS] Starting class analysis: RequiredFieldRule
    [CLASS_RECON] Processing class: RequiredFieldRule
      [INHERITANCE] Simple parent: BaseValidationRule
    [CLASS_RECON] Stored class: event_validator.RequiredFieldRule with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.RequiredFieldRule
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] required_fields: List[str]
    [FUNCTION_RECON] Stored method: event_validator.RequiredFieldRule.__init__
    [FUNCTION_RECON] Processing method: _validate_implementation
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.RequiredFieldRule._validate_implementation
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter required_fields has type hint: List[str]
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] required_fields = required_fields : List[str]
    [INIT_ATTRS] Found 1 attributes
      [CLASS_ATTR] Added attribute required_fields to event_validator.RequiredFieldRule: {'type': 'List[str]'}
      [CLASS_CONTEXT] Exiting class: event_validator.RequiredFieldRule
    [CLASS_FINALIZE] Updated event_validator.RequiredFieldRule with 1 attributes
    [RECON_CLASS] Completed class analysis: RequiredFieldRule
    [RECON_CLASS] Starting class analysis: DataTypeRule
    [CLASS_RECON] Processing class: DataTypeRule
      [INHERITANCE] Simple parent: BaseValidationRule
    [CLASS_RECON] Stored class: event_validator.DataTypeRule with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.DataTypeRule
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] field_types: Dict[str, Union[type, List[type]]]
    [FUNCTION_RECON] Stored method: event_validator.DataTypeRule.__init__
    [FUNCTION_RECON] Processing method: _validate_implementation
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.DataTypeRule._validate_implementation
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter field_types has type hint: Dict[str, Union[type, List[type]]]
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] field_types = field_types : Dict[str, Union[type, List[type]]]
    [INIT_ATTRS] Found 1 attributes
      [CLASS_ATTR] Added attribute field_types to event_validator.DataTypeRule: {'type': 'Dict[str, Union[type, List[type]]]'}
      [CLASS_CONTEXT] Exiting class: event_validator.DataTypeRule
    [CLASS_FINALIZE] Updated event_validator.DataTypeRule with 1 attributes
    [RECON_CLASS] Completed class analysis: DataTypeRule
    [RECON_CLASS] Starting class analysis: RegexValidationRule
    [CLASS_RECON] Processing class: RegexValidationRule
      [INHERITANCE] Simple parent: BaseValidationRule
    [CLASS_RECON] Stored class: event_validator.RegexValidationRule with 1 parents
      [CLASS_CONTEXT] Entered class: event_validator.RegexValidationRule
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] field_patterns: Dict[str, str]
    [FUNCTION_RECON] Stored method: event_validator.RegexValidationRule.__init__
    [FUNCTION_RECON] Processing method: _validate_implementation
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.RegexValidationRule._validate_implementation
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter field_patterns has type hint: Dict[str, str]
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] field_patterns = field_patterns : Dict[str, str]
      [ATTR_FROM_VALUE] compiled_patterns inferred as: None
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute field_patterns to event_validator.RegexValidationRule: {'type': 'Dict[str, str]'}
      [CLASS_ATTR] Added attribute compiled_patterns to event_validator.RegexValidationRule: {'type': 'Unknown'}
      [CLASS_CONTEXT] Exiting class: event_validator.RegexValidationRule
    [CLASS_FINALIZE] Updated event_validator.RegexValidationRule with 2 attributes
    [RECON_CLASS] Completed class analysis: RegexValidationRule
    [RECON_CLASS] Starting class analysis: ValidationEngine
    [CLASS_RECON] Processing class: ValidationEngine
    [CLASS_RECON] Stored class: event_validator.ValidationEngine with 0 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationEngine
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine.__init__
    [FUNCTION_RECON] Processing method: add_rule
      [RETURN_TYPE] Found return type: 'ValidationEngine'
      [PARAM_TYPE] rule: BaseValidationRule
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine.add_rule
    [FUNCTION_RECON] Processing method: add_rules
      [RETURN_TYPE] Found return type: 'ValidationEngine'
      [PARAM_TYPE] rules: List[BaseValidationRule]
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine.add_rules
    [FUNCTION_RECON] Processing method: set_global_context
      [RETURN_TYPE] Found return type: 'ValidationEngine'
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine.set_global_context
    [FUNCTION_RECON] Processing method: validate
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine.validate
    [FUNCTION_RECON] Processing method: _generate_cache_key
      [RETURN_TYPE] Found return type: str
      [PARAM_TYPE] data: Any
      [PARAM_TYPE] context: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine._generate_cache_key
    [FUNCTION_RECON] Processing method: _merge_reports
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] main_report: ValidationReport
      [PARAM_TYPE] rule_report: ValidationReport
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine._merge_reports
    [FUNCTION_RECON] Processing method: create_rule_builder
      [RETURN_TYPE] Found return type: 'ValidationRuleBuilder'
    [FUNCTION_RECON] Stored method: event_validator.ValidationEngine.create_rule_builder
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] rules: List[BaseValidationRule]
      [ATTR_ANNOT] global_context: Dict[str, Any]
      [ATTR_ANNOT] validation_cache: Dict[str, ValidationReport]
      [ATTR_FROM_VALUE] cache_enabled inferred as: int
    [INIT_ATTRS] Found 4 attributes
      [CLASS_ATTR] Added attribute rules to event_validator.ValidationEngine: {'type': 'List[BaseValidationRule]'}
      [CLASS_ATTR] Added attribute global_context to event_validator.ValidationEngine: {'type': 'Dict[str, Any]'}
      [CLASS_ATTR] Added attribute validation_cache to event_validator.ValidationEngine: {'type': 'Dict[str, ValidationReport]'}
      [CLASS_ATTR] Added attribute cache_enabled to event_validator.ValidationEngine: {'type': 'int'}
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationEngine
    [CLASS_FINALIZE] Updated event_validator.ValidationEngine with 4 attributes
    [RECON_CLASS] Completed class analysis: ValidationEngine
    [RECON_CLASS] Starting class analysis: ValidationRuleBuilder
    [CLASS_RECON] Processing class: ValidationRuleBuilder
    [CLASS_RECON] Stored class: event_validator.ValidationRuleBuilder with 0 parents
      [CLASS_CONTEXT] Entered class: event_validator.ValidationRuleBuilder
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] engine: ValidationEngine
    [FUNCTION_RECON] Stored method: event_validator.ValidationRuleBuilder.__init__
    [FUNCTION_RECON] Processing method: require_fields
      [RETURN_TYPE] Found return type: 'ValidationRuleBuilder'
    [FUNCTION_RECON] Stored method: event_validator.ValidationRuleBuilder.require_fields
    [FUNCTION_RECON] Processing method: field_types
      [RETURN_TYPE] Found return type: 'ValidationRuleBuilder'
    [FUNCTION_RECON] Stored method: event_validator.ValidationRuleBuilder.field_types
    [FUNCTION_RECON] Processing method: field_patterns
      [RETURN_TYPE] Found return type: 'ValidationRuleBuilder'
    [FUNCTION_RECON] Stored method: event_validator.ValidationRuleBuilder.field_patterns
    [FUNCTION_RECON] Processing method: build
      [RETURN_TYPE] Found return type: ValidationEngine
    [FUNCTION_RECON] Stored method: event_validator.ValidationRuleBuilder.build
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter engine has type hint: ValidationEngine
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] engine = engine : ValidationEngine
      [ATTR_ANNOT] current_rules: List[BaseValidationRule]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute engine to event_validator.ValidationRuleBuilder: {'type': 'ValidationEngine'}
      [CLASS_ATTR] Added attribute current_rules to event_validator.ValidationRuleBuilder: {'type': 'List[BaseValidationRule]'}
      [CLASS_CONTEXT] Exiting class: event_validator.ValidationRuleBuilder
    [CLASS_FINALIZE] Updated event_validator.ValidationRuleBuilder with 2 attributes
    [RECON_CLASS] Completed class analysis: ValidationRuleBuilder
    [RECON_CLASS] Starting class analysis: EventValidator
    [CLASS_RECON] Processing class: EventValidator
    [CLASS_RECON] Stored class: event_validator.EventValidator with 0 parents
      [CLASS_CONTEXT] Entered class: event_validator.EventValidator
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: event_validator.EventValidator.__init__
    [FUNCTION_RECON] Processing method: _setup_default_validations
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: event_validator.EventValidator._setup_default_validations
    [FUNCTION_RECON] Processing method: validate_event
      [RETURN_TYPE] Found return type: ValidationReport
      [PARAM_TYPE] event_data: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.EventValidator.validate_event
    [FUNCTION_RECON] Processing method: validate_result
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] result: Any
    [FUNCTION_RECON] Stored method: event_validator.EventValidator.validate_result
    [FUNCTION_RECON] Processing method: get_validation_details
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.EventValidator.get_validation_details
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_FROM_VALUE] validation_engine inferred as: ValidationEngine
      [ATTR_ANNOT] event_schemas: Dict[str, ValidationEngine]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute validation_engine to event_validator.EventValidator: {'type': 'ValidationEngine'}
      [CLASS_ATTR] Added attribute event_schemas to event_validator.EventValidator: {'type': 'Dict[str, ValidationEngine]'}
      [CLASS_CONTEXT] Exiting class: event_validator.EventValidator
    [CLASS_FINALIZE] Updated event_validator.EventValidator with 2 attributes
    [RECON_CLASS] Completed class analysis: EventValidator
    [RECON_CLASS] Starting class analysis: MessageValidator
    [CLASS_RECON] Processing class: MessageValidator
    [CLASS_RECON] Stored class: event_validator.MessageValidator with 0 parents
      [CLASS_CONTEXT] Entered class: event_validator.MessageValidator
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: event_validator.MessageValidator.__init__
    [FUNCTION_RECON] Processing method: _setup_default_filters
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: event_validator.MessageValidator._setup_default_filters
    [FUNCTION_RECON] Processing method: validate_message
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] message: str
    [FUNCTION_RECON] Stored method: event_validator.MessageValidator.validate_message
    [FUNCTION_RECON] Processing method: get_validation_details
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: event_validator.MessageValidator.get_validation_details
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] content_filters: List[Callable[[str], bool]]
      [ATTR_ANNOT] banned_patterns: List[re.Pattern]
      [ATTR_ANNOT] validation_cache: Dict[str, bool]
    [INIT_ATTRS] Found 3 attributes
      [CLASS_ATTR] Added attribute content_filters to event_validator.MessageValidator: {'type': 'List[Callable[[str], bool]]'}
      [CLASS_ATTR] Added attribute banned_patterns to event_validator.MessageValidator: {'type': 'List[re.Pattern]'}
      [CLASS_ATTR] Added attribute validation_cache to event_validator.MessageValidator: {'type': 'Dict[str, bool]'}
      [CLASS_CONTEXT] Exiting class: event_validator.MessageValidator
    [CLASS_FINALIZE] Updated event_validator.MessageValidator with 3 attributes
    [RECON_CLASS] Completed class analysis: MessageValidator
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] event_validator: EventValidator
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] message_validator: MessageValidator
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] test_event_data: Unknown
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] event_validation_result: event_validator.validate_event
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] message_validation_result: message_validator.validate_message
    [FUNCTION_RECON] Processing function: validate_complete_action
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] event_data: Dict[str, Any]
      [PARAM_TYPE] message_content: str
    [FUNCTION_RECON] Stored function: event_validator.validate_complete_action
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] complete_validation: validate_complete_action
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 13 classes
  [RECON_SUMMARY] Found 40 functions/methods
  [RECON_SUMMARY] Found 7 state variables
  [RECON_SUMMARY] Found 0 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 13 classes
    Found 40 functions/methods
    Found 7 state variables
    Found 0 external classes
    Found 0 external functions
  === Analyzing inheritence_complex.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: inheritence_complex
      [IMPORT] Processing direct imports
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] T: TypeVar
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] U: TypeVar
    [RECON_CLASS] Starting class analysis: Priority
    [CLASS_RECON] Processing class: Priority
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: inheritence_complex.Priority with 1 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.Priority
      [CLASS_ASSIGN] Processing class-level assignment in inheritence_complex.Priority
      [CLASS_ATTR] Added attribute LOW to inheritence_complex.Priority: {'type': 'auto'}
      [CLASS_ATTR] LOW: auto
      [CLASS_ASSIGN] Processing class-level assignment in inheritence_complex.Priority
      [CLASS_ATTR] Added attribute MEDIUM to inheritence_complex.Priority: {'type': 'auto'}
      [CLASS_ATTR] MEDIUM: auto
      [CLASS_ASSIGN] Processing class-level assignment in inheritence_complex.Priority
      [CLASS_ATTR] Added attribute HIGH to inheritence_complex.Priority: {'type': 'auto'}
      [CLASS_ATTR] HIGH: auto
      [CLASS_ASSIGN] Processing class-level assignment in inheritence_complex.Priority
      [CLASS_ATTR] Added attribute CRITICAL to inheritence_complex.Priority: {'type': 'auto'}
      [CLASS_ATTR] CRITICAL: auto
      [CLASS_CONTEXT] Exiting class: inheritence_complex.Priority
    [CLASS_FINALIZE] Updated inheritence_complex.Priority with 4 attributes
    [RECON_CLASS] Completed class analysis: Priority
    [RECON_CLASS] Starting class analysis: ProcessingResult
    [CLASS_RECON] Processing class: ProcessingResult
    [CLASS_RECON] Stored class: inheritence_complex.ProcessingResult with 0 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.ProcessingResult
      [CLASS_ATTR] Added attribute success to inheritence_complex.ProcessingResult: {'type': 'bool'}
      [CLASS_ANN_ATTR] success: bool
      [CLASS_ATTR] Added attribute data to inheritence_complex.ProcessingResult: {'type': 'Any'}
      [CLASS_ANN_ATTR] data: Any
      [CLASS_ATTR] Added attribute errors to inheritence_complex.ProcessingResult: {'type': 'List[str]'}
      [CLASS_ANN_ATTR] errors: List[str]
      [CLASS_ATTR] Added attribute metrics to inheritence_complex.ProcessingResult: {'type': 'Dict[str, float]'}
      [CLASS_ANN_ATTR] metrics: Dict[str, float]
      [CLASS_ATTR] Added attribute timestamp to inheritence_complex.ProcessingResult: {'type': 'float'}
      [CLASS_ANN_ATTR] timestamp: float
      [CLASS_CONTEXT] Exiting class: inheritence_complex.ProcessingResult
    [CLASS_FINALIZE] Updated inheritence_complex.ProcessingResult with 5 attributes
    [RECON_CLASS] Completed class analysis: ProcessingResult
    [RECON_CLASS] Starting class analysis: AbstractProcessor
    [CLASS_RECON] Processing class: AbstractProcessor
      [INHERITANCE] Simple parent: ABC
    [CLASS_RECON] Stored class: inheritence_complex.AbstractProcessor with 1 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.AbstractProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] processor_id: str
    [FUNCTION_RECON] Stored method: inheritence_complex.AbstractProcessor.__init__
    [FUNCTION_RECON] Processing method: process_data
      [RETURN_TYPE] Found return type: ProcessingResult
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.AbstractProcessor.process_data
    [FUNCTION_RECON] Processing method: validate_input
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.AbstractProcessor.validate_input
    [FUNCTION_RECON] Processing method: get_statistics
      [RETURN_TYPE] Found return type: Dict[str, int]
    [FUNCTION_RECON] Stored method: inheritence_complex.AbstractProcessor.get_statistics
    [FUNCTION_RECON] Processing method: log_operation
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] operation: str
      [PARAM_TYPE] details: Optional[Dict[str, Any]]
    [FUNCTION_RECON] Stored method: inheritence_complex.AbstractProcessor.log_operation
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter processor_id has type hint: str
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] processor_id = processor_id : str
      [ATTR_FROM_VALUE] processed_count inferred as: int
      [ATTR_FROM_VALUE] error_count inferred as: int
    [INIT_ATTRS] Found 3 attributes
      [CLASS_ATTR] Added attribute processor_id to inheritence_complex.AbstractProcessor: {'type': 'str'}
      [CLASS_ATTR] Added attribute processed_count to inheritence_complex.AbstractProcessor: {'type': 'int'}
      [CLASS_ATTR] Added attribute error_count to inheritence_complex.AbstractProcessor: {'type': 'int'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.AbstractProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.AbstractProcessor with 3 attributes
    [RECON_CLASS] Completed class analysis: AbstractProcessor
    [RECON_CLASS] Starting class analysis: AsyncProcessor
    [CLASS_RECON] Processing class: AsyncProcessor
      [INHERITANCE] Simple parent: AbstractProcessor
    [CLASS_RECON] Stored class: inheritence_complex.AsyncProcessor with 1 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.AsyncProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] processor_id: str
    [FUNCTION_RECON] Stored method: inheritence_complex.AsyncProcessor.__init__
    [FUNCTION_RECON] Processing method: async_process_data
      [RETURN_TYPE] Found return type: ProcessingResult
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.AsyncProcessor.async_process_data
    [FUNCTION_RECON] Processing method: batch_process
      [RETURN_TYPE] Found return type: List[ProcessingResult]
      [PARAM_TYPE] data_list: List[Any]
    [FUNCTION_RECON] Stored method: inheritence_complex.AsyncProcessor.batch_process
    [FUNCTION_RECON] Processing method: queue_for_async_processing
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.AsyncProcessor.queue_for_async_processing
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter processor_id has type hint: str
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_ANNOT] async_queue: List[Any]
      [ATTR_FROM_VALUE] batch_size inferred as: int
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute async_queue to inheritence_complex.AsyncProcessor: {'type': 'List[Any]'}
      [CLASS_ATTR] Added attribute batch_size to inheritence_complex.AsyncProcessor: {'type': 'int'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.AsyncProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.AsyncProcessor with 2 attributes
    [RECON_CLASS] Completed class analysis: AsyncProcessor
    [RECON_CLASS] Starting class analysis: CacheableMixin
    [CLASS_RECON] Processing class: CacheableMixin
    [CLASS_RECON] Stored class: inheritence_complex.CacheableMixin with 0 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.CacheableMixin
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: inheritence_complex.CacheableMixin.__init__
    [FUNCTION_RECON] Processing method: get_cache_key
      [RETURN_TYPE] Found return type: str
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.CacheableMixin.get_cache_key
    [FUNCTION_RECON] Processing method: get_from_cache
      [RETURN_TYPE] Found return type: Optional[Any]
      [PARAM_TYPE] cache_key: str
    [FUNCTION_RECON] Stored method: inheritence_complex.CacheableMixin.get_from_cache
    [FUNCTION_RECON] Processing method: store_in_cache
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] cache_key: str
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.CacheableMixin.store_in_cache
    [FUNCTION_RECON] Processing method: get_cache_statistics
      [RETURN_TYPE] Found return type: Dict[str, Union[int, float]]
    [FUNCTION_RECON] Stored method: inheritence_complex.CacheableMixin.get_cache_statistics
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] _cache: Dict[str, Any]
      [ATTR_FROM_VALUE] _cache_hits inferred as: int
      [ATTR_FROM_VALUE] _cache_misses inferred as: int
    [INIT_ATTRS] Found 3 attributes
      [CLASS_ATTR] Added attribute _cache to inheritence_complex.CacheableMixin: {'type': 'Dict[str, Any]'}
      [CLASS_ATTR] Added attribute _cache_hits to inheritence_complex.CacheableMixin: {'type': 'int'}
      [CLASS_ATTR] Added attribute _cache_misses to inheritence_complex.CacheableMixin: {'type': 'int'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.CacheableMixin
    [CLASS_FINALIZE] Updated inheritence_complex.CacheableMixin with 3 attributes
    [RECON_CLASS] Completed class analysis: CacheableMixin
    [RECON_CLASS] Starting class analysis: ValidatedMixin
    [CLASS_RECON] Processing class: ValidatedMixin
    [CLASS_RECON] Stored class: inheritence_complex.ValidatedMixin with 0 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.ValidatedMixin
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: inheritence_complex.ValidatedMixin.__init__
    [FUNCTION_RECON] Processing method: add_validation_rule
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] rule: callable
      [PARAM_TYPE] description: str
    [FUNCTION_RECON] Stored method: inheritence_complex.ValidatedMixin.add_validation_rule
    [FUNCTION_RECON] Processing method: comprehensive_validate
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.ValidatedMixin.comprehensive_validate
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] validation_rules: List[callable]
      [ATTR_ANNOT] validation_errors: List[str]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute validation_rules to inheritence_complex.ValidatedMixin: {'type': 'List[callable]'}
      [CLASS_ATTR] Added attribute validation_errors to inheritence_complex.ValidatedMixin: {'type': 'List[str]'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.ValidatedMixin
    [CLASS_FINALIZE] Updated inheritence_complex.ValidatedMixin with 2 attributes
    [RECON_CLASS] Completed class analysis: ValidatedMixin
    [RECON_CLASS] Starting class analysis: MetricsMixin
    [CLASS_RECON] Processing class: MetricsMixin
    [CLASS_RECON] Stored class: inheritence_complex.MetricsMixin with 0 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.MetricsMixin
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: inheritence_complex.MetricsMixin.__init__
    [FUNCTION_RECON] Processing method: record_metric
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] metric_name: str
      [PARAM_TYPE] value: float
    [FUNCTION_RECON] Stored method: inheritence_complex.MetricsMixin.record_metric
    [FUNCTION_RECON] Processing method: add_metric_callback
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] metric_name: str
      [PARAM_TYPE] callback: callable
    [FUNCTION_RECON] Stored method: inheritence_complex.MetricsMixin.add_metric_callback
    [FUNCTION_RECON] Processing method: get_metric_summary
      [RETURN_TYPE] Found return type: Optional[Dict[str, float]]
      [PARAM_TYPE] metric_name: str
    [FUNCTION_RECON] Stored method: inheritence_complex.MetricsMixin.get_metric_summary
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_ANNOT] custom_metrics: Dict[str, List[float]]
      [ATTR_ANNOT] metric_callbacks: Dict[str, List[callable]]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute custom_metrics to inheritence_complex.MetricsMixin: {'type': 'Dict[str, List[float]]'}
      [CLASS_ATTR] Added attribute metric_callbacks to inheritence_complex.MetricsMixin: {'type': 'Dict[str, List[callable]]'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.MetricsMixin
    [CLASS_FINALIZE] Updated inheritence_complex.MetricsMixin with 2 attributes
    [RECON_CLASS] Completed class analysis: MetricsMixin
    [RECON_CLASS] Starting class analysis: BasicDataProcessor
    [CLASS_RECON] Processing class: BasicDataProcessor
      [INHERITANCE] Simple parent: AsyncProcessor
      [INHERITANCE] Simple parent: CacheableMixin
      [INHERITANCE] Simple parent: ValidatedMixin
    [CLASS_RECON] Stored class: inheritence_complex.BasicDataProcessor with 3 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.BasicDataProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] processor_id: str
      [PARAM_TYPE] enable_cache: bool
    [FUNCTION_RECON] Stored method: inheritence_complex.BasicDataProcessor.__init__
    [FUNCTION_RECON] Processing method: validate_input
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.BasicDataProcessor.validate_input
    [FUNCTION_RECON] Processing method: process_data
      [RETURN_TYPE] Found return type: ProcessingResult
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.BasicDataProcessor.process_data
    [FUNCTION_RECON] Processing method: _internal_process
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.BasicDataProcessor._internal_process
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter processor_id has type hint: str
      [INIT_PARAM] Parameter enable_cache has type hint: bool
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] enable_cache = enable_cache : bool
    [INIT_ATTRS] Found 1 attributes
      [CLASS_ATTR] Added attribute enable_cache to inheritence_complex.BasicDataProcessor: {'type': 'bool'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.BasicDataProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.BasicDataProcessor with 1 attributes
    [RECON_CLASS] Completed class analysis: BasicDataProcessor
    [RECON_CLASS] Starting class analysis: AdvancedProcessor
    [CLASS_RECON] Processing class: AdvancedProcessor
      [INHERITANCE] Simple parent: BasicDataProcessor
      [INHERITANCE] Simple parent: MetricsMixin
    [CLASS_RECON] Stored class: inheritence_complex.AdvancedProcessor with 2 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.AdvancedProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] processor_id: str
      [PARAM_TYPE] priority: Priority
    [FUNCTION_RECON] Stored method: inheritence_complex.AdvancedProcessor.__init__
    [FUNCTION_RECON] Processing method: process_data
      [RETURN_TYPE] Found return type: ProcessingResult
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.AdvancedProcessor.process_data
    [FUNCTION_RECON] Processing method: _processing_time_callback
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] metric_name: str
      [PARAM_TYPE] value: float
      [PARAM_TYPE] history: List[float]
    [FUNCTION_RECON] Stored method: inheritence_complex.AdvancedProcessor._processing_time_callback
    [FUNCTION_RECON] Processing method: _data_size_callback
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] metric_name: str
      [PARAM_TYPE] value: float
      [PARAM_TYPE] history: List[float]
    [FUNCTION_RECON] Stored method: inheritence_complex.AdvancedProcessor._data_size_callback
    [FUNCTION_RECON] Processing method: change_processing_strategy
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] new_strategy: str
    [FUNCTION_RECON] Stored method: inheritence_complex.AdvancedProcessor.change_processing_strategy
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter processor_id has type hint: str
      [INIT_PARAM] Parameter priority has type hint: Priority
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] priority = priority : Priority
      [ATTR_FROM_VALUE] processing_strategy inferred as: str
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute priority to inheritence_complex.AdvancedProcessor: {'type': 'Priority'}
      [CLASS_ATTR] Added attribute processing_strategy to inheritence_complex.AdvancedProcessor: {'type': 'str'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.AdvancedProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.AdvancedProcessor with 2 attributes
    [RECON_CLASS] Completed class analysis: AdvancedProcessor
    [RECON_CLASS] Starting class analysis: SpecializedProcessor
    [CLASS_RECON] Processing class: SpecializedProcessor
      [INHERITANCE] Simple parent: AdvancedProcessor
    [CLASS_RECON] Stored class: inheritence_complex.SpecializedProcessor with 1 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.SpecializedProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] processor_id: str
      [PARAM_TYPE] specialization: str
    [FUNCTION_RECON] Stored method: inheritence_complex.SpecializedProcessor.__init__
    [FUNCTION_RECON] Processing method: _validate_specialization
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.SpecializedProcessor._validate_specialization
    [FUNCTION_RECON] Processing method: _internal_process
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.SpecializedProcessor._internal_process
    [FUNCTION_RECON] Processing method: _process_numeric
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.SpecializedProcessor._process_numeric
    [FUNCTION_RECON] Processing method: _process_text
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.SpecializedProcessor._process_text
    [FUNCTION_RECON] Processing method: _process_structured
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.SpecializedProcessor._process_structured
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter processor_id has type hint: str
      [INIT_PARAM] Parameter specialization has type hint: str
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] specialization = specialization : str
      [ATTR_ANNOT] specialist_cache: Dict[str, Any]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute specialization to inheritence_complex.SpecializedProcessor: {'type': 'str'}
      [CLASS_ATTR] Added attribute specialist_cache to inheritence_complex.SpecializedProcessor: {'type': 'Dict[str, Any]'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.SpecializedProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.SpecializedProcessor with 2 attributes
    [RECON_CLASS] Completed class analysis: SpecializedProcessor
    [RECON_CLASS] Starting class analysis: ProcessorProtocol
    [CLASS_RECON] Processing class: ProcessorProtocol
      [INHERITANCE] Simple parent: Protocol
    [CLASS_RECON] Stored class: inheritence_complex.ProcessorProtocol with 1 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.ProcessorProtocol
    [FUNCTION_RECON] Processing method: process_data
      [RETURN_TYPE] Found return type: ProcessingResult
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.ProcessorProtocol.process_data
    [FUNCTION_RECON] Processing method: get_statistics
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: inheritence_complex.ProcessorProtocol.get_statistics
      [CLASS_CONTEXT] Exiting class: inheritence_complex.ProcessorProtocol
    [CLASS_FINALIZE] Updated inheritence_complex.ProcessorProtocol with 0 attributes
    [RECON_CLASS] Completed class analysis: ProcessorProtocol
    [RECON_CLASS] Starting class analysis: GenericProcessor
    [CLASS_RECON] Processing class: GenericProcessor
    [CLASS_RECON] Stored class: inheritence_complex.GenericProcessor with 0 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.GenericProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] input_type: type
      [PARAM_TYPE] output_type: type
    [FUNCTION_RECON] Stored method: inheritence_complex.GenericProcessor.__init__
    [FUNCTION_RECON] Processing method: process_typed_data
      [RETURN_TYPE] Found return type: U
      [PARAM_TYPE] data: T
    [FUNCTION_RECON] Stored method: inheritence_complex.GenericProcessor.process_typed_data
    [FUNCTION_RECON] Processing method: _create_type_converter
      [RETURN_TYPE] Found return type: callable
      [PARAM_TYPE] from_type: type
      [PARAM_TYPE] to_type: type
    [FUNCTION_RECON] Stored method: inheritence_complex.GenericProcessor._create_type_converter
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter input_type has type hint: type
      [INIT_PARAM] Parameter output_type has type hint: type
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] input_type = input_type : type
      [ATTR_FROM_PARAM] output_type = output_type : type
      [ATTR_ANNOT] type_conversion_cache: Dict[str, Any]
    [INIT_ATTRS] Found 3 attributes
      [CLASS_ATTR] Added attribute input_type to inheritence_complex.GenericProcessor: {'type': 'type'}
      [CLASS_ATTR] Added attribute output_type to inheritence_complex.GenericProcessor: {'type': 'type'}
      [CLASS_ATTR] Added attribute type_conversion_cache to inheritence_complex.GenericProcessor: {'type': 'Dict[str, Any]'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.GenericProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.GenericProcessor with 3 attributes
    [RECON_CLASS] Completed class analysis: GenericProcessor
    [RECON_CLASS] Starting class analysis: UltimateProcessor
    [CLASS_RECON] Processing class: UltimateProcessor
      [INHERITANCE] Simple parent: SpecializedProcessor
    [CLASS_RECON] Stored class: inheritence_complex.UltimateProcessor with 1 parents
      [CLASS_CONTEXT] Entered class: inheritence_complex.UltimateProcessor
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] processor_id: str
    [FUNCTION_RECON] Stored method: inheritence_complex.UltimateProcessor.__init__
    [FUNCTION_RECON] Processing method: ultimate_process
      [RETURN_TYPE] Found return type: ProcessingResult
      [PARAM_TYPE] data: Dict[str, Any]
    [FUNCTION_RECON] Stored method: inheritence_complex.UltimateProcessor.ultimate_process
    [FUNCTION_RECON] Processing method: _apply_ultimate_enhancements
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] data: Any
    [FUNCTION_RECON] Stored method: inheritence_complex.UltimateProcessor._apply_ultimate_enhancements
    [FUNCTION_RECON] Processing method: ultimate_processing_context
    [FUNCTION_RECON] Stored method: inheritence_complex.UltimateProcessor.ultimate_processing_context
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter processor_id has type hint: str
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_VALUE] ultimate_features_enabled inferred as: int
      [ATTR_ANNOT] cross_references: Dict[str, Any]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute ultimate_features_enabled to inheritence_complex.UltimateProcessor: {'type': 'int'}
      [CLASS_ATTR] Added attribute cross_references to inheritence_complex.UltimateProcessor: {'type': 'Dict[str, Any]'}
      [CLASS_CONTEXT] Exiting class: inheritence_complex.UltimateProcessor
    [CLASS_FINALIZE] Updated inheritence_complex.UltimateProcessor with 2 attributes
    [RECON_CLASS] Completed class analysis: UltimateProcessor
    [FUNCTION_RECON] Processing function: create_processor_hierarchy
      [RETURN_TYPE] Found return type: Dict[str, AbstractProcessor]
      [PARAM_TYPE] processor_configs: List[Dict[str, Any]]
    [FUNCTION_RECON] Stored function: inheritence_complex.create_processor_hierarchy
      [IMPORT] Processing direct imports
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] ultimate_processor: UltimateProcessor
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] test_data: Unknown
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] result: ultimate_processor.ultimate_process
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] stats: ultimate_processor.get_statistics
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] cache_stats: ultimate_processor.get_cache_statistics
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] metric_summary: ultimate_processor.get_metric_summary
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 13 classes
  [RECON_SUMMARY] Found 46 functions/methods
  [RECON_SUMMARY] Found 8 state variables
  [RECON_SUMMARY] Found 0 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 13 classes
    Found 46 functions/methods
    Found 8 state variables
    Found 0 external classes
    Found 0 external functions
  === Analyzing proxy_handler.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: proxy_handler
      [IMPORT] Processing direct imports
    [EXTERNAL_MODULE] Direct import: threading
      [IMPORT] Processing direct imports
      [STATE_ASSIGN] Processing module-level assignment
    [MODULE_STATE] T: TypeVar
    [RECON_CLASS] Starting class analysis: ProxyConfig
    [CLASS_RECON] Processing class: ProxyConfig
    [CLASS_RECON] Stored class: proxy_handler.ProxyConfig with 0 parents
      [CLASS_CONTEXT] Entered class: proxy_handler.ProxyConfig
      [CLASS_ATTR] Added attribute cache_enabled to proxy_handler.ProxyConfig: {'type': 'bool'}
      [CLASS_ANN_ATTR] cache_enabled: bool
      [CLASS_ATTR] Added attribute logging_enabled to proxy_handler.ProxyConfig: {'type': 'bool'}
      [CLASS_ANN_ATTR] logging_enabled: bool
      [CLASS_ATTR] Added attribute metrics_enabled to proxy_handler.ProxyConfig: {'type': 'bool'}
      [CLASS_ANN_ATTR] metrics_enabled: bool
      [CLASS_ATTR] Added attribute timeout_seconds to proxy_handler.ProxyConfig: {'type': 'float'}
      [CLASS_ANN_ATTR] timeout_seconds: float
      [CLASS_ATTR] Added attribute retry_attempts to proxy_handler.ProxyConfig: {'type': 'int'}
      [CLASS_ANN_ATTR] retry_attempts: int
      [CLASS_ATTR] Added attribute circuit_breaker_enabled to proxy_handler.ProxyConfig: {'type': 'bool'}
      [CLASS_ANN_ATTR] circuit_breaker_enabled: bool
      [CLASS_CONTEXT] Exiting class: proxy_handler.ProxyConfig
    [CLASS_FINALIZE] Updated proxy_handler.ProxyConfig with 6 attributes
    [RECON_CLASS] Completed class analysis: ProxyConfig
    [RECON_CLASS] Starting class analysis: ProxyMetrics
    [CLASS_RECON] Processing class: ProxyMetrics
    [CLASS_RECON] Stored class: proxy_handler.ProxyMetrics with 0 parents
      [CLASS_CONTEXT] Entered class: proxy_handler.ProxyMetrics
    [FUNCTION_RECON] Processing method: __init__
    [FUNCTION_RECON] Stored method: proxy_handler.ProxyMetrics.__init__
    [FUNCTION_RECON] Processing method: record_call
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] execution_time: float
      [PARAM_TYPE] success: bool
      [PARAM_TYPE] cache_hit: bool
    [FUNCTION_RECON] Stored method: proxy_handler.ProxyMetrics.record_call
    [FUNCTION_RECON] Processing method: get_success_rate
      [RETURN_TYPE] Found return type: float
    [FUNCTION_RECON] Stored method: proxy_handler.ProxyMetrics.get_success_rate
    [FUNCTION_RECON] Processing method: get_cache_hit_rate
      [RETURN_TYPE] Found return type: float
    [FUNCTION_RECON] Stored method: proxy_handler.ProxyMetrics.get_cache_hit_rate
    [INIT_ATTRS] Extracting attributes from __init__
    [INIT_ANALYSIS] Found 0 parameter type hints
      [ATTR_FROM_VALUE] call_count inferred as: int
      [ATTR_FROM_VALUE] success_count inferred as: int
      [ATTR_FROM_VALUE] error_count inferred as: int
      [ATTR_FROM_VALUE] cache_hits inferred as: int
      [ATTR_FROM_VALUE] cache_misses inferred as: int
      [ATTR_FROM_VALUE] total_execution_time inferred as: float
      [ATTR_FROM_VALUE] average_execution_time inferred as: float
      [ATTR_ANNOT] last_error_time: Optional[float]
      [ATTR_ANNOT] last_success_time: Optional[float]
    [INIT_ATTRS] Found 9 attributes
      [CLASS_ATTR] Added attribute call_count to proxy_handler.ProxyMetrics: {'type': 'int'}
      [CLASS_ATTR] Added attribute success_count to proxy_handler.ProxyMetrics: {'type': 'int'}
      [CLASS_ATTR] Added attribute error_count to proxy_handler.ProxyMetrics: {'type': 'int'}
      [CLASS_ATTR] Added attribute cache_hits to proxy_handler.ProxyMetrics: {'type': 'int'}
      [CLASS_ATTR] Added attribute cache_misses to proxy_handler.ProxyMetrics: {'type': 'int'}
      [CLASS_ATTR] Added attribute total_execution_time to proxy_handler.ProxyMetrics: {'type': 'float'}
      [CLASS_ATTR] Added attribute average_execution_time to proxy_handler.ProxyMetrics: {'type': 'float'}
      [CLASS_ATTR] Added attribute last_error_time to proxy_handler.ProxyMetrics: {'type': 'Optional[float]'}
      [CLASS_ATTR] Added attribute last_success_time to proxy_handler.ProxyMetrics: {'type': 'Optional[float]'}
      [CLASS_CONTEXT] Exiting class: proxy_handler.ProxyMetrics
    [CLASS_FINALIZE] Updated proxy_handler.ProxyMetrics with 9 attributes
    [RECON_CLASS] Completed class analysis: ProxyMetrics
    [RECON_CLASS] Starting class analysis: BaseProxy
    [CLASS_RECON] Processing class: BaseProxy
      [INHERITANCE] Simple parent: ABC
    [CLASS_RECON] Stored class: proxy_handler.BaseProxy with 1 parents
      [CLASS_CONTEXT] Entered class: proxy_handler.BaseProxy
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] target: Any
      [PARAM_TYPE] config: ProxyConfig
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy.__init__
    [FUNCTION_RECON] Processing method: _proxy_method_call
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] method_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy._proxy_method_call
    [FUNCTION_RECON] Processing method: __getattr__
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] name: str
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy.__getattr__
    [FUNCTION_RECON] Processing method: _create_proxy_method
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] method_name: str
      [PARAM_TYPE] original_method: Callable
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy._create_proxy_method
    [FUNCTION_RECON] Processing method: _execute_with_circuit_breaker
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] method_name: str
      [PARAM_TYPE] method: Callable
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy._execute_with_circuit_breaker
    [FUNCTION_RECON] Processing method: _get_cache_key
      [RETURN_TYPE] Found return type: str
      [PARAM_TYPE] method_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy._get_cache_key
    [FUNCTION_RECON] Processing method: _metrics_context
      [PARAM_TYPE] method_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.BaseProxy._metrics_context
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter target has type hint: Any
      [INIT_PARAM] Parameter config has type hint: ProxyConfig
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] target = target : Any
      [ATTR_FROM_VALUE] config inferred as: None
      [ATTR_FROM_VALUE] metrics inferred as: ProxyMetrics
      [ATTR_ANNOT] cache: Dict[str, Any]
      [ATTR_FROM_VALUE] lock inferred as: threading.RLock
      [ATTR_FROM_VALUE] circuit_breaker_open inferred as: int
      [ATTR_FROM_VALUE] circuit_breaker_failures inferred as: int
      [ATTR_FROM_VALUE] circuit_breaker_last_failure inferred as: float
    [INIT_ATTRS] Found 8 attributes
      [CLASS_ATTR] Added attribute target to proxy_handler.BaseProxy: {'type': 'Any'}
      [CLASS_ATTR] Added attribute config to proxy_handler.BaseProxy: {'type': 'Unknown'}
      [CLASS_ATTR] Added attribute metrics to proxy_handler.BaseProxy: {'type': 'ProxyMetrics'}
      [CLASS_ATTR] Added attribute cache to proxy_handler.BaseProxy: {'type': 'Dict[str, Any]'}
      [CLASS_ATTR] Added attribute lock to proxy_handler.BaseProxy: {'type': 'threading.RLock'}
      [CLASS_ATTR] Added attribute circuit_breaker_open to proxy_handler.BaseProxy: {'type': 'int'}
      [CLASS_ATTR] Added attribute circuit_breaker_failures to proxy_handler.BaseProxy: {'type': 'int'}
      [CLASS_ATTR] Added attribute circuit_breaker_last_failure to proxy_handler.BaseProxy: {'type': 'float'}
      [CLASS_CONTEXT] Exiting class: proxy_handler.BaseProxy
    [CLASS_FINALIZE] Updated proxy_handler.BaseProxy with 8 attributes
    [RECON_CLASS] Completed class analysis: BaseProxy
    [RECON_CLASS] Starting class analysis: DataProxy
    [CLASS_RECON] Processing class: DataProxy
      [INHERITANCE] Simple parent: BaseProxy
    [CLASS_RECON] Stored class: proxy_handler.DataProxy with 1 parents
      [CLASS_CONTEXT] Entered class: proxy_handler.DataProxy
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] data_source: Any
      [PARAM_TYPE] config: ProxyConfig
    [FUNCTION_RECON] Stored method: proxy_handler.DataProxy.__init__
    [FUNCTION_RECON] Processing method: _proxy_method_call
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] method_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.DataProxy._proxy_method_call
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter data_source has type hint: Any
      [INIT_PARAM] Parameter config has type hint: ProxyConfig
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_ANNOT] data_validators: Dict[str, List[Callable]]
      [ATTR_ANNOT] data_transformers: Dict[str, List[Callable]]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute data_validators to proxy_handler.DataProxy: {'type': 'Dict[str, List[Callable]]'}
      [CLASS_ATTR] Added attribute data_transformers to proxy_handler.DataProxy: {'type': 'Dict[str, List[Callable]]'}
      [CLASS_CONTEXT] Exiting class: proxy_handler.DataProxy
    [CLASS_FINALIZE] Updated proxy_handler.DataProxy with 2 attributes
    [RECON_CLASS] Completed class analysis: DataProxy
    [RECON_CLASS] Starting class analysis: HavenProxy
    [CLASS_RECON] Processing class: HavenProxy
      [INHERITANCE] Simple parent: BaseProxy
    [CLASS_RECON] Stored class: proxy_handler.HavenProxy with 1 parents
      [CLASS_CONTEXT] Entered class: proxy_handler.HavenProxy
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] target: Any
      [PARAM_TYPE] config: ProxyConfig
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.__init__
    [FUNCTION_RECON] Processing method: validate_user_credentials
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] auth_data: Dict[str, Any]
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_user_credentials
    [FUNCTION_RECON] Processing method: get_user_preferences
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.get_user_preferences
    [FUNCTION_RECON] Processing method: validate_room_access
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] user_id: str
      [PARAM_TYPE] room_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_room_access
    [FUNCTION_RECON] Processing method: get_user_info
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.get_user_info
    [FUNCTION_RECON] Processing method: validate_admin_role
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_admin_role
    [FUNCTION_RECON] Processing method: validate_moderator_role
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_moderator_role
    [FUNCTION_RECON] Processing method: get_runner_capabilities
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.get_runner_capabilities
    [FUNCTION_RECON] Processing method: get_guest_limitations
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.get_guest_limitations
    [FUNCTION_RECON] Processing method: validate_message_content
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] message: str
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_message_content
    [FUNCTION_RECON] Processing method: log_room_message
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] room: str
      [PARAM_TYPE] user_id: str
      [PARAM_TYPE] message: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.log_room_message
    [FUNCTION_RECON] Processing method: validate_direct_message_permission
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] sender_id: str
      [PARAM_TYPE] recipient_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_direct_message_permission
    [FUNCTION_RECON] Processing method: validate_broadcast_permission
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_broadcast_permission
    [FUNCTION_RECON] Processing method: get_room_statistics
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] room_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.get_room_statistics
    [FUNCTION_RECON] Processing method: validate_event_data
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] event_name: str
      [PARAM_TYPE] data: Dict[str, Any]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.validate_event_data
    [FUNCTION_RECON] Processing method: process_event
      [RETURN_TYPE] Found return type: Dict[str, Any]
      [PARAM_TYPE] event_name: str
      [PARAM_TYPE] data: Dict[str, Any]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.process_event
    [FUNCTION_RECON] Processing method: user_exists
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy.user_exists
    [FUNCTION_RECON] Processing method: _proxy_method_call
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] method_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.HavenProxy._proxy_method_call
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter target has type hint: Any
      [INIT_PARAM] Parameter config has type hint: ProxyConfig
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_ANNOT] user_cache: Dict[str, Any]
      [ATTR_ANNOT] room_permissions: Dict[str, Set[str]]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute user_cache to proxy_handler.HavenProxy: {'type': 'Dict[str, Any]'}
      [CLASS_ATTR] Added attribute room_permissions to proxy_handler.HavenProxy: {'type': 'Dict[str, Set[str]]'}
      [CLASS_CONTEXT] Exiting class: proxy_handler.HavenProxy
    [CLASS_FINALIZE] Updated proxy_handler.HavenProxy with 2 attributes
    [RECON_CLASS] Completed class analysis: HavenProxy
    [RECON_CLASS] Starting class analysis: UserProxy
    [CLASS_RECON] Processing class: UserProxy
      [INHERITANCE] Simple parent: BaseProxy
    [CLASS_RECON] Stored class: proxy_handler.UserProxy with 1 parents
      [CLASS_CONTEXT] Entered class: proxy_handler.UserProxy
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] user_data: Dict[str, Any]
      [PARAM_TYPE] config: ProxyConfig
    [FUNCTION_RECON] Stored method: proxy_handler.UserProxy.__init__
    [FUNCTION_RECON] Processing method: has_role
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] role: str
    [FUNCTION_RECON] Stored method: proxy_handler.UserProxy.has_role
    [FUNCTION_RECON] Processing method: id
      [RETURN_TYPE] Found return type: str
    [FUNCTION_RECON] Stored method: proxy_handler.UserProxy.id
    [FUNCTION_RECON] Processing method: _proxy_method_call
      [RETURN_TYPE] Found return type: Any
      [PARAM_TYPE] method_name: str
    [FUNCTION_RECON] Stored method: proxy_handler.UserProxy._proxy_method_call
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter user_data has type hint: Dict[str, Any]
      [INIT_PARAM] Parameter config has type hint: ProxyConfig
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] user_data = user_data : Dict[str, Any]
    [INIT_ATTRS] Found 1 attributes
      [CLASS_ATTR] Added attribute user_data to proxy_handler.UserProxy: {'type': 'Dict[str, Any]'}
      [CLASS_CONTEXT] Exiting class: proxy_handler.UserProxy
    [CLASS_FINALIZE] Updated proxy_handler.UserProxy with 1 attributes
    [RECON_CLASS] Completed class analysis: UserProxy
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 6 classes
  [RECON_SUMMARY] Found 35 functions/methods
  [RECON_SUMMARY] Found 1 state variables
  [RECON_SUMMARY] Found 0 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 6 classes
    Found 35 functions/methods
    Found 1 state variables
    Found 0 external classes
    Found 0 external functions
  === Analyzing session_manager.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: session_manager
      [IMPORT] Processing direct imports
    [EXTERNAL_MODULE] Direct import: uuid
      [IMPORT] Processing direct imports
    [EXTERNAL_MODULE] Direct import: threading
    [RECON_CLASS] Starting class analysis: SessionState
    [CLASS_RECON] Processing class: SessionState
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: session_manager.SessionState with 1 parents
      [CLASS_CONTEXT] Entered class: session_manager.SessionState
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.SessionState
      [CLASS_ATTR] Added attribute CREATED to session_manager.SessionState: {'type': 'auto'}
      [CLASS_ATTR] CREATED: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.SessionState
      [CLASS_ATTR] Added attribute ACTIVE to session_manager.SessionState: {'type': 'auto'}
      [CLASS_ATTR] ACTIVE: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.SessionState
      [CLASS_ATTR] Added attribute IDLE to session_manager.SessionState: {'type': 'auto'}
      [CLASS_ATTR] IDLE: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.SessionState
      [CLASS_ATTR] Added attribute SUSPENDED to session_manager.SessionState: {'type': 'auto'}
      [CLASS_ATTR] SUSPENDED: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.SessionState
      [CLASS_ATTR] Added attribute EXPIRED to session_manager.SessionState: {'type': 'auto'}
      [CLASS_ATTR] EXPIRED: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.SessionState
      [CLASS_ATTR] Added attribute TERMINATED to session_manager.SessionState: {'type': 'auto'}
      [CLASS_ATTR] TERMINATED: auto
      [CLASS_CONTEXT] Exiting class: session_manager.SessionState
    [CLASS_FINALIZE] Updated session_manager.SessionState with 6 attributes
    [RECON_CLASS] Completed class analysis: SessionState
    [RECON_CLASS] Starting class analysis: UserRole
    [CLASS_RECON] Processing class: UserRole
      [INHERITANCE] Simple parent: Enum
    [CLASS_RECON] Stored class: session_manager.UserRole with 1 parents
      [CLASS_CONTEXT] Entered class: session_manager.UserRole
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.UserRole
      [CLASS_ATTR] Added attribute GUEST to session_manager.UserRole: {'type': 'auto'}
      [CLASS_ATTR] GUEST: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.UserRole
      [CLASS_ATTR] Added attribute USER to session_manager.UserRole: {'type': 'auto'}
      [CLASS_ATTR] USER: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.UserRole
      [CLASS_ATTR] Added attribute MODERATOR to session_manager.UserRole: {'type': 'auto'}
      [CLASS_ATTR] MODERATOR: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.UserRole
      [CLASS_ATTR] Added attribute ADMIN to session_manager.UserRole: {'type': 'auto'}
      [CLASS_ATTR] ADMIN: auto
      [CLASS_ASSIGN] Processing class-level assignment in session_manager.UserRole
      [CLASS_ATTR] Added attribute SYSTEM to session_manager.UserRole: {'type': 'auto'}
      [CLASS_ATTR] SYSTEM: auto
      [CLASS_CONTEXT] Exiting class: session_manager.UserRole
    [CLASS_FINALIZE] Updated session_manager.UserRole with 5 attributes
    [RECON_CLASS] Completed class analysis: UserRole
    [RECON_CLASS] Starting class analysis: SessionMetrics
    [CLASS_RECON] Processing class: SessionMetrics
    [CLASS_RECON] Stored class: session_manager.SessionMetrics with 0 parents
      [CLASS_CONTEXT] Entered class: session_manager.SessionMetrics
      [CLASS_ATTR] Added attribute login_time to session_manager.SessionMetrics: {'type': 'datetime'}
      [CLASS_ANN_ATTR] login_time: datetime
      [CLASS_ATTR] Added attribute last_activity to session_manager.SessionMetrics: {'type': 'datetime'}
      [CLASS_ANN_ATTR] last_activity: datetime
      [CLASS_ATTR] Added attribute activity_count to session_manager.SessionMetrics: {'type': 'int'}
      [CLASS_ANN_ATTR] activity_count: int
      [CLASS_ATTR] Added attribute data_transferred to session_manager.SessionMetrics: {'type': 'int'}
      [CLASS_ANN_ATTR] data_transferred: int
      [CLASS_ATTR] Added attribute errors_encountered to session_manager.SessionMetrics: {'type': 'int'}
      [CLASS_ANN_ATTR] errors_encountered: int
      [CLASS_ATTR] Added attribute warnings_issued to session_manager.SessionMetrics: {'type': 'int'}
      [CLASS_ANN_ATTR] warnings_issued: int
      [CLASS_ATTR] Added attribute rooms_joined to session_manager.SessionMetrics: {'type': 'Set[str]'}
      [CLASS_ANN_ATTR] rooms_joined: Set[str]
      [CLASS_ATTR] Added attribute events_emitted to session_manager.SessionMetrics: {'type': 'int'}
      [CLASS_ANN_ATTR] events_emitted: int
      [CLASS_ATTR] Added attribute events_received to session_manager.SessionMetrics: {'type': 'int'}
      [CLASS_ANN_ATTR] events_received: int
      [CLASS_CONTEXT] Exiting class: session_manager.SessionMetrics
    [CLASS_FINALIZE] Updated session_manager.SessionMetrics with 9 attributes
    [RECON_CLASS] Completed class analysis: SessionMetrics
    [RECON_CLASS] Starting class analysis: UserSession
    [CLASS_RECON] Processing class: UserSession
    [CLASS_RECON] Stored class: session_manager.UserSession with 0 parents
      [CLASS_CONTEXT] Entered class: session_manager.UserSession
      [CLASS_ATTR] Added attribute session_id to session_manager.UserSession: {'type': 'str'}
      [CLASS_ANN_ATTR] session_id: str
      [CLASS_ATTR] Added attribute user_id to session_manager.UserSession: {'type': 'str'}
      [CLASS_ANN_ATTR] user_id: str
      [CLASS_ATTR] Added attribute user_role to session_manager.UserSession: {'type': 'UserRole'}
      [CLASS_ANN_ATTR] user_role: UserRole
      [CLASS_ATTR] Added attribute state to session_manager.UserSession: {'type': 'SessionState'}
      [CLASS_ANN_ATTR] state: SessionState
      [CLASS_ATTR] Added attribute created_at to session_manager.UserSession: {'type': 'datetime'}
      [CLASS_ANN_ATTR] created_at: datetime
      [CLASS_ATTR] Added attribute expires_at to session_manager.UserSession: {'type': 'datetime'}
      [CLASS_ANN_ATTR] expires_at: datetime
      [CLASS_ATTR] Added attribute last_activity to session_manager.UserSession: {'type': 'datetime'}
      [CLASS_ANN_ATTR] last_activity: datetime
      [CLASS_ATTR] Added attribute ip_address to session_manager.UserSession: {'type': 'str'}
      [CLASS_ANN_ATTR] ip_address: str
      [CLASS_ATTR] Added attribute user_agent to session_manager.UserSession: {'type': 'str'}
      [CLASS_ANN_ATTR] user_agent: str
      [CLASS_ATTR] Added attribute permissions to session_manager.UserSession: {'type': 'Set[str]'}
      [CLASS_ANN_ATTR] permissions: Set[str]
      [CLASS_ATTR] Added attribute preferences to session_manager.UserSession: {'type': 'Dict[str, Any]'}
      [CLASS_ANN_ATTR] preferences: Dict[str, Any]
      [CLASS_ATTR] Added attribute metrics to session_manager.UserSession: {'type': 'SessionMetrics'}
      [CLASS_ANN_ATTR] metrics: SessionMetrics
      [CLASS_ATTR] Added attribute context_data to session_manager.UserSession: {'type': 'Dict[str, Any]'}
      [CLASS_ANN_ATTR] context_data: Dict[str, Any]
    [FUNCTION_RECON] Processing method: is_valid
      [RETURN_TYPE] Found return type: bool
    [FUNCTION_RECON] Stored method: session_manager.UserSession.is_valid
    [FUNCTION_RECON] Processing method: is_expired
      [RETURN_TYPE] Found return type: bool
    [FUNCTION_RECON] Stored method: session_manager.UserSession.is_expired
    [FUNCTION_RECON] Processing method: time_until_expiry
      [RETURN_TYPE] Found return type: timedelta
    [FUNCTION_RECON] Stored method: session_manager.UserSession.time_until_expiry
    [FUNCTION_RECON] Processing method: update_activity
      [RETURN_TYPE] Found return type: None
    [FUNCTION_RECON] Stored method: session_manager.UserSession.update_activity
      [CLASS_CONTEXT] Exiting class: session_manager.UserSession
    [CLASS_FINALIZE] Updated session_manager.UserSession with 13 attributes
    [RECON_CLASS] Completed class analysis: UserSession
    [RECON_CLASS] Starting class analysis: SessionManager
    [CLASS_RECON] Processing class: SessionManager
    [CLASS_RECON] Stored class: session_manager.SessionManager with 0 parents
      [CLASS_CONTEXT] Entered class: session_manager.SessionManager
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] haven_proxy: HavenProxy
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.__init__
    [FUNCTION_RECON] Processing method: create_session
      [RETURN_TYPE] Found return type: str
      [PARAM_TYPE] user_id: Optional[str]
      [PARAM_TYPE] session_duration: timedelta
      [PARAM_TYPE] ip_address: str
      [PARAM_TYPE] user_agent: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.create_session
    [FUNCTION_RECON] Processing method: create_user_session
      [RETURN_TYPE] Found return type: UserSession
      [PARAM_TYPE] user_id: str
      [PARAM_TYPE] session_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.create_user_session
    [FUNCTION_RECON] Processing method: get_current_session
      [RETURN_TYPE] Found return type: Optional[UserSession]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_current_session
    [FUNCTION_RECON] Processing method: get_current_session_id
      [RETURN_TYPE] Found return type: Optional[str]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_current_session_id
    [FUNCTION_RECON] Processing method: get_current_user_id
      [RETURN_TYPE] Found return type: Optional[str]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_current_user_id
    [FUNCTION_RECON] Processing method: get_current_user
      [RETURN_TYPE] Found return type: Optional[Any]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_current_user
    [FUNCTION_RECON] Processing method: get_current_timestamp
      [RETURN_TYPE] Found return type: float
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_current_timestamp
    [FUNCTION_RECON] Processing method: validate_session
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] session_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.validate_session
    [FUNCTION_RECON] Processing method: validate_room_access
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] room_name: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.validate_room_access
    [FUNCTION_RECON] Processing method: get_user_room
      [RETURN_TYPE] Found return type: str
      [PARAM_TYPE] user_id: Optional[str]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_user_room
    [FUNCTION_RECON] Processing method: get_user_rooms
      [RETURN_TYPE] Found return type: List[str]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_user_rooms
    [FUNCTION_RECON] Processing method: get_active_users
      [RETURN_TYPE] Found return type: List[str]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_active_users
    [FUNCTION_RECON] Processing method: cleanup_user_session
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.cleanup_user_session
    [FUNCTION_RECON] Processing method: destroy_session
      [RETURN_TYPE] Found return type: bool
      [PARAM_TYPE] session_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.destroy_session
    [FUNCTION_RECON] Processing method: _determine_user_role
      [RETURN_TYPE] Found return type: UserRole
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager._determine_user_role
    [FUNCTION_RECON] Processing method: _get_role_permissions
      [RETURN_TYPE] Found return type: Set[str]
      [PARAM_TYPE] role: UserRole
    [FUNCTION_RECON] Stored method: session_manager.SessionManager._get_role_permissions
    [FUNCTION_RECON] Processing method: _expire_session
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] session_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager._expire_session
    [FUNCTION_RECON] Processing method: _terminate_session
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] session_id: str
      [PARAM_TYPE] reason: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager._terminate_session
    [FUNCTION_RECON] Processing method: _trigger_event
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] event_name: str
      [PARAM_TYPE] session: UserSession
    [FUNCTION_RECON] Stored method: session_manager.SessionManager._trigger_event
    [FUNCTION_RECON] Processing method: get_session_statistics
      [RETURN_TYPE] Found return type: Dict[str, Any]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.get_session_statistics
    [FUNCTION_RECON] Processing method: session_context
      [PARAM_TYPE] session_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.session_context
    [FUNCTION_RECON] Processing method: add_session_event_handler
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] event_name: str
      [PARAM_TYPE] handler: Callable
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.add_session_event_handler
    [FUNCTION_RECON] Processing method: periodic_cleanup
      [RETURN_TYPE] Found return type: Dict[str, int]
    [FUNCTION_RECON] Stored method: session_manager.SessionManager.periodic_cleanup
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter haven_proxy has type hint: HavenProxy
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] haven_proxy = haven_proxy : HavenProxy
      [ATTR_ANNOT] active_sessions: Dict[str, UserSession]
      [ATTR_ANNOT] user_sessions: Dict[str, List[str]]
      [ATTR_FROM_VALUE] session_lock inferred as: threading.RLock
      [ATTR_ANNOT] current_session_id: Optional[str]
      [ATTR_ANNOT] session_callbacks: Dict[str, List[Callable]]
      [ATTR_FROM_VALUE] cleanup_interval inferred as: int
      [ATTR_FROM_VALUE] max_sessions_per_user inferred as: int
      [ATTR_ANNOT] event_handlers: Dict[str, List[Callable]]
    [INIT_ATTRS] Found 9 attributes
      [CLASS_ATTR] Added attribute haven_proxy to session_manager.SessionManager: {'type': 'HavenProxy'}
      [CLASS_ATTR] Added attribute active_sessions to session_manager.SessionManager: {'type': 'Dict[str, UserSession]'}
      [CLASS_ATTR] Added attribute user_sessions to session_manager.SessionManager: {'type': 'Dict[str, List[str]]'}
      [CLASS_ATTR] Added attribute session_lock to session_manager.SessionManager: {'type': 'threading.RLock'}
      [CLASS_ATTR] Added attribute current_session_id to session_manager.SessionManager: {'type': 'Optional[str]'}
      [CLASS_ATTR] Added attribute session_callbacks to session_manager.SessionManager: {'type': 'Dict[str, List[Callable]]'}
      [CLASS_ATTR] Added attribute cleanup_interval to session_manager.SessionManager: {'type': 'int'}
      [CLASS_ATTR] Added attribute max_sessions_per_user to session_manager.SessionManager: {'type': 'int'}
      [CLASS_ATTR] Added attribute event_handlers to session_manager.SessionManager: {'type': 'Dict[str, List[Callable]]'}
      [CLASS_CONTEXT] Exiting class: session_manager.SessionManager
    [CLASS_FINALIZE] Updated session_manager.SessionManager with 9 attributes
    [RECON_CLASS] Completed class analysis: SessionManager
    [MODULE_ANN_STATE] _global_session_manager: Optional[SessionManager]
    [FUNCTION_RECON] Processing function: initialize_session_manager
      [RETURN_TYPE] Found return type: SessionManager
      [PARAM_TYPE] haven_proxy: HavenProxy
    [FUNCTION_RECON] Stored function: session_manager.initialize_session_manager
    [FUNCTION_RECON] Processing function: get_current_session
      [RETURN_TYPE] Found return type: Optional[UserSession]
    [FUNCTION_RECON] Stored function: session_manager.get_current_session
    [FUNCTION_RECON] Processing function: get_current_user
      [RETURN_TYPE] Found return type: Optional[Any]
    [FUNCTION_RECON] Stored function: session_manager.get_current_user
    [FUNCTION_RECON] Processing function: get_current_user_id
      [RETURN_TYPE] Found return type: Optional[str]
    [FUNCTION_RECON] Stored function: session_manager.get_current_user_id
    [RECON_CLASS] Starting class analysis: SessionInteractionManager
    [CLASS_RECON] Processing class: SessionInteractionManager
    [CLASS_RECON] Stored class: session_manager.SessionInteractionManager with 0 parents
      [CLASS_CONTEXT] Entered class: session_manager.SessionInteractionManager
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] session_manager: SessionManager
    [FUNCTION_RECON] Stored method: session_manager.SessionInteractionManager.__init__
    [FUNCTION_RECON] Processing method: record_user_interaction
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] user1_id: str
      [PARAM_TYPE] user2_id: str
      [PARAM_TYPE] interaction_type: str
      [PARAM_TYPE] data: Dict[str, Any]
    [FUNCTION_RECON] Stored method: session_manager.SessionInteractionManager.record_user_interaction
    [FUNCTION_RECON] Processing method: _get_user_session
      [RETURN_TYPE] Found return type: Optional[UserSession]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionInteractionManager._get_user_session
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter session_manager has type hint: SessionManager
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] session_manager = session_manager : SessionManager
      [ATTR_ANNOT] interaction_log: List[Dict[str, Any]]
      [ATTR_ANNOT] user_relationships: Dict[str, Set[str]]
      [ATTR_FROM_VALUE] session_analytics inferred as: SessionAnalytics
    [INIT_ATTRS] Found 4 attributes
      [CLASS_ATTR] Added attribute session_manager to session_manager.SessionInteractionManager: {'type': 'SessionManager'}
      [CLASS_ATTR] Added attribute interaction_log to session_manager.SessionInteractionManager: {'type': 'List[Dict[str, Any]]'}
      [CLASS_ATTR] Added attribute user_relationships to session_manager.SessionInteractionManager: {'type': 'Dict[str, Set[str]]'}
      [CLASS_ATTR] Added attribute session_analytics to session_manager.SessionInteractionManager: {'type': 'SessionAnalytics'}
      [CLASS_CONTEXT] Exiting class: session_manager.SessionInteractionManager
    [CLASS_FINALIZE] Updated session_manager.SessionInteractionManager with 4 attributes
    [RECON_CLASS] Completed class analysis: SessionInteractionManager
    [RECON_CLASS] Starting class analysis: SessionAnalytics
    [CLASS_RECON] Processing class: SessionAnalytics
    [CLASS_RECON] Stored class: session_manager.SessionAnalytics with 0 parents
      [CLASS_CONTEXT] Entered class: session_manager.SessionAnalytics
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] session_manager: SessionManager
    [FUNCTION_RECON] Stored method: session_manager.SessionAnalytics.__init__
    [FUNCTION_RECON] Processing method: compute_user_engagement_score
      [RETURN_TYPE] Found return type: float
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionAnalytics.compute_user_engagement_score
    [FUNCTION_RECON] Processing method: _get_user_session
      [RETURN_TYPE] Found return type: Optional[UserSession]
      [PARAM_TYPE] user_id: str
    [FUNCTION_RECON] Stored method: session_manager.SessionAnalytics._get_user_session
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter session_manager has type hint: SessionManager
    [INIT_ANALYSIS] Found 1 parameter type hints
      [ATTR_FROM_PARAM] session_manager = session_manager : SessionManager
      [ATTR_ANNOT] analytics_cache: Dict[str, Any]
    [INIT_ATTRS] Found 2 attributes
      [CLASS_ATTR] Added attribute session_manager to session_manager.SessionAnalytics: {'type': 'SessionManager'}
      [CLASS_ATTR] Added attribute analytics_cache to session_manager.SessionAnalytics: {'type': 'Dict[str, Any]'}
      [CLASS_CONTEXT] Exiting class: session_manager.SessionAnalytics
    [CLASS_FINALIZE] Updated session_manager.SessionAnalytics with 2 attributes
    [RECON_CLASS] Completed class analysis: SessionAnalytics
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 7 classes
  [RECON_SUMMARY] Found 38 functions/methods
  [RECON_SUMMARY] Found 1 state variables
  [RECON_SUMMARY] Found 0 external classes
  [RECON_SUMMARY] Found 0 external functions
    Found 7 classes
    Found 38 functions/methods
    Found 1 state variables
    Found 0 external classes
    Found 0 external functions
  === Analyzing socketio_events.py ===
  [RECON_INIT] Initialized refactored reconnaissance for module: socketio_events
      [IMPORT] Processing direct imports
    [EXTERNAL_IMPORT] Processing from flask_socketio
    [EXTERNAL_CLASS] Added: flask_socketio.SocketIO (alias: SocketIO)
    [EXTERNAL_FUNCTION] Added: flask_socketio.emit (alias: emit)
    [EXTERNAL_FUNCTION] Added: flask_socketio.disconnect (alias: disconnect)
    [EXTERNAL_FUNCTION] Added: flask_socketio.join_room (alias: join_room)
    [EXTERNAL_FUNCTION] Added: flask_socketio.leave_room (alias: leave_room)
    [MODULE_ANN_STATE] _socketio_instance: Optional[SocketIO]
    [MODULE_ANN_STATE] _haven_proxy: Optional[HavenProxy]
    [MODULE_ANN_STATE] _session_manager: Optional[SessionManager]
    [MODULE_ANN_STATE] EVENT_HANDLERS: Dict[str, Callable]
    [MODULE_ANN_STATE] ACTIVE_ROOMS: Dict[str, List[str]]
    [RECON_CLASS] Starting class analysis: SocketIOEventRegistry
    [CLASS_RECON] Processing class: SocketIOEventRegistry
    [CLASS_RECON] Stored class: socketio_events.SocketIOEventRegistry with 0 parents
      [CLASS_CONTEXT] Entered class: socketio_events.SocketIOEventRegistry
    [FUNCTION_RECON] Processing method: __init__
      [PARAM_TYPE] socketio: SocketIO
      [PARAM_TYPE] session_manager: SessionManager
    [FUNCTION_RECON] Stored method: socketio_events.SocketIOEventRegistry.__init__
    [FUNCTION_RECON] Processing method: register_dynamic_event
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] event_name: str
      [PARAM_TYPE] handler: Callable
    [FUNCTION_RECON] Stored method: socketio_events.SocketIOEventRegistry.register_dynamic_event
    [FUNCTION_RECON] Processing method: batch_register_events
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] event_configs: List[Dict[str, Any]]
    [FUNCTION_RECON] Stored method: socketio_events.SocketIOEventRegistry.batch_register_events
    [FUNCTION_RECON] Processing method: create_event_handler
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] config: Dict[str, Any]
    [FUNCTION_RECON] Stored method: socketio_events.SocketIOEventRegistry.create_event_handler
    [FUNCTION_RECON] Processing method: _create_room_handler
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] config: Dict[str, Any]
    [FUNCTION_RECON] Stored method: socketio_events.SocketIOEventRegistry._create_room_handler
    [FUNCTION_RECON] Processing method: _create_broadcast_handler
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] config: Dict[str, Any]
    [FUNCTION_RECON] Stored method: socketio_events.SocketIOEventRegistry._create_broadcast_handler
    [INIT_ATTRS] Extracting attributes from __init__
      [INIT_PARAM] Parameter socketio has type hint: SocketIO
      [INIT_PARAM] Parameter session_manager has type hint: SessionManager
    [INIT_ANALYSIS] Found 2 parameter type hints
      [ATTR_FROM_PARAM] socketio = socketio : SocketIO
      [ATTR_FROM_PARAM] session_manager = session_manager : SessionManager
      [ATTR_FROM_VALUE] event_validator inferred as: EventValidator
      [ATTR_FROM_VALUE] message_validator inferred as: MessageValidator
      [ATTR_ANNOT] registered_events: Dict[str, Callable]
      [ATTR_ANNOT] middleware_stack: List[Callable]
    [INIT_ATTRS] Found 6 attributes
      [CLASS_ATTR] Added attribute socketio to socketio_events.SocketIOEventRegistry: {'type': 'SocketIO'}
      [CLASS_ATTR] Added attribute session_manager to socketio_events.SocketIOEventRegistry: {'type': 'SessionManager'}
      [CLASS_ATTR] Added attribute event_validator to socketio_events.SocketIOEventRegistry: {'type': 'EventValidator'}
      [CLASS_ATTR] Added attribute message_validator to socketio_events.SocketIOEventRegistry: {'type': 'MessageValidator'}
      [CLASS_ATTR] Added attribute registered_events to socketio_events.SocketIOEventRegistry: {'type': 'Dict[str, Callable]'}
      [CLASS_ATTR] Added attribute middleware_stack to socketio_events.SocketIOEventRegistry: {'type': 'List[Callable]'}
      [CLASS_CONTEXT] Exiting class: socketio_events.SocketIOEventRegistry
    [CLASS_FINALIZE] Updated socketio_events.SocketIOEventRegistry with 6 attributes
    [RECON_CLASS] Completed class analysis: SocketIOEventRegistry
    [FUNCTION_RECON] Processing function: register_events
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] socketio: SocketIO
      [PARAM_TYPE] haven_proxy: HavenProxy
    [FUNCTION_RECON] Stored function: socketio_events.register_events
    [FUNCTION_RECON] Processing function: create_dynamic_handler
      [RETURN_TYPE] Found return type: Callable
      [PARAM_TYPE] event_name: str
      [PARAM_TYPE] proxy: HavenProxy
      [PARAM_TYPE] session_manager: SessionManager
    [FUNCTION_RECON] Stored function: socketio_events.create_dynamic_handler
    [FUNCTION_RECON] Processing function: emergency_broadcast
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] message: str
      [PARAM_TYPE] severity: str
    [FUNCTION_RECON] Stored function: socketio_events.emergency_broadcast
    [FUNCTION_RECON] Processing function: admin_notification
      [RETURN_TYPE] Found return type: None
      [PARAM_TYPE] admin_id: str
      [PARAM_TYPE] notification: Dict[str, Any]
    [FUNCTION_RECON] Stored function: socketio_events.admin_notification
    [RECON_FINALIZE] Collecting results from specialized visitors
  [RECON_SUMMARY] Found 1 classes
  [RECON_SUMMARY] Found 10 functions/methods
  [RECON_SUMMARY] Found 5 state variables
  [RECON_SUMMARY] Found 1 external classes
  [RECON_SUMMARY] Found 4 external functions
    Found 1 classes
    Found 10 functions/methods
    Found 5 state variables
    Found 1 external classes
    Found 4 external functions
  
=== PROCESSING INHERITANCE RELATIONSHIPS ===
  Processing admin_manager.OperationType with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing admin_manager.OperationStatus with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing admin_manager.OperationResult with parents: []
  Processing admin_manager.AdminManager with parents: []
  Processing database_manager.DatabaseConnection with parents: []
  Processing database_manager.TransactionManager with parents: []
  Processing decorators.DecoratorRegistry with parents: []
  Processing decorators.ClassBasedDecorator with parents: []
  Processing decorators.PropertyDecorator with parents: []
  Processing event_validator.ValidationLevel with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing event_validator.ValidationResult with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing event_validator.ValidationError with parents: []
  Processing event_validator.ValidationReport with parents: []
  Processing event_validator.ValidationRule with parents: ['Protocol']
      Resolving parent: Protocol
      -> Could not resolve parent: Protocol
  Processing event_validator.BaseValidationRule with parents: ['ABC']
      Resolving parent: ABC
      -> Could not resolve parent: ABC
  Processing event_validator.RequiredFieldRule with parents: ['BaseValidationRule']
      Resolving parent: BaseValidationRule
        -> Resolved to: event_validator.BaseValidationRule
  Processing event_validator.DataTypeRule with parents: ['BaseValidationRule']
      Resolving parent: BaseValidationRule
        -> Resolved to: event_validator.BaseValidationRule
  Processing event_validator.RegexValidationRule with parents: ['BaseValidationRule']
      Resolving parent: BaseValidationRule
        -> Resolved to: event_validator.BaseValidationRule
  Processing event_validator.ValidationEngine with parents: []
  Processing event_validator.ValidationRuleBuilder with parents: []
  Processing event_validator.EventValidator with parents: []
  Processing event_validator.MessageValidator with parents: []
  Processing inheritence_complex.Priority with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing inheritence_complex.ProcessingResult with parents: []
  Processing inheritence_complex.AbstractProcessor with parents: ['ABC']
      Resolving parent: ABC
      -> Could not resolve parent: ABC
  Processing inheritence_complex.AsyncProcessor with parents: ['AbstractProcessor']
      Resolving parent: AbstractProcessor
        -> Resolved to: inheritence_complex.AbstractProcessor
  Processing inheritence_complex.CacheableMixin with parents: []
  Processing inheritence_complex.ValidatedMixin with parents: []
  Processing inheritence_complex.MetricsMixin with parents: []
  Processing inheritence_complex.BasicDataProcessor with parents: ['AsyncProcessor', 'CacheableMixin', 'ValidatedMixin']
      Resolving parent: AsyncProcessor
        -> Resolved to: inheritence_complex.AsyncProcessor
      Resolving parent: CacheableMixin
        -> Resolved to: inheritence_complex.CacheableMixin
      Resolving parent: ValidatedMixin
        -> Resolved to: inheritence_complex.ValidatedMixin
  Processing inheritence_complex.AdvancedProcessor with parents: ['BasicDataProcessor', 'MetricsMixin']
      Resolving parent: BasicDataProcessor
        -> Resolved to: inheritence_complex.BasicDataProcessor
      Resolving parent: MetricsMixin
        -> Resolved to: inheritence_complex.MetricsMixin
  Processing inheritence_complex.SpecializedProcessor with parents: ['AdvancedProcessor']
      Resolving parent: AdvancedProcessor
        -> Resolved to: inheritence_complex.AdvancedProcessor
  Processing inheritence_complex.ProcessorProtocol with parents: ['Protocol']
      Resolving parent: Protocol
      -> Could not resolve parent: Protocol
  Processing inheritence_complex.GenericProcessor with parents: []
  Processing inheritence_complex.UltimateProcessor with parents: ['SpecializedProcessor']
      Resolving parent: SpecializedProcessor
        -> Resolved to: inheritence_complex.SpecializedProcessor
  Processing proxy_handler.ProxyConfig with parents: []
  Processing proxy_handler.ProxyMetrics with parents: []
  Processing proxy_handler.BaseProxy with parents: ['ABC']
      Resolving parent: ABC
      -> Could not resolve parent: ABC
  Processing proxy_handler.DataProxy with parents: ['BaseProxy']
      Resolving parent: BaseProxy
        -> Resolved to: proxy_handler.BaseProxy
  Processing proxy_handler.HavenProxy with parents: ['BaseProxy']
      Resolving parent: BaseProxy
        -> Resolved to: proxy_handler.BaseProxy
  Processing proxy_handler.UserProxy with parents: ['BaseProxy']
      Resolving parent: BaseProxy
        -> Resolved to: proxy_handler.BaseProxy
  Processing session_manager.SessionState with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing session_manager.UserRole with parents: ['Enum']
      Resolving parent: Enum
      -> Could not resolve parent: Enum
  Processing session_manager.SessionMetrics with parents: []
  Processing session_manager.UserSession with parents: []
  Processing session_manager.SessionManager with parents: []
  Processing session_manager.SessionInteractionManager with parents: []
  Processing session_manager.SessionAnalytics with parents: []
  Processing socketio_events.SocketIOEventRegistry with parents: []
  === REFACTORED RECONNAISSANCE PASS COMPLETE ===
Running analysis pass (refactored)...
Log level set to 3
=== USING REFACTORED ANALYSIS PASS ===
=== ANALYSIS PASS START (Refactored Architecture) ===
=== Analyzing admin_manager.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Set -> typing.Set
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] dataclass -> dataclasses.dataclass
    [FROM_IMPORT] field -> dataclasses.field
    [FROM_IMPORT] datetime -> datetime.datetime
    [FROM_IMPORT] timedelta -> datetime.timedelta
    [FROM_IMPORT] Enum -> enum.Enum
    [FROM_IMPORT] auto -> enum.auto
    [IMPORT] logging -> logging
    [IMPORT] threading -> threading
    [IMPORT] uuid -> uuid
  [CLASS] Analyzing class: OperationType
    [CONTEXT] Entered class: admin_manager.OperationType
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: admin_manager.OperationType
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: OperationStatus
    [CONTEXT] Entered class: admin_manager.OperationStatus
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: admin_manager.OperationStatus
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: OperationResult
    [CONTEXT] Entered class: admin_manager.OperationResult
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.OperationResult.get_duration
    [CONTEXT] Entered function: admin_manager.OperationResult.get_duration (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.end_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.end_time
        [CACHE] self.end_time -> admin_manager.OperationResult.end_time (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.OperationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.OperationResult.get_duration
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.OperationResult.get_duration
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.OperationResult.add_error
    [CONTEXT] Entered function: admin_manager.OperationResult.add_error (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'error': 'str'}
        [ARG_TYPE] Processing type annotation for error: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: error -> admin_manager.str
        [ARG_TYPE] RESOLVED error : admin_manager.str
      [CALL] Found call: self.errors.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.errors.append
            [INTERMEDIATE] Step 1: self.errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: admin_manager.OperationResult.errors
            [INTERMEDIATE] Step 2: self.errors.append
      -> Resolved to: admin_manager.OperationResult.errors.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: error
      [SYMBOL_LOOKUP] Found error in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found error in function scope: admin_manager.str
      [ATTRIBUTE] Found attribute access: self.errors.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: error
      [SYMBOL_LOOKUP] Found error in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found error in function scope: admin_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.status
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationStatus.FAILED
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationStatus
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationStatus.CANCELLED
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationStatus
        [CACHE] OperationStatus -> admin_manager.OperationStatus (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.status
        [CACHE] self.status -> admin_manager.OperationResult.status (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationStatus.FAILED
        [CACHE] OperationStatus.FAILED -> admin_manager.OperationStatus.FAILED (cached)
      -> Not module state
      [NAME] Found name reference: OperationStatus
        [CACHE] OperationStatus -> admin_manager.OperationStatus (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.OperationResult.add_error
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.OperationResult.add_error
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.OperationResult.add_warning
    [CONTEXT] Entered function: admin_manager.OperationResult.add_warning (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'warning': 'str'}
        [ARG_TYPE] Processing type annotation for warning: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: warning -> admin_manager.str
        [ARG_TYPE] RESOLVED warning : admin_manager.str
      [CALL] Found call: self.warnings.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.warnings.append
            [INTERMEDIATE] Step 1: self.warnings
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: admin_manager.OperationResult.warnings
            [INTERMEDIATE] Step 2: self.warnings.append
      -> Resolved to: admin_manager.OperationResult.warnings.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: warning
      [SYMBOL_LOOKUP] Found warning in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found warning in function scope: admin_manager.str
      [ATTRIBUTE] Found attribute access: self.warnings.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.warnings
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: warning
      [SYMBOL_LOOKUP] Found warning in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found warning in function scope: admin_manager.str
      -> Not module state
    [CONTEXT] Exited function: admin_manager.OperationResult.add_warning
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.OperationResult.add_warning
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: admin_manager.OperationResult
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: AdminManager
    [CONTEXT] Entered class: admin_manager.AdminManager
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager.__init__
    [CONTEXT] Entered function: admin_manager.AdminManager.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.operations_history
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: Set
      [SYMBOL_LOOKUP] Variable Set not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operation_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [CALL] Found call: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
            [INTERMEDIATE] Tracking chain steps for: threading.RLock
            [INTERMEDIATE] Step 1: threading.RLock
      -> Resolved to: threading.RLock
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [NAME] Found name reference: threading
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.admin_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: Set
        [CACHE] Set -> typing.Set (cached)
      -> Not module state
      [NAME] Found name reference: OperationType
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.audit_log
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: Any
        [CACHE] Any -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: self._initialize_system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._initialize_system_config
            [INTERMEDIATE] Step 1: self._initialize_system_config
      -> Resolved to: admin_manager.AdminManager._initialize_system_config
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._initialize_system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager.__init__
        Calls: 2
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._initialize_system_config
    [CONTEXT] Entered function: admin_manager.AdminManager._initialize_system_config (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._initialize_system_config
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._initialize_system_config
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager.execute_operation
    [CONTEXT] Entered function: admin_manager.AdminManager.execute_operation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'operation_type': 'str', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for operation_type: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: operation_type -> admin_manager.str
        [ARG_TYPE] RESOLVED operation_type : admin_manager.str
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: op_type = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: op_type
      [SYMBOL_LOOKUP] Variable op_type not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [CALL] Found call: operation_type.upper
      [SYMBOL_LOOKUP] Found operation_type in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_type in function scope: admin_manager.str
            [INTERMEDIATE] Tracking chain steps for: operation_type.upper
            [INTERMEDIATE] Step 1: operation_type.upper
      -> Resolved to: admin_manager.str.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: operation_type.upper
      [SYMBOL_LOOKUP] Found operation_type in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_type in function scope: admin_manager.str
      -> Not module state
      [NAME] Found name reference: operation_type
      [SYMBOL_LOOKUP] Found operation_type in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_type in function scope: admin_manager.str
      -> Not module state
      [NAME] Found name reference: KeyError
      [SYMBOL_LOOKUP] Variable KeyError not found in any scope
      -> Not module state
      [NAME] Found name reference: operation_type
        [CACHE] operation_type -> admin_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: op.name
      [SYMBOL_LOOKUP] Variable op not found in any scope
      -> Not module state
      [NAME] Found name reference: op
      [SYMBOL_LOOKUP] Variable op not found in any scope
      -> Not module state
      [NAME] Found name reference: op
        [CACHE] op -> admin_manager.op (cached)
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ASSIGNMENT] Processing: operation_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.str
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for operation_id
      [NAME] Found name reference: operation_id
      [SYMBOL_LOOKUP] Variable operation_id not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [CALL] Found call: uuid.uuid4
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [NAME] Found name reference: uuid
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.OperationResult
      [TYPE_INFERENCE] RESOLVED Inferred type: admin_manager.OperationResult (class instantiation)
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ASSIGNMENT] RESOLVED Updated symbol table: result = admin_manager.OperationResult
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [CALL] Found call: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      -> Resolved to: admin_manager.OperationResult
      -> ADDED to instantiations
      [NAME] Found name reference: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [NAME] Found name reference: op_type
        [CACHE] op_type -> admin_manager.op_type (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationStatus.PENDING
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationStatus
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operation_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [CALL] Found call: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.end_time
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
        [CACHE] datetime.now -> datetime.datetime.now (cached)
      -> Not module state
      [NAME] Found name reference: datetime
        [CACHE] datetime -> datetime.datetime (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_history
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: self._result_to_dict
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._result_to_dict
            [INTERMEDIATE] Step 1: self._result_to_dict
      -> Resolved to: admin_manager.AdminManager._result_to_dict
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [ATTRIBUTE] Found attribute access: self._result_to_dict
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: self.active_operations.add
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.active_operations.add
            [INTERMEDIATE] Step 1: self.active_operations
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.active_operations
            [INTERMEDIATE] Step 2: self.active_operations.add
      -> Resolved to: admin_manager.AdminManager.active_operations.add
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: operation_id
      [SYMBOL_LOOKUP] Variable operation_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.active_operations.add
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
        [CACHE] self.active_operations -> admin_manager.AdminManager.active_operations (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_history
        [CACHE] self.operations_history -> admin_manager.AdminManager.operations_history (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.status
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationStatus.IN_PROGRESS
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationStatus
        [CACHE] OperationStatus -> admin_manager.OperationStatus (cached)
      -> Not module state
      [CALL] Found call: self._execute_specific_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._execute_specific_operation
            [INTERMEDIATE] Step 1: self._execute_specific_operation
      -> Resolved to: admin_manager.AdminManager._execute_specific_operation
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
        [FUNCTION_ARG] Checking argument: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._execute_specific_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.errors
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.success
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.status
        [CACHE] result.status -> admin_manager.OperationResult.status (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationStatus.COMPLETED
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationStatus
        [CACHE] OperationStatus -> admin_manager.OperationStatus (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.message
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: operation_type
        [CACHE] operation_type -> admin_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
        [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [CALL] Found call: logging.exception
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.exception
            [INTERMEDIATE] Step 1: logging.exception
      -> Resolved to: logging.exception
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.exception
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.end_time
        [CACHE] result.end_time -> admin_manager.OperationResult.end_time (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
        [CACHE] datetime.now -> datetime.datetime.now (cached)
      -> Not module state
      [NAME] Found name reference: datetime
        [CACHE] datetime -> datetime.datetime (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operation_lock
        [CACHE] self.operation_lock -> admin_manager.AdminManager.operation_lock (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [CALL] Found call: self.active_operations.discard
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.active_operations.discard
            [INTERMEDIATE] Step 1: self.active_operations
    [CACHE] self.active_operations -> admin_manager.AdminManager.active_operations (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.active_operations
            [INTERMEDIATE] Step 2: self.active_operations.discard
      -> Resolved to: admin_manager.AdminManager.active_operations.discard
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: operation_id
      [SYMBOL_LOOKUP] Variable operation_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.active_operations.discard
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
        [CACHE] self.active_operations -> admin_manager.AdminManager.active_operations (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_history
        [CACHE] self.operations_history -> admin_manager.AdminManager.operations_history (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.operation_id (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: self._add_audit_entry
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._add_audit_entry
            [INTERMEDIATE] Step 1: self._add_audit_entry
      -> Resolved to: admin_manager.AdminManager._add_audit_entry
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
        [FUNCTION_ARG] Checking argument: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._add_audit_entry
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: parameters
        [CACHE] parameters -> typing.Dict (cached)
      -> Not module state
      [CALL] Found call: self._result_to_dict
    [CACHE] self._result_to_dict -> admin_manager.AdminManager._result_to_dict (cached)
            [INTERMEDIATE] Tracking chain steps for: self._result_to_dict
            [INTERMEDIATE] Step 1: self._result_to_dict
      -> Resolved to: admin_manager.AdminManager._result_to_dict
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [ATTRIBUTE] Found attribute access: self._result_to_dict
        [CACHE] self._result_to_dict -> admin_manager.AdminManager._result_to_dict (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager.execute_operation
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager.execute_operation
        Calls: 5
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._execute_specific_operation
    [CONTEXT] Entered function: admin_manager.AdminManager._execute_specific_operation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: operation_handlers = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: operation_handlers
      [SYMBOL_LOOKUP] Variable operation_handlers not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.USER_MANAGEMENT
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.SYSTEM_CONFIGURATION
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.DATA_MIGRATION
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.SECURITY_AUDIT
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.PERFORMANCE_TUNING
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.BACKUP_RESTORE
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: OperationType.MONITORING_SETUP
      [SYMBOL_LOOKUP] Variable OperationType not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationType
        [CACHE] OperationType -> admin_manager.OperationType (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_user_management
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_system_configuration
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_data_migration
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_security_audit
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_performance_tuning
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_backup_restore
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._handle_monitoring_setup
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: handler = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: operation_handlers.get
      [SYMBOL_LOOKUP] Variable operation_handlers not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.operation_handlers.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for handler
      [NAME] Found name reference: handler
      [SYMBOL_LOOKUP] Variable handler not found in any scope
      -> Not module state
      [CALL] Found call: operation_handlers.get
      [SYMBOL_LOOKUP] Variable operation_handlers not found in any scope
            [INTERMEDIATE] Tracking chain steps for: operation_handlers.get
            [INTERMEDIATE] Step 1: operation_handlers.get
      -> Resolved to: admin_manager.operation_handlers.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: operation_handlers.get
      [SYMBOL_LOOKUP] Variable operation_handlers not found in any scope
      -> Not module state
      [NAME] Found name reference: operation_handlers
        [CACHE] operation_handlers -> admin_manager.operation_handlers (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_type
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: handler
        [CACHE] handler -> admin_manager.handler (cached)
      -> Not module state
      [CALL] Found call: handler
      [SYMBOL_LOOKUP] Variable handler not found in any scope
      -> Resolved to: admin_manager.handler
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
        [FUNCTION_ARG] Checking argument: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [NAME] Found name reference: handler
        [CACHE] handler -> admin_manager.handler (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_type
        [CACHE] result.operation_type -> admin_manager.OperationResult.operation_type (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._execute_specific_operation
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._execute_specific_operation
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_user_management
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_user_management (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: action = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for action
      [NAME] Found name reference: action
      [SYMBOL_LOOKUP] Variable action not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: action
        [CACHE] action -> admin_manager.action (cached)
      -> Not module state
      [ASSIGNMENT] Processing: username = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for username
      [NAME] Found name reference: username
      [SYMBOL_LOOKUP] Variable username not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
        [CACHE] parameters.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: parameters
        [CACHE] parameters -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: username
        [CACHE] username -> admin_manager.username (cached)
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: username
        [CACHE] username -> admin_manager.username (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [CALL] Found call: uuid.uuid4
    [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [NAME] Found name reference: uuid
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now.isoformat
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
            [INTERMEDIATE] Tracking chain steps for: datetime.now.isoformat
            [INTERMEDIATE] Step 1: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Step 1 resolved to: datetime.datetime.now
            [INTERMEDIATE] Step 2: datetime.now.isoformat
      -> Resolved to: datetime.datetime.now.isoformat
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now.isoformat
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: action
        [CACHE] action -> admin_manager.action (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for user_id
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
        [CACHE] parameters.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: parameters
        [CACHE] parameters -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> admin_manager.user_id (cached)
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
        [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> admin_manager.user_id (cached)
      -> Not module state
      [CALL] Found call: result.add_warning
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Tracking chain steps for: result.add_warning
            [INTERMEDIATE] Step 1: result.add_warning
      -> Resolved to: admin_manager.OperationResult.add_warning
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_warning
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: action
        [CACHE] action -> admin_manager.action (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [CALL] Found call: uuid.uuid4
    [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
        [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
      -> Not module state
      [NAME] Found name reference: uuid
        [CACHE] uuid -> uuid (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [CALL] Found call: uuid.uuid4
    [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
        [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
      -> Not module state
      [NAME] Found name reference: uuid
        [CACHE] uuid -> uuid (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> admin_manager.str (cached)
      -> Not module state
      [CALL] Found call: uuid.uuid4
    [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
        [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
      -> Not module state
      [NAME] Found name reference: uuid
        [CACHE] uuid -> uuid (cached)
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
        [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: action
        [CACHE] action -> admin_manager.action (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_user_management
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_user_management
        Calls: 3
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_system_configuration
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_system_configuration (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: config_updates = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for config_updates
      [NAME] Found name reference: config_updates
      [SYMBOL_LOOKUP] Variable config_updates not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [ASSIGNMENT] Processing: valid_keys = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.set
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for valid_keys
      [NAME] Found name reference: valid_keys
      [SYMBOL_LOOKUP] Variable valid_keys not found in any scope
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      -> Not module state
      [CALL] Found call: self.system_config.keys
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.system_config.keys
            [INTERMEDIATE] Step 1: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.system_config
            [INTERMEDIATE] Step 2: self.system_config.keys
      -> Resolved to: admin_manager.AdminManager.system_config.keys
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.system_config.keys
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: invalid_keys = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: invalid_keys
      [SYMBOL_LOOKUP] Variable invalid_keys not found in any scope
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
        [CACHE] set -> admin_manager.set (cached)
      -> Not module state
      [CALL] Found call: config_updates.keys
      [SYMBOL_LOOKUP] Variable config_updates not found in any scope
            [INTERMEDIATE] Tracking chain steps for: config_updates.keys
            [INTERMEDIATE] Step 1: config_updates.keys
      -> Resolved to: admin_manager.config_updates.keys
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: config_updates.keys
      [SYMBOL_LOOKUP] Variable config_updates not found in any scope
      -> Not module state
      [NAME] Found name reference: config_updates
        [CACHE] config_updates -> admin_manager.config_updates (cached)
      -> Not module state
      [NAME] Found name reference: valid_keys
        [CACHE] valid_keys -> admin_manager.valid_keys (cached)
      -> Not module state
      [NAME] Found name reference: invalid_keys
        [CACHE] invalid_keys -> admin_manager.invalid_keys (cached)
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: invalid_keys
        [CACHE] invalid_keys -> admin_manager.invalid_keys (cached)
      -> Not module state
      [ASSIGNMENT] Processing: old_config = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.system_config.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager.system_config.copy
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for old_config
      [NAME] Found name reference: old_config
      [SYMBOL_LOOKUP] Variable old_config not found in any scope
      -> Not module state
      [CALL] Found call: self.system_config.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.system_config.copy
            [INTERMEDIATE] Step 1: self.system_config
    [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.system_config
            [INTERMEDIATE] Step 2: self.system_config.copy
      -> Resolved to: admin_manager.AdminManager.system_config.copy
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.system_config.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
        [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [CALL] Found call: self.system_config.update
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.system_config.update
            [INTERMEDIATE] Step 1: self.system_config
    [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.system_config
            [INTERMEDIATE] Step 2: self.system_config.update
      -> Resolved to: admin_manager.AdminManager.system_config.update
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: config_updates
      [SYMBOL_LOOKUP] Variable config_updates not found in any scope
      [ATTRIBUTE] Found attribute access: self.system_config.update
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
        [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: config_updates
        [CACHE] config_updates -> admin_manager.config_updates (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: old_config
        [CACHE] old_config -> admin_manager.old_config (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: self.system_config.copy
    [CACHE] self.system_config.copy -> admin_manager.AdminManager.system_config.copy (cached)
            [INTERMEDIATE] Tracking chain steps for: self.system_config.copy
            [INTERMEDIATE] Step 1: self.system_config
    [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.system_config
            [INTERMEDIATE] Step 2: self.system_config.copy
      -> Resolved to: admin_manager.AdminManager.system_config.copy
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.system_config.copy
        [CACHE] self.system_config.copy -> admin_manager.AdminManager.system_config.copy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
        [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: config_updates
        [CACHE] config_updates -> admin_manager.config_updates (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_system_configuration
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_system_configuration
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_data_migration
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_data_migration (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: migration_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for migration_type
      [NAME] Found name reference: migration_type
      [SYMBOL_LOOKUP] Variable migration_type not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: migration_type
        [CACHE] migration_type -> admin_manager.migration_type (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: migration_type
        [CACHE] migration_type -> admin_manager.migration_type (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
        [CACHE] parameters.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: parameters
        [CACHE] parameters -> typing.Dict (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: migration_type
        [CACHE] migration_type -> admin_manager.migration_type (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_data_migration
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_data_migration
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_security_audit
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_security_audit (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: audit_scope = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for audit_scope
      [NAME] Found name reference: audit_scope
      [SYMBOL_LOOKUP] Variable audit_scope not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [ASSIGNMENT] Processing: audit_findings = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: audit_findings
      [SYMBOL_LOOKUP] Variable audit_findings not found in any scope
      -> Not module state
      [NAME] Found name reference: audit_scope
        [CACHE] audit_scope -> admin_manager.audit_scope (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: audit_findings
        [CACHE] audit_findings -> admin_manager.audit_findings (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: audit_scope
        [CACHE] audit_scope -> admin_manager.audit_scope (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: audit_findings
        [CACHE] audit_findings -> admin_manager.audit_findings (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: audit_findings
        [CACHE] audit_findings -> admin_manager.audit_findings (cached)
      -> Not module state
      [CALL] Found call: result.add_warning
    [CACHE] result.add_warning -> admin_manager.OperationResult.add_warning (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_warning
            [INTERMEDIATE] Step 1: result.add_warning
      -> Resolved to: admin_manager.OperationResult.add_warning
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_warning
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_security_audit
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_security_audit
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_performance_tuning
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_performance_tuning (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: target_component = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for target_component
      [NAME] Found name reference: target_component
      [SYMBOL_LOOKUP] Variable target_component not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [ASSIGNMENT] Processing: performance_metrics = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: performance_metrics
      [SYMBOL_LOOKUP] Variable performance_metrics not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: target_component
        [CACHE] target_component -> admin_manager.target_component (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: performance_metrics
        [CACHE] performance_metrics -> admin_manager.performance_metrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_performance_tuning
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_performance_tuning
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_backup_restore
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_backup_restore (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: operation = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for operation
      [NAME] Found name reference: operation
      [SYMBOL_LOOKUP] Variable operation not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: operation
        [CACHE] operation -> admin_manager.operation (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [CALL] Found call: uuid.uuid4
    [CACHE] uuid.uuid4 -> uuid.uuid4 (cached)
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [NAME] Found name reference: uuid
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: datetime.now.strftime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
            [INTERMEDIATE] Tracking chain steps for: datetime.now.strftime
            [INTERMEDIATE] Step 1: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Step 1 resolved to: datetime.datetime.now
            [INTERMEDIATE] Step 2: datetime.now.strftime
      -> Resolved to: datetime.datetime.now.strftime
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now.strftime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: operation
        [CACHE] operation -> admin_manager.operation (cached)
      -> Not module state
      [ASSIGNMENT] Processing: backup_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for backup_id
      [NAME] Found name reference: backup_id
      [SYMBOL_LOOKUP] Variable backup_id not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
        [CACHE] parameters.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: parameters
        [CACHE] parameters -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: backup_id
        [CACHE] backup_id -> admin_manager.backup_id (cached)
      -> Not module state
      [CALL] Found call: result.add_error
    [CACHE] result.add_error -> admin_manager.OperationResult.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_error
            [INTERMEDIATE] Step 1: result.add_error
      -> Resolved to: admin_manager.OperationResult.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_error
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: backup_id
        [CACHE] backup_id -> admin_manager.backup_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: datetime.now.isoformat
    [CACHE] datetime.now.isoformat -> datetime.datetime.now.isoformat (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now.isoformat
            [INTERMEDIATE] Step 1: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Step 1 resolved to: datetime.datetime.now
            [INTERMEDIATE] Step 2: datetime.now.isoformat
      -> Resolved to: datetime.datetime.now.isoformat
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now.isoformat
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
        [CACHE] datetime.now -> datetime.datetime.now (cached)
      -> Not module state
      [NAME] Found name reference: datetime
        [CACHE] datetime -> datetime.datetime (cached)
      -> Not module state
      [CALL] Found call: result.add_warning
    [CACHE] result.add_warning -> admin_manager.OperationResult.add_warning (cached)
            [INTERMEDIATE] Tracking chain steps for: result.add_warning
            [INTERMEDIATE] Step 1: result.add_warning
      -> Resolved to: admin_manager.OperationResult.add_warning
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.add_warning
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_backup_restore
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_backup_restore
        Calls: 3
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._handle_monitoring_setup
    [CONTEXT] Entered function: admin_manager.AdminManager._handle_monitoring_setup (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: monitoring_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for monitoring_type
      [NAME] Found name reference: monitoring_type
      [SYMBOL_LOOKUP] Variable monitoring_type not found in any scope
      -> Not module state
      [CALL] Found call: parameters.get
    [CACHE] parameters.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: parameters.get
            [INTERMEDIATE] Step 1: parameters.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: parameters.get
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
        [CACHE] result.data -> admin_manager.OperationResult.data (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: monitoring_type
        [CACHE] monitoring_type -> admin_manager.monitoring_type (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._handle_monitoring_setup
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._handle_monitoring_setup
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._result_to_dict
    [CONTEXT] Entered function: admin_manager.AdminManager._result_to_dict (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
      [ASSIGNMENT] Processing: result_dict = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: result_dict
      [SYMBOL_LOOKUP] Variable result_dict not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_id
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_type.name
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_type
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.status.name
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.status
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.success
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.message
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: result.start_time.isoformat
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Tracking chain steps for: result.start_time.isoformat
            [INTERMEDIATE] Step 1: result.start_time
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Step 1 resolved to: admin_manager.OperationResult.start_time
            [INTERMEDIATE] Step 2: result.start_time.isoformat
      -> Resolved to: admin_manager.OperationResult.start_time.isoformat
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.start_time.isoformat
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.start_time
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.data
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.end_time
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: result_dict
        [CACHE] result_dict -> admin_manager.result_dict (cached)
      -> Not module state
      [CALL] Found call: result.end_time.isoformat
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Tracking chain steps for: result.end_time.isoformat
            [INTERMEDIATE] Step 1: result.end_time
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Step 1 resolved to: admin_manager.OperationResult.end_time
            [INTERMEDIATE] Step 2: result.end_time.isoformat
      -> Resolved to: admin_manager.OperationResult.end_time.isoformat
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.end_time.isoformat
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.end_time
        [CACHE] result.end_time -> admin_manager.OperationResult.end_time (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ASSIGNMENT] Processing: duration = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: result.get_duration
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [TYPE_INFERENCE] Call resolved to: admin_manager.OperationResult.get_duration
        [RETURN_TYPE_RESOLUTION] Resolving return type: timedelta
        [RETURN_TYPE_RESOLUTION] Class 'timedelta' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: timedelta
      [TYPE_INFERENCE] Could not resolve return type 'timedelta' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: timedelta (from return type - unresolved)
      [SYMBOL_UPDATE] Function: duration -> timedelta
        [ASSIGNMENT] RESOLVED Updated symbol table: duration = timedelta
      [NAME] Found name reference: duration
      [SYMBOL_LOOKUP] Found duration in function scope: timedelta
      [SYMBOL_LOOKUP] Found duration in function scope: timedelta
      -> Not module state
      [CALL] Found call: result.get_duration
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Tracking chain steps for: result.get_duration
            [INTERMEDIATE] Step 1: result.get_duration
      -> Resolved to: admin_manager.OperationResult.get_duration
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.get_duration
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: duration
        [CACHE] duration -> timedelta (cached)
      -> Not module state
      [NAME] Found name reference: result_dict
        [CACHE] result_dict -> admin_manager.result_dict (cached)
      -> Not module state
      [CALL] Found call: duration.total_seconds
      [SYMBOL_LOOKUP] Found duration in function scope: timedelta
      [SYMBOL_LOOKUP] Found duration in function scope: timedelta
            [INTERMEDIATE] Tracking chain steps for: duration.total_seconds
            [INTERMEDIATE] Step 1: duration.total_seconds
      -> Resolved to: timedelta.total_seconds
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: duration.total_seconds
      [SYMBOL_LOOKUP] Found duration in function scope: timedelta
      [SYMBOL_LOOKUP] Found duration in function scope: timedelta
      -> Not module state
      [NAME] Found name reference: duration
        [CACHE] duration -> timedelta (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.errors
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: result_dict
        [CACHE] result_dict -> admin_manager.result_dict (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.errors
        [CACHE] result.errors -> admin_manager.OperationResult.errors (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.warnings
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: result_dict
        [CACHE] result_dict -> admin_manager.result_dict (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.warnings
        [CACHE] result.warnings -> admin_manager.OperationResult.warnings (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: result_dict
        [CACHE] result_dict -> admin_manager.result_dict (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._result_to_dict
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._result_to_dict
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager._add_audit_entry
    [CONTEXT] Entered function: admin_manager.AdminManager._add_audit_entry (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'OperationResult', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for result: OperationResult
      [SYMBOL_LOOKUP] Variable OperationResult not found in any scope
      [SYMBOL_UPDATE] Function: result -> admin_manager.OperationResult
        [ARG_TYPE] RESOLVED result : admin_manager.OperationResult
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: audit_entry = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: audit_entry
      [SYMBOL_LOOKUP] Variable audit_entry not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now.isoformat
    [CACHE] datetime.now.isoformat -> datetime.datetime.now.isoformat (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now.isoformat
            [INTERMEDIATE] Step 1: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Step 1 resolved to: datetime.datetime.now
            [INTERMEDIATE] Step 2: datetime.now.isoformat
      -> Resolved to: datetime.datetime.now.isoformat
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now.isoformat
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_id
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_type.name
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.operation_type
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.status.name
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.status
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.success
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
      [CALL] Found call: result.get_duration
    [CACHE] result.get_duration -> admin_manager.OperationResult.get_duration (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get_duration
            [INTERMEDIATE] Step 1: result.get_duration
      -> Resolved to: admin_manager.OperationResult.get_duration
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.get_duration
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: result.get_duration.total_seconds
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
            [INTERMEDIATE] Tracking chain steps for: result.get_duration.total_seconds
            [INTERMEDIATE] Step 1: result.get_duration
    [CACHE] result.get_duration -> admin_manager.OperationResult.get_duration (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.OperationResult.get_duration
        [RETURN_TYPE_RESOLUTION] Resolving return type: timedelta
        [RETURN_TYPE_RESOLUTION] Class 'timedelta' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: timedelta
            [INTERMEDIATE] Step 2: result.get_duration.total_seconds
      -> Resolved to: admin_manager.OperationResult.get_duration.total_seconds
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get_duration.total_seconds
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      [SYMBOL_LOOKUP] Found result in function scope: admin_manager.OperationResult
      -> Not module state
      [CALL] Found call: result.get_duration
    [CACHE] result.get_duration -> admin_manager.OperationResult.get_duration (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get_duration
            [INTERMEDIATE] Step 1: result.get_duration
      -> Resolved to: admin_manager.OperationResult.get_duration
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: result.get_duration
        [CACHE] result.get_duration -> admin_manager.OperationResult.get_duration (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.OperationResult (cached)
      -> Not module state
      [CALL] Found call: self.audit_log.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.audit_log.append
            [INTERMEDIATE] Step 1: self.audit_log
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.audit_log
            [INTERMEDIATE] Step 2: self.audit_log.append
      -> Resolved to: admin_manager.AdminManager.audit_log.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: audit_entry
      [SYMBOL_LOOKUP] Variable audit_entry not found in any scope
      [ATTRIBUTE] Found attribute access: self.audit_log.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.audit_log
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: audit_entry
        [CACHE] audit_entry -> admin_manager.audit_entry (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cutoff_date = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cutoff_date
      [SYMBOL_LOOKUP] Variable cutoff_date not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
        [CACHE] datetime.now -> datetime.datetime.now (cached)
      -> Not module state
      [NAME] Found name reference: datetime
        [CACHE] datetime -> datetime.datetime (cached)
      -> Not module state
      [CALL] Found call: timedelta
      [SYMBOL_LOOKUP] Variable timedelta not found in any scope
      -> Resolved to: datetime.timedelta
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: timedelta
      [SYMBOL_LOOKUP] Variable timedelta not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.audit_log
        [CACHE] self.audit_log -> admin_manager.AdminManager.audit_log (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: entry
      [SYMBOL_LOOKUP] Variable entry not found in any scope
      -> Not module state
      [NAME] Found name reference: entry
        [CACHE] entry -> admin_manager.entry (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.audit_log
        [CACHE] self.audit_log -> admin_manager.AdminManager.audit_log (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [CALL] Found call: datetime.fromisoformat
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
            [INTERMEDIATE] Tracking chain steps for: datetime.fromisoformat
            [INTERMEDIATE] Step 1: datetime.fromisoformat
      -> Resolved to: datetime.datetime.fromisoformat
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.fromisoformat
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
        [CACHE] datetime -> datetime.datetime (cached)
      -> Not module state
      [NAME] Found name reference: entry
        [CACHE] entry -> admin_manager.entry (cached)
      -> Not module state
      [NAME] Found name reference: cutoff_date
        [CACHE] cutoff_date -> admin_manager.cutoff_date (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager._add_audit_entry
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager._add_audit_entry
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager.get_operation_status
    [CONTEXT] Entered function: admin_manager.AdminManager.get_operation_status (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'operation_id': 'str'}
        [ARG_TYPE] Processing type annotation for operation_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: operation_id -> admin_manager.str
        [ARG_TYPE] RESOLVED operation_id : admin_manager.str
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.operations_history.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager.operations_history.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: self.operations_history.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.operations_history.get
            [INTERMEDIATE] Step 1: self.operations_history
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.operations_history
            [INTERMEDIATE] Step 2: self.operations_history.get
      -> Resolved to: admin_manager.AdminManager.operations_history.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: operation_id
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [ATTRIBUTE] Found attribute access: self.operations_history.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_history
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: operation_id
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.result (cached)
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: self._result_to_dict
    [CACHE] self._result_to_dict -> admin_manager.AdminManager._result_to_dict (cached)
            [INTERMEDIATE] Tracking chain steps for: self._result_to_dict
            [INTERMEDIATE] Step 1: self._result_to_dict
      -> Resolved to: admin_manager.AdminManager._result_to_dict
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      [ATTRIBUTE] Found attribute access: self._result_to_dict
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.result (cached)
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: admin_manager.AdminManager.get_operation_status
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager.get_operation_status
        Calls: 1
        Instantiations: 0
        State Access: 1
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager.get_active_operations
    [CONTEXT] Entered function: admin_manager.AdminManager.get_active_operations (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.operation_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: list
      -> IGNORED (built-in function)
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager.get_active_operations
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager.get_active_operations
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager.get_system_status
    [CONTEXT] Entered function: admin_manager.AdminManager.get_system_status (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> admin_manager.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_history
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [CALL] Found call: self.system_config.copy
    [CACHE] self.system_config.copy -> admin_manager.AdminManager.system_config.copy (cached)
            [INTERMEDIATE] Tracking chain steps for: self.system_config.copy
            [INTERMEDIATE] Step 1: self.system_config
    [CACHE] self.system_config -> admin_manager.AdminManager.system_config (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.system_config
            [INTERMEDIATE] Step 2: self.system_config.copy
      -> Resolved to: admin_manager.AdminManager.system_config.copy
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.system_config.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.system_config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager.get_system_status
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager.get_system_status
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: admin_manager.AdminManager.cancel_operation
    [CONTEXT] Entered function: admin_manager.AdminManager.cancel_operation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'operation_id': 'str'}
        [ARG_TYPE] Processing type annotation for operation_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: operation_id -> admin_manager.str
        [ARG_TYPE] RESOLVED operation_id : admin_manager.str
      [ATTRIBUTE] Found attribute access: self.operation_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: operation_id
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.operations_history.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager.operations_history.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: self.operations_history.get
    [CACHE] self.operations_history.get -> admin_manager.AdminManager.operations_history.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.operations_history.get
            [INTERMEDIATE] Step 1: self.operations_history
    [CACHE] self.operations_history -> admin_manager.AdminManager.operations_history (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.operations_history
            [INTERMEDIATE] Step 2: self.operations_history.get
      -> Resolved to: admin_manager.AdminManager.operations_history.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: operation_id
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [ATTRIBUTE] Found attribute access: self.operations_history.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_history
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.result (cached)
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [ATTRIBUTE] Found attribute access: result.status
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.result (cached)
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [ATTRIBUTE] Found attribute access: OperationStatus.CANCELLED
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [NAME] Found name reference: OperationStatus
      [SYMBOL_LOOKUP] Variable OperationStatus not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.end_time
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.result (cached)
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.message
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> admin_manager.result (cached)
      -> Resolved to state: admin_manager.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: self.active_operations.discard
    [CACHE] self.active_operations.discard -> admin_manager.AdminManager.active_operations.discard (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_operations.discard
            [INTERMEDIATE] Step 1: self.active_operations
    [CACHE] self.active_operations -> admin_manager.AdminManager.active_operations (cached)
            [INTERMEDIATE] Step 1 resolved to: admin_manager.AdminManager.active_operations
            [INTERMEDIATE] Step 2: self.active_operations.discard
      -> Resolved to: admin_manager.AdminManager.active_operations.discard
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: operation_id
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [SYMBOL_LOOKUP] Found operation_id in function scope: admin_manager.str
      [ATTRIBUTE] Found attribute access: self.active_operations.discard
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_operations
        [CACHE] self.active_operations -> admin_manager.AdminManager.active_operations (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_id
        [CACHE] operation_id -> admin_manager.str (cached)
      -> Not module state
    [CONTEXT] Exited function: admin_manager.AdminManager.cancel_operation
    [FUNCTION_ANALYSIS] Completed analysis of: admin_manager.AdminManager.cancel_operation
        Calls: 0
        Instantiations: 0
        State Access: 1
    [CONTEXT] Exited class: admin_manager.AdminManager
    [SYMBOL_TABLE] Exited class scope
      [ASSIGNMENT] Processing: manager = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: AdminManager
      [SYMBOL_LOOKUP] Variable AdminManager not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager
      [TYPE_INFERENCE] RESOLVED Inferred type: admin_manager.AdminManager (class instantiation)
      [SYMBOL_UPDATE] Function: manager -> admin_manager.AdminManager
        [ASSIGNMENT] RESOLVED Updated symbol table: manager = admin_manager.AdminManager
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: manager.execute_operation
      [SYMBOL_LOOKUP] Found manager in function scope: admin_manager.AdminManager
      [SYMBOL_LOOKUP] Found manager in function scope: admin_manager.AdminManager
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager.execute_operation
        [RETURN_TYPE_RESOLUTION] Resolving return type: Dict[str, Any]
        [RETURN_TYPE_RESOLUTION] Class 'Dict[str, Any]' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Dict[str, Any]
      [TYPE_INFERENCE] Could not resolve return type 'Dict[str, Any]' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Dict[str, Any] (from return type - unresolved)
      [SYMBOL_UPDATE] Function: result -> Dict[str, Any]
        [ASSIGNMENT] RESOLVED Updated symbol table: result = Dict[str, Any]
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: manager.execute_operation
      [SYMBOL_LOOKUP] Found manager in function scope: admin_manager.AdminManager
      [SYMBOL_LOOKUP] Found manager in function scope: admin_manager.AdminManager
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager.execute_operation
        [RETURN_TYPE_RESOLUTION] Resolving return type: Dict[str, Any]
        [RETURN_TYPE_RESOLUTION] Class 'Dict[str, Any]' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Dict[str, Any]
      [TYPE_INFERENCE] Could not resolve return type 'Dict[str, Any]' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Dict[str, Any] (from return type - unresolved)
      [SYMBOL_UPDATE] Function: result -> Dict[str, Any]
        [ASSIGNMENT] RESOLVED Updated symbol table: result = Dict[str, Any]
      [ASSIGNMENT] Processing: status = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: manager.get_system_status
      [SYMBOL_LOOKUP] Found manager in function scope: admin_manager.AdminManager
      [SYMBOL_LOOKUP] Found manager in function scope: admin_manager.AdminManager
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager.get_system_status
        [RETURN_TYPE_RESOLUTION] Resolving return type: Dict[str, Any]
        [RETURN_TYPE_RESOLUTION] Class 'Dict[str, Any]' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Dict[str, Any]
      [TYPE_INFERENCE] Could not resolve return type 'Dict[str, Any]' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Dict[str, Any] (from return type - unresolved)
      [SYMBOL_UPDATE] Function: status -> Dict[str, Any]
        [ASSIGNMENT] RESOLVED Updated symbol table: status = Dict[str, Any]
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing database_manager.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] contextmanager -> contextlib.contextmanager
    [IMPORT] threading -> threading
    [IMPORT] time -> time
    [IMPORT] logging -> logging
  [CLASS] Analyzing class: DatabaseConnection
    [CONTEXT] Entered class: database_manager.DatabaseConnection
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.__init__
    [CONTEXT] Entered function: database_manager.DatabaseConnection.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'connection_id': 'str'}
        [ARG_TYPE] Processing type annotation for connection_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: connection_id -> database_manager.str
        [ARG_TYPE] RESOLVED connection_id : database_manager.str
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: connection_id
      [SYMBOL_LOOKUP] Found connection_id in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found connection_id in function scope: database_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.query_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_query_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
            [INTERMEDIATE] Tracking chain steps for: threading.RLock
            [INTERMEDIATE] Step 1: threading.RLock
      -> Resolved to: threading.RLock
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [NAME] Found name reference: threading
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.__init__
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.execute
    [CONTEXT] Entered function: database_manager.DatabaseConnection.execute (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'query': 'str', 'params': 'Optional[tuple]'}
        [ARG_TYPE] Processing type annotation for query: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: query -> database_manager.str
        [ARG_TYPE] RESOLVED query : database_manager.str
        [ARG_TYPE] Processing type annotation for params: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: params -> typing.Optional
        [ARG_TYPE] RESOLVED params : typing.Optional
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.query_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_query_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [CALL] Found call: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.debug
            [INTERMEDIATE] Step 1: logging.debug
      -> Resolved to: logging.debug
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [NAME] Found name reference: query
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      -> Not module state
      [CALL] Found call: query.upper.startswith
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
            [INTERMEDIATE] Tracking chain steps for: query.upper.startswith
            [INTERMEDIATE] Step 1: query.upper
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
            [INTERMEDIATE] Step 1 resolved to: database_manager.str.upper
            [INTERMEDIATE] Step 2: query.upper.startswith
      -> Resolved to: database_manager.str.upper.startswith
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: query.upper.startswith
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      -> Not module state
      [CALL] Found call: query.upper
    [CACHE] query.upper -> database_manager.str.upper (cached)
            [INTERMEDIATE] Tracking chain steps for: query.upper
            [INTERMEDIATE] Step 1: query.upper
      -> Resolved to: database_manager.str.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: query.upper
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      -> Not module state
      [NAME] Found name reference: query
        [CACHE] query -> database_manager.str (cached)
      -> Not module state
      [CALL] Found call: query.upper.startswith
    [CACHE] query.upper.startswith -> database_manager.str.upper.startswith (cached)
            [INTERMEDIATE] Tracking chain steps for: query.upper.startswith
            [INTERMEDIATE] Step 1: query.upper
    [CACHE] query.upper -> database_manager.str.upper (cached)
            [INTERMEDIATE] Step 1 resolved to: database_manager.str.upper
            [INTERMEDIATE] Step 2: query.upper.startswith
      -> Resolved to: database_manager.str.upper.startswith
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: query.upper.startswith
        [CACHE] query.upper.startswith -> database_manager.str.upper.startswith (cached)
      -> Not module state
      [CALL] Found call: query.upper
    [CACHE] query.upper -> database_manager.str.upper (cached)
            [INTERMEDIATE] Tracking chain steps for: query.upper
            [INTERMEDIATE] Step 1: query.upper
      -> Resolved to: database_manager.str.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: query.upper
        [CACHE] query.upper -> database_manager.str.upper (cached)
      -> Not module state
      [NAME] Found name reference: query
        [CACHE] query -> database_manager.str (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.execute
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.execute
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.commit
    [CONTEXT] Entered function: database_manager.DatabaseConnection.commit (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.debug
    [CACHE] logging.debug -> logging.debug (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.debug
            [INTERMEDIATE] Step 1: logging.debug
      -> Resolved to: logging.debug
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
        [CACHE] self.in_transaction -> database_manager.DatabaseConnection.in_transaction (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.warning
            [INTERMEDIATE] Step 1: logging.warning
      -> Resolved to: logging.warning
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
        [CACHE] self.connection_id -> database_manager.DatabaseConnection.connection_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.commit
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.commit
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.rollback
    [CONTEXT] Entered function: database_manager.DatabaseConnection.rollback (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.debug
    [CACHE] logging.debug -> logging.debug (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.debug
            [INTERMEDIATE] Step 1: logging.debug
      -> Resolved to: logging.debug
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
        [CACHE] self.in_transaction -> database_manager.DatabaseConnection.in_transaction (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.warning
    [CACHE] logging.warning -> logging.warning (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.warning
            [INTERMEDIATE] Step 1: logging.warning
      -> Resolved to: logging.warning
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
        [CACHE] self.connection_id -> database_manager.DatabaseConnection.connection_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.rollback
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.rollback
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.begin_transaction
    [CONTEXT] Entered function: database_manager.DatabaseConnection.begin_transaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'isolation_level': 'Optional[str]'}
        [ARG_TYPE] Processing type annotation for isolation_level: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: isolation_level -> typing.Optional
        [ARG_TYPE] RESOLVED isolation_level : typing.Optional
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
        [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Not module state
      [NAME] Found name reference: isolation_level
      [SYMBOL_LOOKUP] Found isolation_level in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found isolation_level in function scope: typing.Optional
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [NAME] Found name reference: isolation_level
        [CACHE] isolation_level -> typing.Optional (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
        [CACHE] self.in_transaction -> database_manager.DatabaseConnection.in_transaction (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.debug
    [CACHE] logging.debug -> logging.debug (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.debug
            [INTERMEDIATE] Step 1: logging.debug
      -> Resolved to: logging.debug
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
        [CACHE] self.isolation_level -> database_manager.DatabaseConnection.isolation_level (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.begin_transaction
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.begin_transaction
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.close
    [CONTEXT] Entered function: database_manager.DatabaseConnection.close (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.warning
    [CACHE] logging.warning -> logging.warning (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.warning
            [INTERMEDIATE] Step 1: logging.warning
      -> Resolved to: logging.warning
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: self.rollback
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.rollback
            [INTERMEDIATE] Step 1: self.rollback
      -> Resolved to: database_manager.DatabaseConnection.rollback
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.rollback
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
        [CACHE] self.is_open -> database_manager.DatabaseConnection.is_open (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.debug
    [CACHE] logging.debug -> logging.debug (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.debug
            [INTERMEDIATE] Step 1: logging.debug
      -> Resolved to: logging.debug
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection_id
        [CACHE] self.connection_id -> database_manager.DatabaseConnection.connection_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.close
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.close
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.is_connected
    [CONTEXT] Entered function: database_manager.DatabaseConnection.is_connected (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.is_connected
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.is_connected
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.DatabaseConnection.get_stats
    [CONTEXT] Entered function: database_manager.DatabaseConnection.get_stats (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.connection_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.is_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.in_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.query_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_query_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.DatabaseConnection (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.DatabaseConnection.get_stats
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.DatabaseConnection.get_stats
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: database_manager.DatabaseConnection
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: TransactionManager
    [CONTEXT] Entered class: database_manager.TransactionManager
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.__init__
    [CONTEXT] Entered function: database_manager.TransactionManager.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'connection': 'DatabaseConnection', 'isolation_level': 'str'}
        [ARG_TYPE] Processing type annotation for connection: DatabaseConnection
      [SYMBOL_LOOKUP] Variable DatabaseConnection not found in any scope
      [SYMBOL_UPDATE] Function: connection -> database_manager.DatabaseConnection
        [ARG_TYPE] RESOLVED connection : database_manager.DatabaseConnection
        [ARG_TYPE] Processing type annotation for isolation_level: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: isolation_level -> database_manager.str
        [ARG_TYPE] RESOLVED isolation_level : database_manager.str
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: connection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: isolation_level
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.begin_transaction
    [CONTEXT] Entered function: database_manager.TransactionManager.begin_transaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [CALL] Found call: self.connection.begin_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.connection.begin_transaction
            [INTERMEDIATE] Step 1: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: database_manager.TransactionManager.connection
            [INTERMEDIATE] Step 2: self.connection.begin_transaction
      -> Resolved to: database_manager.TransactionManager.connection.begin_transaction
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.connection.begin_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.transaction_started
        [CACHE] self.transaction_started -> database_manager.TransactionManager.transaction_started (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
        [CACHE] self.isolation_level -> database_manager.TransactionManager.isolation_level (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.error
            [INTERMEDIATE] Step 1: logging.error
      -> Resolved to: logging.error
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.begin_transaction
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.begin_transaction
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.commit_transaction
    [CONTEXT] Entered function: database_manager.TransactionManager.commit_transaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [CALL] Found call: self.connection.commit
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.connection.commit
            [INTERMEDIATE] Step 1: self.connection
    [CACHE] self.connection -> database_manager.TransactionManager.connection (cached)
            [INTERMEDIATE] Step 1 resolved to: database_manager.TransactionManager.connection
            [INTERMEDIATE] Step 2: self.connection.commit
      -> Resolved to: database_manager.TransactionManager.connection.commit
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.connection.commit
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: duration = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: duration
      [SYMBOL_LOOKUP] Variable duration not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
        [CACHE] self.start_time -> database_manager.TransactionManager.start_time (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: logging.info
    [CACHE] logging.info -> logging.info (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: duration
        [CACHE] duration -> database_manager.duration (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: logging.error
    [CACHE] logging.error -> logging.error (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.error
            [INTERMEDIATE] Step 1: logging.error
      -> Resolved to: logging.error
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.transaction_started
        [CACHE] self.transaction_started -> database_manager.TransactionManager.transaction_started (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
        [CACHE] self.start_time -> database_manager.TransactionManager.start_time (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.commit_transaction
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.commit_transaction
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.rollback_transaction
    [CONTEXT] Entered function: database_manager.TransactionManager.rollback_transaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [CALL] Found call: self.connection.rollback
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.connection.rollback
            [INTERMEDIATE] Step 1: self.connection
    [CACHE] self.connection -> database_manager.TransactionManager.connection (cached)
            [INTERMEDIATE] Step 1 resolved to: database_manager.TransactionManager.connection
            [INTERMEDIATE] Step 2: self.connection.rollback
      -> Resolved to: database_manager.TransactionManager.connection.rollback
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.connection.rollback
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: duration = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: duration
      [SYMBOL_LOOKUP] Variable duration not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
        [CACHE] self.start_time -> database_manager.TransactionManager.start_time (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: logging.warning
    [CACHE] logging.warning -> logging.warning (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.warning
            [INTERMEDIATE] Step 1: logging.warning
      -> Resolved to: logging.warning
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: duration
        [CACHE] duration -> database_manager.duration (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: logging.error
    [CACHE] logging.error -> logging.error (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.error
            [INTERMEDIATE] Step 1: logging.error
      -> Resolved to: logging.error
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.transaction_started
        [CACHE] self.transaction_started -> database_manager.TransactionManager.transaction_started (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
        [CACHE] self.start_time -> database_manager.TransactionManager.start_time (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.rollback_transaction
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.rollback_transaction
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.close_connection
    [CONTEXT] Entered function: database_manager.TransactionManager.close_connection (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: logging.warning
    [CACHE] logging.warning -> logging.warning (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.warning
            [INTERMEDIATE] Step 1: logging.warning
      -> Resolved to: logging.warning
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [CALL] Found call: self.rollback_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.rollback_transaction
            [INTERMEDIATE] Step 1: self.rollback_transaction
      -> Resolved to: database_manager.TransactionManager.rollback_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.rollback_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: self.connection.close
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.connection.close
            [INTERMEDIATE] Step 1: self.connection
    [CACHE] self.connection -> database_manager.TransactionManager.connection (cached)
            [INTERMEDIATE] Step 1 resolved to: database_manager.TransactionManager.connection
            [INTERMEDIATE] Step 2: self.connection.close
      -> Resolved to: database_manager.TransactionManager.connection.close
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.connection.close
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: logging.info
    [CACHE] logging.info -> logging.info (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.close_connection
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.close_connection
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.execute_in_transaction
    [CONTEXT] Entered function: database_manager.TransactionManager.execute_in_transaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'query': 'str', 'params': 'Optional[tuple]'}
        [ARG_TYPE] Processing type annotation for query: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: query -> database_manager.str
        [ARG_TYPE] RESOLVED query : database_manager.str
        [ARG_TYPE] Processing type annotation for params: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: params -> typing.Optional
        [ARG_TYPE] RESOLVED params : typing.Optional
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> database_manager.RuntimeError (cached)
      -> Resolved to: database_manager.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.connection.execute
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.TransactionManager.connection.execute
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: self.connection.execute
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.connection.execute
            [INTERMEDIATE] Step 1: self.connection
    [CACHE] self.connection -> database_manager.TransactionManager.connection (cached)
            [INTERMEDIATE] Step 1 resolved to: database_manager.TransactionManager.connection
            [INTERMEDIATE] Step 2: self.connection.execute
      -> Resolved to: database_manager.TransactionManager.connection.execute
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: query
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
        [FUNCTION_ARG] Checking argument: params
      [SYMBOL_LOOKUP] Found params in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found params in function scope: typing.Optional
      [ATTRIBUTE] Found attribute access: self.connection.execute
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: query
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found query in function scope: database_manager.str
      -> Not module state
      [NAME] Found name reference: params
      [SYMBOL_LOOKUP] Found params in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found params in function scope: typing.Optional
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> database_manager.result (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.execute_in_transaction
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.execute_in_transaction
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.transaction_context
    [DECORATOR] @contextmanager
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function database_manager.TransactionManager.transaction_context
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in database_manager.TransactionManager.transaction_context
    [CONTEXT] Entered function: database_manager.TransactionManager.transaction_context (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: self.begin_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.begin_transaction
            [INTERMEDIATE] Step 1: self.begin_transaction
      -> Resolved to: database_manager.TransactionManager.begin_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.begin_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: self.commit_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.commit_transaction
            [INTERMEDIATE] Step 1: self.commit_transaction
      -> Resolved to: database_manager.TransactionManager.commit_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.commit_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: self.rollback_transaction
    [CACHE] self.rollback_transaction -> database_manager.TransactionManager.rollback_transaction (cached)
            [INTERMEDIATE] Tracking chain steps for: self.rollback_transaction
            [INTERMEDIATE] Step 1: self.rollback_transaction
      -> Resolved to: database_manager.TransactionManager.rollback_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.rollback_transaction
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.transaction_context
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.transaction_context
        Calls: 3
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.TransactionManager.get_transaction_info
    [CONTEXT] Entered function: database_manager.TransactionManager.get_transaction_info (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.transaction_started
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.isolation_level
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.start_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.operations_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: self.connection.get_stats
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.connection.get_stats
            [INTERMEDIATE] Step 1: self.connection
    [CACHE] self.connection -> database_manager.TransactionManager.connection (cached)
            [INTERMEDIATE] Step 1 resolved to: database_manager.TransactionManager.connection
            [INTERMEDIATE] Step 2: self.connection.get_stats
      -> Resolved to: database_manager.TransactionManager.connection.get_stats
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.connection.get_stats
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.connection
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.TransactionManager.get_transaction_info
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.TransactionManager.get_transaction_info
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: database_manager.TransactionManager
    [SYMBOL_TABLE] Exited class scope
      [ANNOTATED_ASSIGNMENT] _connection_pool : List[DatabaseConnection]
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: _connection_pool -> typing.List
        -> Updated symbol table: _connection_pool : typing.List
      [ASSIGNMENT] Processing: _pool_lock = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: threading.Lock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      [TYPE_INFERENCE] Call resolved to: threading.Lock
      [TYPE_INFERENCE] RESOLVED Inferred type: threading.Lock (class instantiation)
      [SYMBOL_UPDATE] Function: _pool_lock -> threading.Lock
        [ASSIGNMENT] RESOLVED Updated symbol table: _pool_lock = threading.Lock
      [ASSIGNMENT] Processing: _connection_counter = ...
        [ASSIGNMENT] Non-call assignment
  [FUNCTION] Analyzing function: get_db_connection
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.get_db_connection
    [CONTEXT] Entered function: database_manager.get_db_connection (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: _pool_lock
      [SYMBOL_LOOKUP] Variable _pool_lock not found in any scope
      -> Resolved to state: database_manager._pool_lock
      [SYMBOL_LOOKUP] Variable _pool_lock not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: _connection_counter
      [SYMBOL_LOOKUP] Variable _connection_counter not found in any scope
      -> Resolved to state: database_manager._connection_counter
      [SYMBOL_LOOKUP] Variable _connection_counter not found in any scope
      -> ADDED to accessed_state
      [ASSIGNMENT] Processing: connection_id = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: connection_id
      [SYMBOL_LOOKUP] Variable connection_id not found in any scope
      -> Not module state
      [NAME] Found name reference: _connection_counter
        [CACHE] _connection_counter -> database_manager._connection_counter (cached)
      -> Resolved to state: database_manager._connection_counter
      [SYMBOL_LOOKUP] Variable _connection_counter not found in any scope
      -> ADDED to accessed_state
      [ASSIGNMENT] Processing: connection = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: DatabaseConnection
      [SYMBOL_LOOKUP] Variable DatabaseConnection not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.DatabaseConnection
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.DatabaseConnection (class instantiation)
      [SYMBOL_UPDATE] Function: connection -> database_manager.DatabaseConnection
        [ASSIGNMENT] RESOLVED Updated symbol table: connection = database_manager.DatabaseConnection
      [NAME] Found name reference: connection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      -> Not module state
      [CALL] Found call: DatabaseConnection
      [SYMBOL_LOOKUP] Variable DatabaseConnection not found in any scope
      -> Resolved to: database_manager.DatabaseConnection
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: connection_id
      [SYMBOL_LOOKUP] Variable connection_id not found in any scope
      [NAME] Found name reference: DatabaseConnection
      [SYMBOL_LOOKUP] Variable DatabaseConnection not found in any scope
      -> Not module state
      [NAME] Found name reference: connection_id
        [CACHE] connection_id -> database_manager.connection_id (cached)
      -> Not module state
      [CALL] Found call: _connection_pool.append
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _connection_pool.append
            [INTERMEDIATE] Step 1: _connection_pool.append
      -> Resolved to: database_manager._connection_pool.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: connection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      [ATTRIBUTE] Found attribute access: _connection_pool.append
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> Not module state
      [NAME] Found name reference: _connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> Resolved to state: database_manager._connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: connection
        [CACHE] connection -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [CALL] Found call: logging.debug
    [CACHE] logging.debug -> logging.debug (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.debug
            [INTERMEDIATE] Step 1: logging.debug
      -> Resolved to: logging.debug
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.debug
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: connection_id
        [CACHE] connection_id -> database_manager.connection_id (cached)
      -> Not module state
      [NAME] Found name reference: connection
        [CACHE] connection -> database_manager.DatabaseConnection (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.get_db_connection
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.get_db_connection
        Calls: 0
        Instantiations: 1
        State Access: 3
  [FUNCTION] Analyzing function: close_all_connections
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.close_all_connections
    [CONTEXT] Entered function: database_manager.close_all_connections (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: _pool_lock
      [SYMBOL_LOOKUP] Variable _pool_lock not found in any scope
      -> Resolved to state: database_manager._pool_lock
      [SYMBOL_LOOKUP] Variable _pool_lock not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: connection
      [SYMBOL_LOOKUP] Variable connection not found in any scope
      -> Not module state
      [NAME] Found name reference: _connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> Resolved to state: database_manager._connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: connection.is_connected
      [SYMBOL_LOOKUP] Variable connection not found in any scope
            [INTERMEDIATE] Tracking chain steps for: connection.is_connected
            [INTERMEDIATE] Step 1: connection.is_connected
      -> Resolved to: database_manager.connection.is_connected
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: connection.is_connected
      [SYMBOL_LOOKUP] Variable connection not found in any scope
      -> Not module state
      [NAME] Found name reference: connection
        [CACHE] connection -> database_manager.connection (cached)
      -> Not module state
      [CALL] Found call: connection.close
      [SYMBOL_LOOKUP] Variable connection not found in any scope
            [INTERMEDIATE] Tracking chain steps for: connection.close
            [INTERMEDIATE] Step 1: connection.close
      -> Resolved to: database_manager.connection.close
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: connection.close
      [SYMBOL_LOOKUP] Variable connection not found in any scope
      -> Not module state
      [NAME] Found name reference: connection
        [CACHE] connection -> database_manager.connection (cached)
      -> Not module state
      [CALL] Found call: _connection_pool.clear
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _connection_pool.clear
            [INTERMEDIATE] Step 1: _connection_pool.clear
      -> Resolved to: database_manager._connection_pool.clear
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: _connection_pool.clear
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> Not module state
      [NAME] Found name reference: _connection_pool
        [CACHE] _connection_pool -> database_manager._connection_pool (cached)
      -> Resolved to state: database_manager._connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: logging.info
    [CACHE] logging.info -> logging.info (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
    [CONTEXT] Exited function: database_manager.close_all_connections
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.close_all_connections
        Calls: 0
        Instantiations: 0
        State Access: 2
  [FUNCTION] Analyzing function: get_pool_stats
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.get_pool_stats
    [CONTEXT] Entered function: database_manager.get_pool_stats (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: _pool_lock
      [SYMBOL_LOOKUP] Variable _pool_lock not found in any scope
      -> Resolved to state: database_manager._pool_lock
      [SYMBOL_LOOKUP] Variable _pool_lock not found in any scope
      -> ADDED to accessed_state
      [ASSIGNMENT] Processing: total_connections = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.len
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for total_connections
      [NAME] Found name reference: total_connections
      [SYMBOL_LOOKUP] Variable total_connections not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [NAME] Found name reference: _connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> Resolved to state: database_manager._connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> ADDED to accessed_state
      [ASSIGNMENT] Processing: active_connections = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.sum
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for active_connections
      [NAME] Found name reference: active_connections
      [SYMBOL_LOOKUP] Variable active_connections not found in any scope
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      -> Not module state
      [NAME] Found name reference: conn
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> Resolved to state: database_manager.conn
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: _connection_pool
        [CACHE] _connection_pool -> database_manager._connection_pool (cached)
      -> Resolved to state: database_manager._connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: conn.is_connected
      [SYMBOL_LOOKUP] Variable conn not found in any scope
            [INTERMEDIATE] Tracking chain steps for: conn.is_connected
            [INTERMEDIATE] Step 1: conn.is_connected
      -> Resolved to: database_manager.conn.is_connected
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: conn.is_connected
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> Not module state
      [NAME] Found name reference: conn
        [CACHE] conn -> database_manager.conn (cached)
      -> Resolved to state: database_manager.conn
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: total_connections
        [CACHE] total_connections -> database_manager.total_connections (cached)
      -> Not module state
      [NAME] Found name reference: active_connections
        [CACHE] active_connections -> database_manager.active_connections (cached)
      -> Not module state
      [CALL] Found call: conn.get_stats
      [SYMBOL_LOOKUP] Variable conn not found in any scope
            [INTERMEDIATE] Tracking chain steps for: conn.get_stats
            [INTERMEDIATE] Step 1: conn.get_stats
      -> Resolved to: database_manager.conn.get_stats
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: conn.get_stats
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> Not module state
      [NAME] Found name reference: conn
        [CACHE] conn -> database_manager.conn (cached)
      -> Resolved to state: database_manager.conn
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: conn
        [CACHE] conn -> database_manager.conn (cached)
      -> Resolved to state: database_manager.conn
      [SYMBOL_LOOKUP] Variable conn not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: _connection_pool
        [CACHE] _connection_pool -> database_manager._connection_pool (cached)
      -> Resolved to state: database_manager._connection_pool
      [SYMBOL_LOOKUP] Variable _connection_pool not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: database_manager.get_pool_stats
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.get_pool_stats
        Calls: 0
        Instantiations: 0
        State Access: 3
  [FUNCTION] Analyzing function: create_transaction_manager
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.create_transaction_manager
    [CONTEXT] Entered function: database_manager.create_transaction_manager (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'isolation_level': 'str'}
        [ARG_TYPE] Processing type annotation for isolation_level: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: isolation_level -> database_manager.str
        [ARG_TYPE] RESOLVED isolation_level : database_manager.str
      [ASSIGNMENT] Processing: connection = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.get_db_connection
        [RETURN_TYPE_RESOLUTION] Resolving return type: DatabaseConnection
        [RETURN_TYPE_RESOLUTION] Found in current module: database_manager.DatabaseConnection
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.DatabaseConnection (from return type)
      [SYMBOL_UPDATE] Function: connection -> database_manager.DatabaseConnection
        [ASSIGNMENT] RESOLVED Updated symbol table: connection = database_manager.DatabaseConnection
      [NAME] Found name reference: connection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      -> Not module state
      [CALL] Found call: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      -> Resolved to: database_manager.get_db_connection
      -> ADDED to calls
      [NAME] Found name reference: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      -> Not module state
      [CALL] Found call: TransactionManager
      [SYMBOL_LOOKUP] Variable TransactionManager not found in any scope
      -> Resolved to: database_manager.TransactionManager
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: connection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found connection in function scope: database_manager.DatabaseConnection
        [FUNCTION_ARG] Checking argument: isolation_level
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [NAME] Found name reference: TransactionManager
      [SYMBOL_LOOKUP] Variable TransactionManager not found in any scope
      -> Not module state
      [NAME] Found name reference: connection
        [CACHE] connection -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [NAME] Found name reference: isolation_level
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      -> Not module state
    [CONTEXT] Exited function: database_manager.create_transaction_manager
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.create_transaction_manager
        Calls: 1
        Instantiations: 1
        State Access: 0
  [FUNCTION] Analyzing function: database_transaction
    [FUNCTION_ANALYSIS] Starting analysis of: database_manager.database_transaction
    [DECORATOR] @contextmanager
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function database_manager.database_transaction
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in database_manager.database_transaction
    [CONTEXT] Entered function: database_manager.database_transaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'isolation_level': 'str'}
        [ARG_TYPE] Processing type annotation for isolation_level: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: isolation_level -> database_manager.str
        [ARG_TYPE] RESOLVED isolation_level : database_manager.str
      [ASSIGNMENT] Processing: manager = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: create_transaction_manager
      [SYMBOL_LOOKUP] Variable create_transaction_manager not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.create_transaction_manager
        [RETURN_TYPE_RESOLUTION] Resolving return type: TransactionManager
        [RETURN_TYPE_RESOLUTION] Found in current module: database_manager.TransactionManager
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.TransactionManager (from return type)
      [SYMBOL_UPDATE] Function: manager -> database_manager.TransactionManager
        [ASSIGNMENT] RESOLVED Updated symbol table: manager = database_manager.TransactionManager
      [NAME] Found name reference: manager
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      -> Not module state
      [CALL] Found call: create_transaction_manager
      [SYMBOL_LOOKUP] Variable create_transaction_manager not found in any scope
      -> Resolved to: database_manager.create_transaction_manager
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: isolation_level
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [NAME] Found name reference: create_transaction_manager
      [SYMBOL_LOOKUP] Variable create_transaction_manager not found in any scope
      -> Not module state
      [NAME] Found name reference: isolation_level
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      [SYMBOL_LOOKUP] Found isolation_level in function scope: database_manager.str
      -> Not module state
      [CALL] Found call: manager.transaction_context
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
            [INTERMEDIATE] Tracking chain steps for: manager.transaction_context
            [INTERMEDIATE] Step 1: manager.transaction_context
      -> Resolved to: database_manager.TransactionManager.transaction_context
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: manager.transaction_context
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      -> Not module state
      [NAME] Found name reference: manager
        [CACHE] manager -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: manager
        [CACHE] manager -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: manager.close_connection
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
            [INTERMEDIATE] Tracking chain steps for: manager.close_connection
            [INTERMEDIATE] Step 1: manager.close_connection
      -> Resolved to: database_manager.TransactionManager.close_connection
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: manager.close_connection
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found manager in function scope: database_manager.TransactionManager
      -> Not module state
      [NAME] Found name reference: manager
        [CACHE] manager -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: database_manager.database_transaction
    [FUNCTION_ANALYSIS] Completed analysis of: database_manager.database_transaction
        Calls: 3
        Instantiations: 0
        State Access: 0
      [ASSIGNMENT] Processing: conn = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.get_db_connection
        [RETURN_TYPE_RESOLUTION] Resolving return type: DatabaseConnection
        [RETURN_TYPE_RESOLUTION] Found in current module: database_manager.DatabaseConnection
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.DatabaseConnection (from return type)
      [SYMBOL_UPDATE] Function: conn -> database_manager.DatabaseConnection
        [ASSIGNMENT] RESOLVED Updated symbol table: conn = database_manager.DatabaseConnection
      [ASSIGNMENT] Processing: tx_manager = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: TransactionManager
      [SYMBOL_LOOKUP] Variable TransactionManager not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.TransactionManager
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.TransactionManager (class instantiation)
      [SYMBOL_UPDATE] Function: tx_manager -> database_manager.TransactionManager
        [ASSIGNMENT] RESOLVED Updated symbol table: tx_manager = database_manager.TransactionManager
      [ASSIGNMENT] Processing: stats = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_pool_stats
      [SYMBOL_LOOKUP] Variable get_pool_stats not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.get_pool_stats
        [RETURN_TYPE_RESOLUTION] Resolving return type: Dict[str, Any]
        [RETURN_TYPE_RESOLUTION] Class 'Dict[str, Any]' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Dict[str, Any]
      [TYPE_INFERENCE] Could not resolve return type 'Dict[str, Any]' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Dict[str, Any] (from return type - unresolved)
      [SYMBOL_UPDATE] Function: stats -> Dict[str, Any]
        [ASSIGNMENT] RESOLVED Updated symbol table: stats = Dict[str, Any]
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing decorators.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Callable -> typing.Callable
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] Type -> typing.Type
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] wraps -> functools.wraps
    [FROM_IMPORT] partial -> functools.partial
    [IMPORT] time -> time
    [IMPORT] logging -> logging
    [FROM_IMPORT] Lock -> threading.Lock
    [FROM_IMPORT] defaultdict -> collections.defaultdict
    [IMPORT] inspect -> inspect
    [FROM_IMPORT] get_db_connection -> database_manager.get_db_connection
    [FROM_IMPORT] TransactionManager -> database_manager.TransactionManager
    [FROM_IMPORT] AdminManager -> admin_manager.AdminManager
    [MODULE_STATE] PERFORMANCE_METRICS : Dict[str, List[float]] = defaultdict(list)
    [MODULE_STATE] AUTH_CACHE : Dict[str, bool] = {}
    [MODULE_STATE] RATE_LIMIT_CACHE : Dict[str, Dict[str, Any]] = defaultdict(dict)
    [MODULE_STATE] TRACE_LOCK = Lock()
  [CLASS] Analyzing class: DecoratorRegistry
    [CONTEXT] Entered class: decorators.DecoratorRegistry
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.DecoratorRegistry.__init__
    [CONTEXT] Entered function: decorators.DecoratorRegistry.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.registered_decorators
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.decorator_chains
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.DecoratorRegistry (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> decorators.str (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> decorators.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_traces
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.DecoratorRegistry (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> decorators.str (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.DecoratorRegistry.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.DecoratorRegistry.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.DecoratorRegistry.register_decorator
    [CONTEXT] Entered function: decorators.DecoratorRegistry.register_decorator (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'name': 'str', 'decorator': 'Callable'}
        [ARG_TYPE] Processing type annotation for name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: name -> decorators.str
        [ARG_TYPE] RESOLVED name : decorators.str
        [ARG_TYPE] Processing type annotation for decorator: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: decorator -> typing.Callable
        [ARG_TYPE] RESOLVED decorator : typing.Callable
      [ATTRIBUTE] Found attribute access: self.registered_decorators
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: name
      [SYMBOL_LOOKUP] Found name in function scope: decorators.str
      [SYMBOL_LOOKUP] Found name in function scope: decorators.str
      -> Not module state
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Found decorator in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found decorator in function scope: typing.Callable
      -> Not module state
    [CONTEXT] Exited function: decorators.DecoratorRegistry.register_decorator
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.DecoratorRegistry.register_decorator
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.DecoratorRegistry.get_decorator_chain
    [CONTEXT] Entered function: decorators.DecoratorRegistry.get_decorator_chain (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func_name': 'str'}
        [ARG_TYPE] Processing type annotation for func_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: func_name -> decorators.str
        [ARG_TYPE] RESOLVED func_name : decorators.str
      [CALL] Found call: self.decorator_chains.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.decorator_chains.get
            [INTERMEDIATE] Step 1: self.decorator_chains
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: decorators.DecoratorRegistry.decorator_chains
            [INTERMEDIATE] Step 2: self.decorator_chains.get
      -> Resolved to: decorators.DecoratorRegistry.decorator_chains.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func_name
      [SYMBOL_LOOKUP] Found func_name in function scope: decorators.str
      [SYMBOL_LOOKUP] Found func_name in function scope: decorators.str
      [ATTRIBUTE] Found attribute access: self.decorator_chains.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.decorator_chains
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: func_name
      [SYMBOL_LOOKUP] Found func_name in function scope: decorators.str
      [SYMBOL_LOOKUP] Found func_name in function scope: decorators.str
      -> Not module state
    [CONTEXT] Exited function: decorators.DecoratorRegistry.get_decorator_chain
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.DecoratorRegistry.get_decorator_chain
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: decorators.DecoratorRegistry
    [SYMBOL_TABLE] Exited class scope
      [ASSIGNMENT] Processing: _decorator_registry = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: DecoratorRegistry
      [SYMBOL_LOOKUP] Variable DecoratorRegistry not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.DecoratorRegistry
      [TYPE_INFERENCE] RESOLVED Inferred type: decorators.DecoratorRegistry (class instantiation)
      [SYMBOL_UPDATE] Function: _decorator_registry -> decorators.DecoratorRegistry
        [ASSIGNMENT] RESOLVED Updated symbol table: _decorator_registry = decorators.DecoratorRegistry
  [FUNCTION] Analyzing function: trace
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.trace
    [CONTEXT] Entered function: decorators.trace (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for func: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: func -> typing.Optional
        [ARG_TYPE] RESOLVED func : typing.Optional
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for f: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: f -> typing.Callable
        [ARG_TYPE] RESOLVED f : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(f)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [ASSIGNMENT] Processing: func_name = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: func_name
      [SYMBOL_LOOKUP] Variable func_name not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: f.__module__
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [NAME] Found name reference: f
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: f.__qualname__
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [NAME] Found name reference: f
        [CACHE] f -> decorators.f (cached)
      -> Not module state
      [NAME] Found name reference: TRACE_LOCK
      [SYMBOL_LOOKUP] Variable TRACE_LOCK not found in any scope
      -> Resolved to state: decorators.TRACE_LOCK
      [SYMBOL_LOOKUP] Variable TRACE_LOCK not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _decorator_registry.active_traces.append
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _decorator_registry.active_traces.append
            [INTERMEDIATE] Step 1: _decorator_registry.active_traces
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
            [INTERMEDIATE] Step 1 resolved to: decorators._decorator_registry.active_traces
            [INTERMEDIATE] Step 2: _decorator_registry.active_traces.append
      -> Resolved to: decorators._decorator_registry.active_traces.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func_name
      [SYMBOL_LOOKUP] Variable func_name not found in any scope
      [ATTRIBUTE] Found attribute access: _decorator_registry.active_traces.append
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: _decorator_registry.active_traces
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Not module state
      [NAME] Found name reference: _decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [ASSIGNMENT] Processing: start_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for start_time
      [NAME] Found name reference: start_time
      [SYMBOL_LOOKUP] Variable start_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: include_args
      [SYMBOL_LOOKUP] Variable include_args not found in any scope
      -> Not module state
      [CALL] Found call: logging.log
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.log
            [INTERMEDIATE] Step 1: logging.log
      -> Resolved to: logging.log
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.log
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [CALL] Found call: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Resolved to: decorators.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
        [FUNCTION_ARG] Checking argument: level
      [SYMBOL_LOOKUP] Variable level not found in any scope
      [NAME] Found name reference: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: level
      [SYMBOL_LOOKUP] Variable level not found in any scope
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [CALL] Found call: logging.log
    [CACHE] logging.log -> logging.log (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.log
            [INTERMEDIATE] Step 1: logging.log
      -> Resolved to: logging.log
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.log
        [CACHE] logging.log -> logging.log (cached)
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [CALL] Found call: getattr
    [CACHE] getattr -> decorators.getattr (cached)
      -> Resolved to: decorators.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
        [FUNCTION_ARG] Checking argument: level
      [SYMBOL_LOOKUP] Variable level not found in any scope
      [NAME] Found name reference: getattr
        [CACHE] getattr -> decorators.getattr (cached)
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: level
        [CACHE] level -> decorators.level (cached)
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: f
      [SYMBOL_LOOKUP] Variable f not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.f
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: f
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Resolved to: decorators.f
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: f
        [CACHE] f -> decorators.f (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [NAME] Found name reference: include_result
      [SYMBOL_LOOKUP] Variable include_result not found in any scope
      -> Not module state
      [CALL] Found call: logging.log
    [CACHE] logging.log -> logging.log (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.log
            [INTERMEDIATE] Step 1: logging.log
      -> Resolved to: logging.log
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.log
        [CACHE] logging.log -> logging.log (cached)
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [CALL] Found call: getattr
    [CACHE] getattr -> decorators.getattr (cached)
      -> Resolved to: decorators.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
        [FUNCTION_ARG] Checking argument: level
      [SYMBOL_LOOKUP] Variable level not found in any scope
      [NAME] Found name reference: getattr
        [CACHE] getattr -> decorators.getattr (cached)
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: level
        [CACHE] level -> decorators.level (cached)
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [CALL] Found call: logging.log
    [CACHE] logging.log -> logging.log (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.log
            [INTERMEDIATE] Step 1: logging.log
      -> Resolved to: logging.log
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.log
        [CACHE] logging.log -> logging.log (cached)
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [CALL] Found call: getattr
    [CACHE] getattr -> decorators.getattr (cached)
      -> Resolved to: decorators.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
        [FUNCTION_ARG] Checking argument: level
      [SYMBOL_LOOKUP] Variable level not found in any scope
      [NAME] Found name reference: getattr
        [CACHE] getattr -> decorators.getattr (cached)
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: level
        [CACHE] level -> decorators.level (cached)
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.error
            [INTERMEDIATE] Step 1: logging.error
      -> Resolved to: logging.error
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: execution_time = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> decorators.start_time (cached)
      -> Not module state
      [CALL] Found call: PERFORMANCE_METRICS.append
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
            [INTERMEDIATE] Tracking chain steps for: PERFORMANCE_METRICS.append
            [INTERMEDIATE] Step 1: PERFORMANCE_METRICS.append
      -> Resolved to: decorators.PERFORMANCE_METRICS.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
      [ATTRIBUTE] Found attribute access: PERFORMANCE_METRICS.append
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
      -> Not module state
      [NAME] Found name reference: PERFORMANCE_METRICS
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
      -> Resolved to state: decorators.PERFORMANCE_METRICS
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
        [CACHE] execution_time -> decorators.execution_time (cached)
      -> Not module state
      [NAME] Found name reference: TRACE_LOCK
        [CACHE] TRACE_LOCK -> decorators.TRACE_LOCK (cached)
      -> Resolved to state: decorators.TRACE_LOCK
      [SYMBOL_LOOKUP] Variable TRACE_LOCK not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: _decorator_registry.active_traces
        [CACHE] _decorator_registry.active_traces -> decorators._decorator_registry.active_traces (cached)
      -> Not module state
      [NAME] Found name reference: _decorator_registry
        [CACHE] _decorator_registry -> decorators._decorator_registry (cached)
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _decorator_registry.active_traces.remove
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _decorator_registry.active_traces.remove
            [INTERMEDIATE] Step 1: _decorator_registry.active_traces
    [CACHE] _decorator_registry.active_traces -> decorators._decorator_registry.active_traces (cached)
            [INTERMEDIATE] Step 1 resolved to: decorators._decorator_registry.active_traces
            [INTERMEDIATE] Step 2: _decorator_registry.active_traces.remove
      -> Resolved to: decorators._decorator_registry.active_traces.remove
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func_name
      [SYMBOL_LOOKUP] Variable func_name not found in any scope
      [ATTRIBUTE] Found attribute access: _decorator_registry.active_traces.remove
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: _decorator_registry.active_traces
        [CACHE] _decorator_registry.active_traces -> decorators._decorator_registry.active_traces (cached)
      -> Not module state
      [NAME] Found name reference: _decorator_registry
        [CACHE] _decorator_registry -> decorators._decorator_registry (cached)
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 0
        Instantiations: 0
        State Access: 3
      [ASSIGNMENT] Processing: wrapper_name = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: wrapper_name
      [SYMBOL_LOOKUP] Variable wrapper_name not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: f.__name__
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [NAME] Found name reference: f
        [CACHE] f -> decorators.f (cached)
      -> Not module state
      [NAME] Found name reference: wrapper_name
        [CACHE] wrapper_name -> decorators.wrapper_name (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: _decorator_registry.decorator_chains
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Not module state
      [NAME] Found name reference: _decorator_registry
        [CACHE] _decorator_registry -> decorators._decorator_registry (cached)
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [ATTRIBUTE] Found attribute access: _decorator_registry.decorator_chains
        [CACHE] _decorator_registry.decorator_chains -> decorators._decorator_registry.decorator_chains (cached)
      -> Not module state
      [NAME] Found name reference: _decorator_registry
        [CACHE] _decorator_registry -> decorators._decorator_registry (cached)
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: wrapper_name
        [CACHE] wrapper_name -> decorators.wrapper_name (cached)
      -> Not module state
      [CALL] Found call: _decorator_registry.decorator_chains.append
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _decorator_registry.decorator_chains.append
            [INTERMEDIATE] Step 1: _decorator_registry.decorator_chains
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
            [INTERMEDIATE] Step 1 resolved to: decorators._decorator_registry.decorator_chains
            [INTERMEDIATE] Step 2: _decorator_registry.decorator_chains.append
      -> Resolved to: decorators._decorator_registry.decorator_chains.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: _decorator_registry.decorator_chains.append
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: _decorator_registry.decorator_chains
        [CACHE] _decorator_registry.decorator_chains -> decorators._decorator_registry.decorator_chains (cached)
      -> Not module state
      [NAME] Found name reference: _decorator_registry
        [CACHE] _decorator_registry -> decorators._decorator_registry (cached)
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: wrapper_name
        [CACHE] wrapper_name -> decorators.wrapper_name (cached)
      -> Not module state
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
      [CALL] Found call: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Resolved to: decorators.decorator
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      [NAME] Found name reference: decorator
        [CACHE] decorator -> decorators.decorator (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.trace
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.trace
        Calls: 0
        Instantiations: 0
        State Access: 1
  [FUNCTION] Analyzing function: monitor_performance
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.monitor_performance
    [CONTEXT] Entered function: decorators.monitor_performance (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for func: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: func -> typing.Optional
        [ARG_TYPE] RESOLVED func : typing.Optional
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for f: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: f -> typing.Callable
        [ARG_TYPE] RESOLVED f : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(f)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [ASSIGNMENT] Processing: start_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for start_time
      [NAME] Found name reference: start_time
      [SYMBOL_LOOKUP] Variable start_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: f
      [SYMBOL_LOOKUP] Variable f not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.f
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: f
    [CACHE] f -> decorators.f (cached)
      -> Resolved to: decorators.f
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: f
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [ASSIGNMENT] Processing: execution_time = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> decorators.start_time (cached)
      -> Not module state
      [ASSIGNMENT] Processing: func_name = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: func_name
      [SYMBOL_LOOKUP] Variable func_name not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: f.__module__
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [NAME] Found name reference: f
        [CACHE] f -> decorators.f (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: f.__qualname__
      [SYMBOL_LOOKUP] Variable f not found in any scope
      -> Not module state
      [NAME] Found name reference: f
        [CACHE] f -> decorators.f (cached)
      -> Not module state
      [CALL] Found call: PERFORMANCE_METRICS.append
    [CACHE] PERFORMANCE_METRICS.append -> decorators.PERFORMANCE_METRICS.append (cached)
            [INTERMEDIATE] Tracking chain steps for: PERFORMANCE_METRICS.append
            [INTERMEDIATE] Step 1: PERFORMANCE_METRICS.append
      -> Resolved to: decorators.PERFORMANCE_METRICS.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
      [ATTRIBUTE] Found attribute access: PERFORMANCE_METRICS.append
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
      -> Not module state
      [NAME] Found name reference: PERFORMANCE_METRICS
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
      -> Resolved to state: decorators.PERFORMANCE_METRICS
      [SYMBOL_LOOKUP] Variable PERFORMANCE_METRICS not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
        [CACHE] execution_time -> decorators.execution_time (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
        [CACHE] execution_time -> decorators.execution_time (cached)
      -> Not module state
      [NAME] Found name reference: threshold_ms
      [SYMBOL_LOOKUP] Variable threshold_ms not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: warning_msg = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: warning_msg
      [SYMBOL_LOOKUP] Variable warning_msg not found in any scope
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
        [CACHE] execution_time -> decorators.execution_time (cached)
      -> Not module state
      [CALL] Found call: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.warning
            [INTERMEDIATE] Step 1: logging.warning
      -> Resolved to: logging.warning
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: warning_msg
      [SYMBOL_LOOKUP] Variable warning_msg not found in any scope
      [ATTRIBUTE] Found attribute access: logging.warning
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: warning_msg
        [CACHE] warning_msg -> decorators.warning_msg (cached)
      -> Not module state
      [NAME] Found name reference: alert_callback
      [SYMBOL_LOOKUP] Variable alert_callback not found in any scope
      -> Not module state
      [CALL] Found call: alert_callback
      [SYMBOL_LOOKUP] Variable alert_callback not found in any scope
      -> Resolved to: decorators.alert_callback
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func_name
      [SYMBOL_LOOKUP] Variable func_name not found in any scope
        [FUNCTION_ARG] Checking argument: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
        [FUNCTION_ARG] Checking argument: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
        [FUNCTION_ARG] Checking argument: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      [NAME] Found name reference: alert_callback
        [CACHE] alert_callback -> decorators.alert_callback (cached)
      -> Not module state
      [NAME] Found name reference: func_name
        [CACHE] func_name -> decorators.func_name (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
        [CACHE] execution_time -> decorators.execution_time (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 0
        Instantiations: 0
        State Access: 1
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
      [CALL] Found call: decorator
    [CACHE] decorator -> decorators.decorator (cached)
      -> Resolved to: decorators.decorator
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      [NAME] Found name reference: decorator
        [CACHE] decorator -> decorators.decorator (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.monitor_performance
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.monitor_performance
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: validate_auth
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.validate_auth
    [CONTEXT] Entered function: decorators.validate_auth (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'required_role': 'Optional[str]', 'check_session': 'bool'}
        [ARG_TYPE] Processing type annotation for required_role: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: required_role -> typing.Optional
        [ARG_TYPE] RESOLVED required_role : typing.Optional
        [ARG_TYPE] Processing type annotation for check_session: bool
      [SYMBOL_LOOKUP] Variable bool not found in any scope
      [SYMBOL_UPDATE] Function: check_session -> decorators.bool
        [ARG_TYPE] RESOLVED check_session : decorators.bool
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'required_role': 'Optional[str]', 'check_session': 'bool'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(func)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
    [FROM_IMPORT] get_current_session -> session_manager.get_current_session
    [FROM_IMPORT] get_current_user -> session_manager.get_current_user
      [NAME] Found name reference: check_session
      [SYMBOL_LOOKUP] Variable check_session not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_current_session
      [SYMBOL_LOOKUP] Variable get_current_session not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.get_current_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in other module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session = session_manager.UserSession
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: get_current_session
      [SYMBOL_LOOKUP] Variable get_current_session not found in any scope
      -> Resolved to: session_manager.get_current_session
      -> ADDED to calls
      [NAME] Found name reference: get_current_session
      [SYMBOL_LOOKUP] Variable get_current_session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [CALL] Found call: session.is_valid
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
            [INTERMEDIATE] Tracking chain steps for: session.is_valid
            [INTERMEDIATE] Step 1: session.is_valid
      -> Resolved to: session_manager.UserSession.is_valid
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: session.is_valid
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [CALL] Found call: PermissionError
      [SYMBOL_LOOKUP] Variable PermissionError not found in any scope
      -> Resolved to: decorators.PermissionError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: PermissionError
      [SYMBOL_LOOKUP] Variable PermissionError not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: user = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_current_user
      [SYMBOL_LOOKUP] Variable get_current_user not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.get_current_user
        [RETURN_TYPE_RESOLUTION] Resolving return type: Any
        [RETURN_TYPE_RESOLUTION] Class 'Any' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Any
      [TYPE_INFERENCE] Could not resolve return type 'Any' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Any (from return type - unresolved)
      [SYMBOL_UPDATE] Function: user -> Any
        [ASSIGNMENT] RESOLVED Updated symbol table: user = Any
      [NAME] Found name reference: user
      [SYMBOL_LOOKUP] Found user in function scope: Any
      [SYMBOL_LOOKUP] Found user in function scope: Any
      -> Not module state
      [CALL] Found call: get_current_user
      [SYMBOL_LOOKUP] Variable get_current_user not found in any scope
      -> Resolved to: session_manager.get_current_user
      -> ADDED to calls
      [NAME] Found name reference: get_current_user
      [SYMBOL_LOOKUP] Variable get_current_user not found in any scope
      -> Not module state
      [NAME] Found name reference: user
        [CACHE] user -> Any (cached)
      -> Not module state
      [CALL] Found call: PermissionError
    [CACHE] PermissionError -> decorators.PermissionError (cached)
      -> Resolved to: decorators.PermissionError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: PermissionError
        [CACHE] PermissionError -> decorators.PermissionError (cached)
      -> Not module state
      [NAME] Found name reference: required_role
      [SYMBOL_LOOKUP] Variable required_role not found in any scope
      -> Not module state
      [CALL] Found call: user.has_role
      [SYMBOL_LOOKUP] Found user in function scope: Any
      [SYMBOL_LOOKUP] Found user in function scope: Any
            [INTERMEDIATE] Tracking chain steps for: user.has_role
            [INTERMEDIATE] Step 1: user.has_role
      -> Resolved to: Any.has_role
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: required_role
      [SYMBOL_LOOKUP] Variable required_role not found in any scope
      [ATTRIBUTE] Found attribute access: user.has_role
      [SYMBOL_LOOKUP] Found user in function scope: Any
      [SYMBOL_LOOKUP] Found user in function scope: Any
      -> Not module state
      [NAME] Found name reference: user
        [CACHE] user -> Any (cached)
      -> Not module state
      [NAME] Found name reference: required_role
        [CACHE] required_role -> decorators.required_role (cached)
      -> Not module state
      [CALL] Found call: PermissionError
    [CACHE] PermissionError -> decorators.PermissionError (cached)
      -> Resolved to: decorators.PermissionError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: PermissionError
        [CACHE] PermissionError -> decorators.PermissionError (cached)
      -> Not module state
      [NAME] Found name reference: required_role
        [CACHE] required_role -> decorators.required_role (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: user.id
      [SYMBOL_LOOKUP] Found user in function scope: Any
      [SYMBOL_LOOKUP] Found user in function scope: Any
      -> Not module state
      [NAME] Found name reference: user
        [CACHE] user -> Any (cached)
      -> Not module state
      [NAME] Found name reference: required_role
        [CACHE] required_role -> decorators.required_role (cached)
      -> Not module state
      [NAME] Found name reference: AUTH_CACHE
      [SYMBOL_LOOKUP] Variable AUTH_CACHE not found in any scope
      -> Resolved to state: decorators.AUTH_CACHE
      [SYMBOL_LOOKUP] Variable AUTH_CACHE not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> decorators.cache_key (cached)
      -> Not module state
      [CALL] Found call: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 3
        Instantiations: 0
        State Access: 1
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.validate_auth
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.validate_auth
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: rate_limit
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.rate_limit
    [CONTEXT] Entered function: decorators.rate_limit (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'calls': 'int', 'period': 'int', 'per_user': 'bool', 'key_func': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for calls: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      [SYMBOL_UPDATE] Function: calls -> decorators.int
        [ARG_TYPE] RESOLVED calls : decorators.int
        [ARG_TYPE] Processing type annotation for period: int
        [CACHE] int -> decorators.int (cached)
      [SYMBOL_UPDATE] Function: period -> decorators.int
        [ARG_TYPE] RESOLVED period : decorators.int
        [ARG_TYPE] Processing type annotation for per_user: bool
      [SYMBOL_LOOKUP] Variable bool not found in any scope
      [SYMBOL_UPDATE] Function: per_user -> decorators.bool
        [ARG_TYPE] RESOLVED per_user : decorators.bool
        [ARG_TYPE] Processing type annotation for key_func: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: key_func -> typing.Optional
        [ARG_TYPE] RESOLVED key_func : typing.Optional
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'calls': 'int', 'period': 'int', 'per_user': 'bool', 'key_func': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(func)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: key_func
      [SYMBOL_LOOKUP] Variable key_func not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: rate_key = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: key_func
      [SYMBOL_LOOKUP] Variable key_func not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.key_func
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for rate_key
      [NAME] Found name reference: rate_key
      [SYMBOL_LOOKUP] Variable rate_key not found in any scope
      -> Not module state
      [CALL] Found call: key_func
      [SYMBOL_LOOKUP] Variable key_func not found in any scope
      -> Resolved to: decorators.key_func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: key_func
        [CACHE] key_func -> decorators.key_func (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [NAME] Found name reference: per_user
      [SYMBOL_LOOKUP] Variable per_user not found in any scope
      -> Not module state
    [FROM_IMPORT] get_current_user_id -> session_manager.get_current_user_id
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_current_user_id
      [SYMBOL_LOOKUP] Variable get_current_user_id not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Function: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: str
      [SYMBOL_LOOKUP] Found user_id in function scope: str
      -> Not module state
      [CALL] Found call: get_current_user_id
      [SYMBOL_LOOKUP] Variable get_current_user_id not found in any scope
      -> Resolved to: session_manager.get_current_user_id
      -> ADDED to calls
      [NAME] Found name reference: get_current_user_id
      [SYMBOL_LOOKUP] Variable get_current_user_id not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: rate_key = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: rate_key
        [CACHE] rate_key -> decorators.rate_key (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [ASSIGNMENT] Processing: rate_key = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: rate_key
        [CACHE] rate_key -> decorators.rate_key (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
        [CACHE] func.__name__ -> decorators.func.__name__ (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [ASSIGNMENT] Processing: current_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for current_time
      [NAME] Found name reference: current_time
      [SYMBOL_LOOKUP] Variable current_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: rate_key
        [CACHE] rate_key -> decorators.rate_key (cached)
      -> Not module state
      [NAME] Found name reference: RATE_LIMIT_CACHE
      [SYMBOL_LOOKUP] Variable RATE_LIMIT_CACHE not found in any scope
      -> Resolved to state: decorators.RATE_LIMIT_CACHE
      [SYMBOL_LOOKUP] Variable RATE_LIMIT_CACHE not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: RATE_LIMIT_CACHE
        [CACHE] RATE_LIMIT_CACHE -> decorators.RATE_LIMIT_CACHE (cached)
      -> Resolved to state: decorators.RATE_LIMIT_CACHE
      [SYMBOL_LOOKUP] Variable RATE_LIMIT_CACHE not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: rate_key
        [CACHE] rate_key -> decorators.rate_key (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cache_entry = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cache_entry
      [SYMBOL_LOOKUP] Variable cache_entry not found in any scope
      -> Not module state
      [NAME] Found name reference: RATE_LIMIT_CACHE
        [CACHE] RATE_LIMIT_CACHE -> decorators.RATE_LIMIT_CACHE (cached)
      -> Resolved to state: decorators.RATE_LIMIT_CACHE
      [SYMBOL_LOOKUP] Variable RATE_LIMIT_CACHE not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: rate_key
        [CACHE] rate_key -> decorators.rate_key (cached)
      -> Not module state
      [NAME] Found name reference: cache_entry
        [CACHE] cache_entry -> decorators.cache_entry (cached)
      -> Not module state
      [NAME] Found name reference: call_time
      [SYMBOL_LOOKUP] Variable call_time not found in any scope
      -> Not module state
      [NAME] Found name reference: call_time
        [CACHE] call_time -> decorators.call_time (cached)
      -> Not module state
      [NAME] Found name reference: cache_entry
        [CACHE] cache_entry -> decorators.cache_entry (cached)
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> decorators.current_time (cached)
      -> Not module state
      [NAME] Found name reference: call_time
        [CACHE] call_time -> decorators.call_time (cached)
      -> Not module state
      [NAME] Found name reference: period
      [SYMBOL_LOOKUP] Variable period not found in any scope
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> decorators.current_time (cached)
      -> Not module state
      [NAME] Found name reference: cache_entry
        [CACHE] cache_entry -> decorators.cache_entry (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Resolved to: decorators.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [NAME] Found name reference: cache_entry
        [CACHE] cache_entry -> decorators.cache_entry (cached)
      -> Not module state
      [NAME] Found name reference: calls
      [SYMBOL_LOOKUP] Variable calls not found in any scope
      -> Not module state
      [NAME] Found name reference: cache_entry
        [CACHE] cache_entry -> decorators.cache_entry (cached)
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> decorators.current_time (cached)
      -> Not module state
      [NAME] Found name reference: period
        [CACHE] period -> decorators.period (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> decorators.RuntimeError (cached)
      -> Resolved to: decorators.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
        [CACHE] RuntimeError -> decorators.RuntimeError (cached)
      -> Not module state
      [NAME] Found name reference: calls
        [CACHE] calls -> decorators.calls (cached)
      -> Not module state
      [NAME] Found name reference: period
        [CACHE] period -> decorators.period (cached)
      -> Not module state
      [CALL] Found call: cache_entry.append
      [SYMBOL_LOOKUP] Variable cache_entry not found in any scope
            [INTERMEDIATE] Tracking chain steps for: cache_entry.append
            [INTERMEDIATE] Step 1: cache_entry.append
      -> Resolved to: decorators.cache_entry.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: current_time
      [SYMBOL_LOOKUP] Variable current_time not found in any scope
      [ATTRIBUTE] Found attribute access: cache_entry.append
      [SYMBOL_LOOKUP] Variable cache_entry not found in any scope
      -> Not module state
      [NAME] Found name reference: cache_entry
        [CACHE] cache_entry -> decorators.cache_entry (cached)
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> decorators.current_time (cached)
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 1
        Instantiations: 0
        State Access: 1
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.rate_limit
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.rate_limit
        Calls: 0
        Instantiations: 0
        State Access: 0
  [CLASS] Analyzing class: ClassBasedDecorator
    [CONTEXT] Entered class: decorators.ClassBasedDecorator
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.ClassBasedDecorator.__init__
    [CONTEXT] Entered function: decorators.ClassBasedDecorator.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'config': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for config: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: config -> typing.Dict
        [ARG_TYPE] RESOLVED config : typing.Dict
      [ATTRIBUTE] Found attribute access: self.config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.call_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_call_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.ClassBasedDecorator.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.ClassBasedDecorator.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.ClassBasedDecorator.__call__
    [CONTEXT] Entered function: decorators.ClassBasedDecorator.__call__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Callable'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
      [NESTED_FUNCTION] Analyzing nested function: wrapper
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 0 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Callable'}
      [ATTRIBUTE] Found attribute access: self.call_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_call_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [CALL] Found call: self.config.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.config.get
            [INTERMEDIATE] Step 1: self.config
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: decorators.ClassBasedDecorator.config
            [INTERMEDIATE] Step 2: self.config.get
      -> Resolved to: decorators.ClassBasedDecorator.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.config.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [CALL] Found call: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.call_count
        [CACHE] self.call_count -> decorators.ClassBasedDecorator.call_count (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [CALL] Found call: self.config.get
    [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.config.get
            [INTERMEDIATE] Step 1: self.config
    [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
            [INTERMEDIATE] Step 1 resolved to: decorators.ClassBasedDecorator.config
            [INTERMEDIATE] Step 2: self.config.get
      -> Resolved to: decorators.ClassBasedDecorator.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.config.get
        [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
        [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [CALL] Found call: self._validate_arguments
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._validate_arguments
            [INTERMEDIATE] Step 1: self._validate_arguments
      -> Resolved to: decorators.ClassBasedDecorator._validate_arguments
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
        [FUNCTION_ARG] Checking argument: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
        [FUNCTION_ARG] Checking argument: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      [ATTRIBUTE] Found attribute access: self._validate_arguments
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [TYPE_INFERENCE] Call resolved to: typing.Callable
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [CALL] Found call: self.config.get
    [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.config.get
            [INTERMEDIATE] Step 1: self.config
    [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
            [INTERMEDIATE] Step 1 resolved to: decorators.ClassBasedDecorator.config
            [INTERMEDIATE] Step 2: self.config.get
      -> Resolved to: decorators.ClassBasedDecorator.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.config.get
        [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
        [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._transform_result
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.ClassBasedDecorator._transform_result
        [RETURN_TYPE_RESOLUTION] Resolving return type: Any
        [RETURN_TYPE_RESOLUTION] Class 'Any' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Any
      [TYPE_INFERENCE] Could not resolve return type 'Any' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Any (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: result -> Any
        [ASSIGNMENT] RESOLVED Updated symbol table: result = Any
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [CALL] Found call: self._transform_result
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._transform_result
            [INTERMEDIATE] Step 1: self._transform_result
      -> Resolved to: decorators.ClassBasedDecorator._transform_result
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in nested scope: Any
      [SYMBOL_LOOKUP] Found result in nested scope: Any
      [ATTRIBUTE] Found attribute access: self._transform_result
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: self.config.get
    [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.config.get
            [INTERMEDIATE] Step 1: self.config
    [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
            [INTERMEDIATE] Step 1 resolved to: decorators.ClassBasedDecorator.config
            [INTERMEDIATE] Step 2: self.config.get
      -> Resolved to: decorators.ClassBasedDecorator.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.config.get
        [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
        [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.ClassBasedDecorator (cached)
      -> Not module state
      [CALL] Found call: logging.error
    [CACHE] logging.error -> logging.error (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.error
            [INTERMEDIATE] Step 1: logging.error
      -> Resolved to: logging.error
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.error
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
        [CACHE] logging -> logging (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
        [CACHE] func.__name__ -> typing.Callable.__name__ (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.ClassBasedDecorator.__call__
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.ClassBasedDecorator.__call__
        Calls: 2
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.ClassBasedDecorator._validate_arguments
    [CONTEXT] Entered function: decorators.ClassBasedDecorator._validate_arguments (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Callable', 'args': 'tuple', 'kwargs': 'dict'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
        [ARG_TYPE] Processing type annotation for args: tuple
      [SYMBOL_LOOKUP] Variable tuple not found in any scope
      [SYMBOL_UPDATE] Function: args -> decorators.tuple
        [ARG_TYPE] RESOLVED args : decorators.tuple
        [ARG_TYPE] Processing type annotation for kwargs: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [SYMBOL_UPDATE] Function: kwargs -> decorators.dict
        [ARG_TYPE] RESOLVED kwargs : decorators.dict
      [ASSIGNMENT] Processing: sig = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: inspect.signature
      [SYMBOL_LOOKUP] Variable inspect not found in any scope
      [TYPE_INFERENCE] Call resolved to: inspect.signature
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for sig
      [NAME] Found name reference: sig
      [SYMBOL_LOOKUP] Variable sig not found in any scope
      -> Not module state
      [CALL] Found call: inspect.signature
      [SYMBOL_LOOKUP] Variable inspect not found in any scope
            [INTERMEDIATE] Tracking chain steps for: inspect.signature
            [INTERMEDIATE] Step 1: inspect.signature
      -> Resolved to: inspect.signature
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [ATTRIBUTE] Found attribute access: inspect.signature
      [SYMBOL_LOOKUP] Variable inspect not found in any scope
      -> Not module state
      [NAME] Found name reference: inspect
      [SYMBOL_LOOKUP] Variable inspect not found in any scope
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      -> Not module state
      [CALL] Found call: sig.bind
      [SYMBOL_LOOKUP] Variable sig not found in any scope
            [INTERMEDIATE] Tracking chain steps for: sig.bind
            [INTERMEDIATE] Step 1: sig.bind
      -> Resolved to: decorators.sig.bind
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: sig.bind
      [SYMBOL_LOOKUP] Variable sig not found in any scope
      -> Not module state
      [NAME] Found name reference: sig
        [CACHE] sig -> decorators.sig (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Found args in function scope: decorators.tuple
      [SYMBOL_LOOKUP] Found args in function scope: decorators.tuple
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Found kwargs in function scope: decorators.dict
      [SYMBOL_LOOKUP] Found kwargs in function scope: decorators.dict
      -> Not module state
      [NAME] Found name reference: TypeError
      [SYMBOL_LOOKUP] Variable TypeError not found in any scope
      -> Not module state
      [CALL] Found call: ValueError
      [SYMBOL_LOOKUP] Variable ValueError not found in any scope
      -> Resolved to: decorators.ValueError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: ValueError
      [SYMBOL_LOOKUP] Variable ValueError not found in any scope
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.ClassBasedDecorator._validate_arguments
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.ClassBasedDecorator._validate_arguments
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.ClassBasedDecorator._transform_result
    [CONTEXT] Entered function: decorators.ClassBasedDecorator._transform_result (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'Any'}
        [ARG_TYPE] Processing type annotation for result: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: result -> typing.Any
        [ARG_TYPE] RESOLVED result : typing.Any
      [ASSIGNMENT] Processing: transform_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.config.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.ClassBasedDecorator.config.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for transform_type
      [NAME] Found name reference: transform_type
      [SYMBOL_LOOKUP] Variable transform_type not found in any scope
      -> Not module state
      [CALL] Found call: self.config.get
    [CACHE] self.config.get -> decorators.ClassBasedDecorator.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.config.get
            [INTERMEDIATE] Step 1: self.config
    [CACHE] self.config -> decorators.ClassBasedDecorator.config (cached)
            [INTERMEDIATE] Step 1 resolved to: decorators.ClassBasedDecorator.config
            [INTERMEDIATE] Step 2: self.config.get
      -> Resolved to: decorators.ClassBasedDecorator.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.config.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: transform_type
        [CACHE] transform_type -> decorators.transform_type (cached)
      -> Not module state
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: typing.Any
      [SYMBOL_LOOKUP] Found result in function scope: typing.Any
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: transform_type
        [CACHE] transform_type -> decorators.transform_type (cached)
      -> Not module state
      [CALL] Found call: logging.info
    [CACHE] logging.info -> logging.info (cached)
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.ClassBasedDecorator._transform_result
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.ClassBasedDecorator._transform_result
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: decorators.ClassBasedDecorator
    [SYMBOL_TABLE] Exited class scope
  [FUNCTION] Analyzing function: create_custom_decorator
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.create_custom_decorator
    [CONTEXT] Entered function: decorators.create_custom_decorator (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'name': 'str', 'pre_hook': 'Optional[Callable]', 'post_hook': 'Optional[Callable]', 'error_hook': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: name -> decorators.str
        [ARG_TYPE] RESOLVED name : decorators.str
        [ARG_TYPE] Processing type annotation for pre_hook: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: pre_hook -> typing.Optional
        [ARG_TYPE] RESOLVED pre_hook : typing.Optional
        [ARG_TYPE] Processing type annotation for post_hook: Optional
        [CACHE] Optional -> typing.Optional (cached)
      [SYMBOL_UPDATE] Function: post_hook -> typing.Optional
        [ARG_TYPE] RESOLVED post_hook : typing.Optional
        [ARG_TYPE] Processing type annotation for error_hook: Optional
        [CACHE] Optional -> typing.Optional (cached)
      [SYMBOL_UPDATE] Function: error_hook -> typing.Optional
        [ARG_TYPE] RESOLVED error_hook : typing.Optional
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'name': 'str', 'pre_hook': 'Optional[Callable]', 'post_hook': 'Optional[Callable]', 'error_hook': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(func)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: pre_hook
      [SYMBOL_LOOKUP] Variable pre_hook not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: pre_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: pre_hook
      [SYMBOL_LOOKUP] Variable pre_hook not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.pre_hook
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for pre_result
      [NAME] Found name reference: pre_result
      [SYMBOL_LOOKUP] Variable pre_result not found in any scope
      -> Not module state
      [CALL] Found call: pre_hook
      [SYMBOL_LOOKUP] Variable pre_hook not found in any scope
      -> Resolved to: decorators.pre_hook
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
        [FUNCTION_ARG] Checking argument: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
        [FUNCTION_ARG] Checking argument: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      [NAME] Found name reference: pre_hook
        [CACHE] pre_hook -> decorators.pre_hook (cached)
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [NAME] Found name reference: pre_result
        [CACHE] pre_result -> decorators.pre_result (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
    [CACHE] RuntimeError -> decorators.RuntimeError (cached)
      -> Resolved to: decorators.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.func
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [NAME] Found name reference: post_hook
      [SYMBOL_LOOKUP] Variable post_hook not found in any scope
      -> Not module state
      [CALL] Found call: post_hook
      [SYMBOL_LOOKUP] Variable post_hook not found in any scope
      -> Resolved to: decorators.post_hook
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
        [FUNCTION_ARG] Checking argument: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
        [FUNCTION_ARG] Checking argument: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      [NAME] Found name reference: post_hook
        [CACHE] post_hook -> decorators.post_hook (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [NAME] Found name reference: error_hook
      [SYMBOL_LOOKUP] Variable error_hook not found in any scope
      -> Not module state
      [CALL] Found call: error_hook
      [SYMBOL_LOOKUP] Variable error_hook not found in any scope
      -> Resolved to: decorators.error_hook
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
        [FUNCTION_ARG] Checking argument: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
        [FUNCTION_ARG] Checking argument: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
        [FUNCTION_ARG] Checking argument: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      [NAME] Found name reference: error_hook
        [CACHE] error_hook -> decorators.error_hook (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 0
        Instantiations: 0
        State Access: 0
      [CALL] Found call: _decorator_registry.register_decorator
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _decorator_registry.register_decorator
            [INTERMEDIATE] Step 1: _decorator_registry.register_decorator
      -> Resolved to: decorators._decorator_registry.register_decorator
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: name
      [SYMBOL_LOOKUP] Variable name not found in any scope
        [FUNCTION_ARG] Checking argument: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      [ATTRIBUTE] Found attribute access: _decorator_registry.register_decorator
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Not module state
      [NAME] Found name reference: _decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> Resolved to state: decorators._decorator_registry
      [SYMBOL_LOOKUP] Variable _decorator_registry not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: name
      [SYMBOL_LOOKUP] Variable name not found in any scope
      -> Not module state
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [NAME] Found name reference: wrapper
        [CACHE] wrapper -> decorators.wrapper (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.create_custom_decorator
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.create_custom_decorator
        Calls: 0
        Instantiations: 0
        State Access: 1
  [FUNCTION] Analyzing function: multi_decorator
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.multi_decorator
    [CONTEXT] Entered function: decorators.multi_decorator (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
      [ASSIGNMENT] Processing: decorated_func = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: decorated_func
      [SYMBOL_LOOKUP] Variable decorated_func not found in any scope
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: dec
      [SYMBOL_LOOKUP] Variable dec not found in any scope
      -> Not module state
      [CALL] Found call: reversed
      [SYMBOL_LOOKUP] Variable reversed not found in any scope
      -> Resolved to: decorators.reversed
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: decorators
      [SYMBOL_LOOKUP] Variable decorators not found in any scope
      [NAME] Found name reference: reversed
      [SYMBOL_LOOKUP] Variable reversed not found in any scope
      -> Not module state
      [NAME] Found name reference: decorators
      [SYMBOL_LOOKUP] Variable decorators not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: decorated_func = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: dec
      [SYMBOL_LOOKUP] Variable dec not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.dec
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for decorated_func
      [NAME] Found name reference: decorated_func
        [CACHE] decorated_func -> decorators.decorated_func (cached)
      -> Not module state
      [CALL] Found call: dec
      [SYMBOL_LOOKUP] Variable dec not found in any scope
      -> Resolved to: decorators.dec
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: decorated_func
      [SYMBOL_LOOKUP] Variable decorated_func not found in any scope
      [NAME] Found name reference: dec
        [CACHE] dec -> decorators.dec (cached)
      -> Not module state
      [NAME] Found name reference: decorated_func
        [CACHE] decorated_func -> decorators.decorated_func (cached)
      -> Not module state
      [NAME] Found name reference: decorated_func
        [CACHE] decorated_func -> decorators.decorated_func (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.multi_decorator
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.multi_decorator
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: conditional_decorator
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.conditional_decorator
    [CONTEXT] Entered function: decorators.conditional_decorator (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'condition': 'Union[bool, Callable]', 'decorator': 'Callable'}
        [ARG_TYPE] Processing type annotation for condition: Union
      [SYMBOL_LOOKUP] Variable Union not found in any scope
      [SYMBOL_UPDATE] Function: condition -> typing.Union
        [ARG_TYPE] RESOLVED condition : typing.Union
        [ARG_TYPE] Processing type annotation for decorator: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: decorator -> typing.Callable
        [ARG_TYPE] RESOLVED decorator : typing.Callable
      [NESTED_FUNCTION] Analyzing nested function: decorator_wrapper
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'condition': 'Union[bool, Callable]', 'decorator': 'Callable'}
        [ARG_TYPE] Processing type annotation for func: Callable
        [CACHE] Callable -> typing.Callable (cached)
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
      [ASSIGNMENT] Processing: should_apply = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: should_apply
      [SYMBOL_LOOKUP] Variable should_apply not found in any scope
      -> Not module state
      [NAME] Found name reference: condition
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      -> Not module state
      [CALL] Found call: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      -> Resolved to: decorators.callable
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: condition
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      [NAME] Found name reference: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      -> Not module state
      [NAME] Found name reference: condition
        [CACHE] condition -> typing.Union (cached)
      -> Not module state
      [ASSIGNMENT] Processing: should_apply = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: condition
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      [TYPE_INFERENCE] Call resolved to: typing.Union
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for should_apply
      [NAME] Found name reference: should_apply
        [CACHE] should_apply -> decorators.should_apply (cached)
      -> Not module state
      [CALL] Found call: condition
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      [SYMBOL_LOOKUP] Found condition in function scope: typing.Union
      -> Resolved to: typing.Union
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      [NAME] Found name reference: condition
        [CACHE] condition -> typing.Union (cached)
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: should_apply
        [CACHE] should_apply -> decorators.should_apply (cached)
      -> Not module state
      [CALL] Found call: decorator
    [CACHE] decorator -> decorators.decorator (cached)
      -> Resolved to: decorators.decorator
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: func
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in nested scope: typing.Callable
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Found decorator in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found decorator in function scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator_wrapper
      [SYMBOL_LOOKUP] Variable decorator_wrapper not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.conditional_decorator
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.conditional_decorator
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: advanced_cache
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.advanced_cache
    [CONTEXT] Entered function: decorators.advanced_cache (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'ttl': 'int', 'key_func': 'Optional[Callable]', 'serializer': 'Optional[Callable]', 'validator': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for ttl: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      [SYMBOL_UPDATE] Function: ttl -> decorators.int
        [ARG_TYPE] RESOLVED ttl : decorators.int
        [ARG_TYPE] Processing type annotation for key_func: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: key_func -> typing.Optional
        [ARG_TYPE] RESOLVED key_func : typing.Optional
        [ARG_TYPE] Processing type annotation for serializer: Optional
        [CACHE] Optional -> typing.Optional (cached)
      [SYMBOL_UPDATE] Function: serializer -> typing.Optional
        [ARG_TYPE] RESOLVED serializer : typing.Optional
        [ARG_TYPE] Processing type annotation for validator: Optional
        [CACHE] Optional -> typing.Optional (cached)
      [SYMBOL_UPDATE] Function: validator -> typing.Optional
        [ARG_TYPE] RESOLVED validator : typing.Optional
      [ANNOTATED_ASSIGNMENT] cache_storage : Dict[str, Dict[str, Any]]
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: cache_storage -> typing.Dict
        -> Updated symbol table: cache_storage : typing.Dict
      [NAME] Found name reference: cache_storage
      [SYMBOL_LOOKUP] Found cache_storage in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found cache_storage in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> decorators.str (cached)
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'ttl': 'int', 'key_func': 'Optional[Callable]', 'serializer': 'Optional[Callable]', 'validator': 'Optional[Callable]'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(func)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: key_func
      [SYMBOL_LOOKUP] Variable key_func not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: key_func
      [SYMBOL_LOOKUP] Variable key_func not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.key_func
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cache_key
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
      -> Not module state
      [CALL] Found call: key_func
    [CACHE] key_func -> decorators.key_func (cached)
      -> Resolved to: decorators.key_func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: key_func
        [CACHE] key_func -> decorators.key_func (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> decorators.cache_key (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [CALL] Found call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Resolved to: decorators.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> decorators.str (cached)
      -> Not module state
      [CALL] Found call: sorted
      -> IGNORED (built-in function)
      [NAME] Found name reference: sorted
      [SYMBOL_LOOKUP] Variable sorted not found in any scope
      -> Not module state
      [CALL] Found call: kwargs.items
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
            [INTERMEDIATE] Tracking chain steps for: kwargs.items
            [INTERMEDIATE] Step 1: kwargs.items
      -> Resolved to: decorators.kwargs.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: kwargs.items
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [ASSIGNMENT] Processing: current_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for current_time
      [NAME] Found name reference: current_time
      [SYMBOL_LOOKUP] Variable current_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> decorators.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: cache_storage
      [SYMBOL_LOOKUP] Variable cache_storage not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: entry = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: entry
      [SYMBOL_LOOKUP] Variable entry not found in any scope
      -> Not module state
      [NAME] Found name reference: cache_storage
        [CACHE] cache_storage -> decorators.cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> decorators.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> decorators.current_time (cached)
      -> Not module state
      [NAME] Found name reference: entry
        [CACHE] entry -> decorators.entry (cached)
      -> Not module state
      [NAME] Found name reference: ttl
      [SYMBOL_LOOKUP] Variable ttl not found in any scope
      -> Not module state
      [NAME] Found name reference: validator
      [SYMBOL_LOOKUP] Variable validator not found in any scope
      -> Not module state
      [CALL] Found call: validator
      [SYMBOL_LOOKUP] Variable validator not found in any scope
      -> Resolved to: decorators.validator
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: validator
        [CACHE] validator -> decorators.validator (cached)
      -> Not module state
      [NAME] Found name reference: entry
        [CACHE] entry -> decorators.entry (cached)
      -> Not module state
      [NAME] Found name reference: cache_storage
        [CACHE] cache_storage -> decorators.cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> decorators.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: entry
        [CACHE] entry -> decorators.entry (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.func
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [NAME] Found name reference: args
        [CACHE] args -> decorators.args (cached)
      -> Not module state
      [NAME] Found name reference: kwargs
        [CACHE] kwargs -> decorators.kwargs (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cached_result = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cached_result
      [SYMBOL_LOOKUP] Variable cached_result not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: serializer
      [SYMBOL_LOOKUP] Variable serializer not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: cached_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: serializer
      [SYMBOL_LOOKUP] Variable serializer not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.serializer
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cached_result
      [NAME] Found name reference: cached_result
        [CACHE] cached_result -> decorators.cached_result (cached)
      -> Not module state
      [CALL] Found call: serializer
      [SYMBOL_LOOKUP] Variable serializer not found in any scope
      -> Resolved to: decorators.serializer
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      [NAME] Found name reference: serializer
        [CACHE] serializer -> decorators.serializer (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: cache_storage
        [CACHE] cache_storage -> decorators.cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> decorators.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: cached_result
        [CACHE] cached_result -> decorators.cached_result (cached)
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> decorators.current_time (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 0
        Instantiations: 0
        State Access: 0
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.advanced_cache
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.advanced_cache
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: create_monitoring_decorator
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.create_monitoring_decorator
    [CONTEXT] Entered function: decorators.create_monitoring_decorator (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metrics_collector': 'Any'}
        [ARG_TYPE] Processing type annotation for metrics_collector: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: metrics_collector -> typing.Any
        [ARG_TYPE] RESOLVED metrics_collector : typing.Any
      [NESTED_FUNCTION] Analyzing nested function: monitor_decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metrics_collector': 'Any'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(func)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [ASSIGNMENT] Processing: monitor_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: metrics_collector.start_monitoring
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.metrics_collector.start_monitoring
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for monitor_id
      [NAME] Found name reference: monitor_id
      [SYMBOL_LOOKUP] Variable monitor_id not found in any scope
      -> Not module state
      [CALL] Found call: metrics_collector.start_monitoring
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
            [INTERMEDIATE] Tracking chain steps for: metrics_collector.start_monitoring
            [INTERMEDIATE] Step 1: metrics_collector.start_monitoring
      -> Resolved to: decorators.metrics_collector.start_monitoring
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: metrics_collector.start_monitoring
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
      -> Not module state
      [NAME] Found name reference: metrics_collector
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.func
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
        [CACHE] func -> decorators.func (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [CALL] Found call: metrics_collector.record_success
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
            [INTERMEDIATE] Tracking chain steps for: metrics_collector.record_success
            [INTERMEDIATE] Step 1: metrics_collector.record_success
      -> Resolved to: decorators.metrics_collector.record_success
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: monitor_id
      [SYMBOL_LOOKUP] Variable monitor_id not found in any scope
      [ATTRIBUTE] Found attribute access: metrics_collector.record_success
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
      -> Not module state
      [NAME] Found name reference: metrics_collector
        [CACHE] metrics_collector -> decorators.metrics_collector (cached)
      -> Not module state
      [NAME] Found name reference: monitor_id
        [CACHE] monitor_id -> decorators.monitor_id (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: metrics_collector.record_error
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
            [INTERMEDIATE] Tracking chain steps for: metrics_collector.record_error
            [INTERMEDIATE] Step 1: metrics_collector.record_error
      -> Resolved to: decorators.metrics_collector.record_error
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: monitor_id
      [SYMBOL_LOOKUP] Variable monitor_id not found in any scope
      [ATTRIBUTE] Found attribute access: metrics_collector.record_error
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
      -> Not module state
      [NAME] Found name reference: metrics_collector
        [CACHE] metrics_collector -> decorators.metrics_collector (cached)
      -> Not module state
      [NAME] Found name reference: monitor_id
        [CACHE] monitor_id -> decorators.monitor_id (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> decorators.str (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [CALL] Found call: metrics_collector.end_monitoring
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
            [INTERMEDIATE] Tracking chain steps for: metrics_collector.end_monitoring
            [INTERMEDIATE] Step 1: metrics_collector.end_monitoring
      -> Resolved to: decorators.metrics_collector.end_monitoring
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: monitor_id
      [SYMBOL_LOOKUP] Variable monitor_id not found in any scope
      [ATTRIBUTE] Found attribute access: metrics_collector.end_monitoring
      [SYMBOL_LOOKUP] Variable metrics_collector not found in any scope
      -> Not module state
      [NAME] Found name reference: metrics_collector
        [CACHE] metrics_collector -> decorators.metrics_collector (cached)
      -> Not module state
      [NAME] Found name reference: monitor_id
        [CACHE] monitor_id -> decorators.monitor_id (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 0
        Instantiations: 0
        State Access: 0
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: monitor_decorator
      [SYMBOL_LOOKUP] Variable monitor_decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.create_monitoring_decorator
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.create_monitoring_decorator
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: transaction_decorator
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.transaction_decorator
    [CONTEXT] Entered function: decorators.transaction_decorator (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'isolation_level': 'str', 'rollback_on': 'Optional[List[Type[Exception]]]'}
        [ARG_TYPE] Processing type annotation for isolation_level: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: isolation_level -> decorators.str
        [ARG_TYPE] RESOLVED isolation_level : decorators.str
        [ARG_TYPE] Processing type annotation for rollback_on: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: rollback_on -> typing.Optional
        [ARG_TYPE] RESOLVED rollback_on : typing.Optional
      [NESTED_FUNCTION] Analyzing nested function: decorator
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'isolation_level': 'str', 'rollback_on': 'Optional[List[Type[Exception]]]'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Nested: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
  [FUNCTION] Analyzing function: wrapper
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.wrapper
    [DECORATOR] @wraps(func)
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function decorators.wrapper
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in decorators.wrapper
    [CONTEXT] Entered function: decorators.wrapper (depth: 2)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [ASSIGNMENT] Processing: db_conn = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.get_db_connection
        [RETURN_TYPE_RESOLUTION] Resolving return type: DatabaseConnection
        [RETURN_TYPE_RESOLUTION] Found in other module: database_manager.DatabaseConnection
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.DatabaseConnection (from return type)
      [SYMBOL_UPDATE] Function: db_conn -> database_manager.DatabaseConnection
        [ASSIGNMENT] RESOLVED Updated symbol table: db_conn = database_manager.DatabaseConnection
      [NAME] Found name reference: db_conn
      [SYMBOL_LOOKUP] Found db_conn in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found db_conn in function scope: database_manager.DatabaseConnection
      -> Not module state
      [CALL] Found call: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      -> Resolved to: database_manager.get_db_connection
      -> ADDED to calls
      [NAME] Found name reference: get_db_connection
      [SYMBOL_LOOKUP] Variable get_db_connection not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: tx_manager = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: TransactionManager
      [SYMBOL_LOOKUP] Variable TransactionManager not found in any scope
      [TYPE_INFERENCE] Call resolved to: database_manager.TransactionManager
      [TYPE_INFERENCE] RESOLVED Inferred type: database_manager.TransactionManager (class instantiation)
      [SYMBOL_UPDATE] Function: tx_manager -> database_manager.TransactionManager
        [ASSIGNMENT] RESOLVED Updated symbol table: tx_manager = database_manager.TransactionManager
      [NAME] Found name reference: tx_manager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      -> Not module state
      [CALL] Found call: TransactionManager
      [SYMBOL_LOOKUP] Variable TransactionManager not found in any scope
      -> Resolved to: database_manager.TransactionManager
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: db_conn
      [SYMBOL_LOOKUP] Found db_conn in function scope: database_manager.DatabaseConnection
      [SYMBOL_LOOKUP] Found db_conn in function scope: database_manager.DatabaseConnection
        [FUNCTION_ARG] Checking argument: isolation_level
      [SYMBOL_LOOKUP] Variable isolation_level not found in any scope
      [NAME] Found name reference: TransactionManager
      [SYMBOL_LOOKUP] Variable TransactionManager not found in any scope
      -> Not module state
      [NAME] Found name reference: db_conn
        [CACHE] db_conn -> database_manager.DatabaseConnection (cached)
      -> Not module state
      [NAME] Found name reference: isolation_level
      [SYMBOL_LOOKUP] Variable isolation_level not found in any scope
      -> Not module state
      [CALL] Found call: tx_manager.begin_transaction
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
            [INTERMEDIATE] Tracking chain steps for: tx_manager.begin_transaction
            [INTERMEDIATE] Step 1: tx_manager.begin_transaction
      -> Resolved to: database_manager.TransactionManager.begin_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: tx_manager.begin_transaction
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      -> Not module state
      [NAME] Found name reference: tx_manager
        [CACHE] tx_manager -> database_manager.TransactionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.func
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Variable func not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [CALL] Found call: tx_manager.commit_transaction
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
            [INTERMEDIATE] Tracking chain steps for: tx_manager.commit_transaction
            [INTERMEDIATE] Step 1: tx_manager.commit_transaction
      -> Resolved to: database_manager.TransactionManager.commit_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: tx_manager.commit_transaction
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      -> Not module state
      [NAME] Found name reference: tx_manager
        [CACHE] tx_manager -> database_manager.TransactionManager (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: should_rollback = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: should_rollback
      [SYMBOL_LOOKUP] Variable should_rollback not found in any scope
      -> Not module state
      [NAME] Found name reference: rollback_on
      [SYMBOL_LOOKUP] Variable rollback_on not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: should_rollback = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: any
      [SYMBOL_LOOKUP] Variable any not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.any
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for should_rollback
      [NAME] Found name reference: should_rollback
        [CACHE] should_rollback -> decorators.should_rollback (cached)
      -> Not module state
      [CALL] Found call: any
      -> IGNORED (built-in function)
      [NAME] Found name reference: any
      [SYMBOL_LOOKUP] Variable any not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Resolved to: decorators.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
        [FUNCTION_ARG] Checking argument: exc_type
      [SYMBOL_LOOKUP] Variable exc_type not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [NAME] Found name reference: exc_type
      [SYMBOL_LOOKUP] Variable exc_type not found in any scope
      -> Not module state
      [NAME] Found name reference: exc_type
        [CACHE] exc_type -> decorators.exc_type (cached)
      -> Not module state
      [NAME] Found name reference: rollback_on
        [CACHE] rollback_on -> decorators.rollback_on (cached)
      -> Not module state
      [NAME] Found name reference: should_rollback
        [CACHE] should_rollback -> decorators.should_rollback (cached)
      -> Not module state
      [CALL] Found call: tx_manager.rollback_transaction
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
            [INTERMEDIATE] Tracking chain steps for: tx_manager.rollback_transaction
            [INTERMEDIATE] Step 1: tx_manager.rollback_transaction
      -> Resolved to: database_manager.TransactionManager.rollback_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: tx_manager.rollback_transaction
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      -> Not module state
      [NAME] Found name reference: tx_manager
        [CACHE] tx_manager -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: tx_manager.commit_transaction
    [CACHE] tx_manager.commit_transaction -> database_manager.TransactionManager.commit_transaction (cached)
            [INTERMEDIATE] Tracking chain steps for: tx_manager.commit_transaction
            [INTERMEDIATE] Step 1: tx_manager.commit_transaction
      -> Resolved to: database_manager.TransactionManager.commit_transaction
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: tx_manager.commit_transaction
        [CACHE] tx_manager.commit_transaction -> database_manager.TransactionManager.commit_transaction (cached)
      -> Not module state
      [NAME] Found name reference: tx_manager
        [CACHE] tx_manager -> database_manager.TransactionManager (cached)
      -> Not module state
      [CALL] Found call: tx_manager.close_connection
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
            [INTERMEDIATE] Tracking chain steps for: tx_manager.close_connection
            [INTERMEDIATE] Step 1: tx_manager.close_connection
      -> Resolved to: database_manager.TransactionManager.close_connection
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: tx_manager.close_connection
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      [SYMBOL_LOOKUP] Found tx_manager in function scope: database_manager.TransactionManager
      -> Not module state
      [NAME] Found name reference: tx_manager
        [CACHE] tx_manager -> database_manager.TransactionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.wrapper
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.wrapper
        Calls: 5
        Instantiations: 1
        State Access: 0
      [NAME] Found name reference: wrapper
      [SYMBOL_LOOKUP] Variable wrapper not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: decorator
      [SYMBOL_LOOKUP] Variable decorator not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.transaction_decorator
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.transaction_decorator
        Calls: 0
        Instantiations: 0
        State Access: 0
  [CLASS] Analyzing class: PropertyDecorator
    [CONTEXT] Entered class: decorators.PropertyDecorator
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.PropertyDecorator.__init__
    [CONTEXT] Entered function: decorators.PropertyDecorator.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'validator': 'Optional[Callable]', 'transformer': 'Optional[Callable]', 'cache': 'bool'}
        [ARG_TYPE] Processing type annotation for validator: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: validator -> typing.Optional
        [ARG_TYPE] RESOLVED validator : typing.Optional
        [ARG_TYPE] Processing type annotation for transformer: Optional
        [CACHE] Optional -> typing.Optional (cached)
      [SYMBOL_UPDATE] Function: transformer -> typing.Optional
        [ARG_TYPE] RESOLVED transformer : typing.Optional
        [ARG_TYPE] Processing type annotation for cache: bool
      [SYMBOL_LOOKUP] Variable bool not found in any scope
      [SYMBOL_UPDATE] Function: cache -> decorators.bool
        [ARG_TYPE] RESOLVED cache : decorators.bool
      [ATTRIBUTE] Found attribute access: self.validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: validator
      [SYMBOL_LOOKUP] Found validator in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found validator in function scope: typing.Optional
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.transformer
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: transformer
      [SYMBOL_LOOKUP] Found transformer in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found transformer in function scope: typing.Optional
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: cache
      [SYMBOL_LOOKUP] Found cache in function scope: decorators.bool
      [SYMBOL_LOOKUP] Found cache in function scope: decorators.bool
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_storage
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.PropertyDecorator.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.PropertyDecorator.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.PropertyDecorator.__call__
    [CONTEXT] Entered function: decorators.PropertyDecorator.__call__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Callable'}
        [ARG_TYPE] Processing type annotation for func: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: func -> typing.Callable
        [ARG_TYPE] RESOLVED func : typing.Callable
      [NESTED_FUNCTION] Analyzing nested function: getter
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Callable'}
        [ARG_TYPE] No type hint or recon data for instance
      [ATTRIBUTE] Found attribute access: self.cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: instance_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: id
      [SYMBOL_LOOKUP] Variable id not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.id
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for instance_id
      [NAME] Found name reference: instance_id
      [SYMBOL_LOOKUP] Variable instance_id not found in any scope
      -> Not module state
      [CALL] Found call: id
      [SYMBOL_LOOKUP] Variable id not found in any scope
      -> Resolved to: decorators.id
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: instance
      [SYMBOL_LOOKUP] Variable instance not found in any scope
      [NAME] Found name reference: id
      [SYMBOL_LOOKUP] Variable id not found in any scope
      -> Not module state
      [NAME] Found name reference: instance
      [SYMBOL_LOOKUP] Variable instance not found in any scope
      -> Not module state
      [NAME] Found name reference: instance_id
        [CACHE] instance_id -> decorators.instance_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_storage
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_storage
        [CACHE] self._cache_storage -> decorators.PropertyDecorator._cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: instance_id
        [CACHE] instance_id -> decorators.instance_id (cached)
      -> Not module state
      [ASSIGNMENT] Processing: value = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [TYPE_INFERENCE] Call resolved to: typing.Callable
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for value
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      -> Not module state
      [CALL] Found call: func
    [CACHE] func -> decorators.func (cached)
      -> Resolved to: decorators.func
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: instance
      [SYMBOL_LOOKUP] Variable instance not found in any scope
      [NAME] Found name reference: func
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: instance
        [CACHE] instance -> decorators.instance (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.transformer
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [ASSIGNMENT] Processing: value = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.transformer
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.PropertyDecorator.transformer
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for value
      [NAME] Found name reference: value
        [CACHE] value -> decorators.value (cached)
      -> Not module state
      [CALL] Found call: self.transformer
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.transformer
            [INTERMEDIATE] Step 1: self.transformer
      -> Resolved to: decorators.PropertyDecorator.transformer
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [ATTRIBUTE] Found attribute access: self.transformer
        [CACHE] self.transformer -> decorators.PropertyDecorator.transformer (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> decorators.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache
        [CACHE] self.cache -> decorators.PropertyDecorator.cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_storage
        [CACHE] self._cache_storage -> decorators.PropertyDecorator._cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [CALL] Found call: id
    [CACHE] id -> decorators.id (cached)
      -> Resolved to: decorators.id
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: instance
      [SYMBOL_LOOKUP] Variable instance not found in any scope
      [NAME] Found name reference: id
        [CACHE] id -> decorators.id (cached)
      -> Not module state
      [NAME] Found name reference: instance
        [CACHE] instance -> decorators.instance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> decorators.value (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> decorators.value (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NESTED_FUNCTION] Analyzing nested function: setter
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'func': 'Callable'}
        [ARG_TYPE] No type hint or recon data for instance
        [ARG_TYPE] No type hint or recon data for value
      [ATTRIBUTE] Found attribute access: self.validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [CALL] Found call: self.validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validator
            [INTERMEDIATE] Step 1: self.validator
      -> Resolved to: decorators.PropertyDecorator.validator
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [ATTRIBUTE] Found attribute access: self.validator
        [CACHE] self.validator -> decorators.PropertyDecorator.validator (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> decorators.value (cached)
      -> Not module state
      [CALL] Found call: ValueError
    [CACHE] ValueError -> decorators.ValueError (cached)
      -> Resolved to: decorators.ValueError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: ValueError
      [SYMBOL_LOOKUP] Variable ValueError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found func in function scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [ASSIGNMENT] Processing: instance_attr = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: instance_attr
      [SYMBOL_LOOKUP] Variable instance_attr not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: func.__name__
        [CACHE] func.__name__ -> typing.Callable.__name__ (cached)
      -> Not module state
      [NAME] Found name reference: func
        [CACHE] func -> typing.Callable (cached)
      -> Not module state
      [CALL] Found call: setattr
      [SYMBOL_LOOKUP] Variable setattr not found in any scope
      -> Resolved to: decorators.setattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: instance
      [SYMBOL_LOOKUP] Variable instance not found in any scope
        [FUNCTION_ARG] Checking argument: instance_attr
      [SYMBOL_LOOKUP] Variable instance_attr not found in any scope
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [NAME] Found name reference: setattr
      [SYMBOL_LOOKUP] Variable setattr not found in any scope
      -> Not module state
      [NAME] Found name reference: instance
        [CACHE] instance -> decorators.instance (cached)
      -> Not module state
      [NAME] Found name reference: instance_attr
        [CACHE] instance_attr -> decorators.instance_attr (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> decorators.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache
        [CACHE] self.cache -> decorators.PropertyDecorator.cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [ASSIGNMENT] Processing: instance_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: id
      [SYMBOL_LOOKUP] Variable id not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.id
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for instance_id
      [NAME] Found name reference: instance_id
        [CACHE] instance_id -> decorators.instance_id (cached)
      -> Not module state
      [CALL] Found call: id
    [CACHE] id -> decorators.id (cached)
      -> Resolved to: decorators.id
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: instance
      [SYMBOL_LOOKUP] Variable instance not found in any scope
      [NAME] Found name reference: id
        [CACHE] id -> decorators.id (cached)
      -> Not module state
      [NAME] Found name reference: instance
        [CACHE] instance -> decorators.instance (cached)
      -> Not module state
      [NAME] Found name reference: instance_id
        [CACHE] instance_id -> decorators.instance_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_storage
        [CACHE] self._cache_storage -> decorators.PropertyDecorator._cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_storage
        [CACHE] self._cache_storage -> decorators.PropertyDecorator._cache_storage (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> decorators.PropertyDecorator (cached)
      -> Not module state
      [NAME] Found name reference: instance_id
        [CACHE] instance_id -> decorators.instance_id (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [CALL] Found call: property
      [SYMBOL_LOOKUP] Variable property not found in any scope
      -> Resolved to: decorators.property
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: getter
      [SYMBOL_LOOKUP] Variable getter not found in any scope
        [FUNCTION_ARG] Checking argument: setter
      [SYMBOL_LOOKUP] Variable setter not found in any scope
      [NAME] Found name reference: property
      [SYMBOL_LOOKUP] Variable property not found in any scope
      -> Not module state
      [NAME] Found name reference: getter
      [SYMBOL_LOOKUP] Variable getter not found in any scope
      -> Not module state
      [NAME] Found name reference: setter
      [SYMBOL_LOOKUP] Variable setter not found in any scope
      -> Not module state
    [CONTEXT] Exited function: decorators.PropertyDecorator.__call__
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.PropertyDecorator.__call__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: decorators.PropertyDecorator
    [SYMBOL_TABLE] Exited class scope
  [FUNCTION] Analyzing function: complex_calculation
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.complex_calculation
    [DECORATOR] @trace(level='DEBUG', include_args=True, include_result=True)
    [DECORATOR] @monitor_performance(threshold_ms=500.0)
    [CONTEXT] Entered function: decorators.complex_calculation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'List[Dict[str, Any]]', 'multiplier': 'float'}
        [ARG_TYPE] Processing type annotation for data: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.List
        [ARG_TYPE] RESOLVED data : typing.List
        [ARG_TYPE] Processing type annotation for multiplier: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      [SYMBOL_UPDATE] Function: multiplier -> decorators.float
        [ARG_TYPE] RESOLVED multiplier : decorators.float
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [NAME] Found name reference: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.List
      [SYMBOL_LOOKUP] Found data in function scope: typing.List
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> decorators.item (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
      [CALL] Found call: item.get
      [SYMBOL_LOOKUP] Variable item not found in any scope
            [INTERMEDIATE] Tracking chain steps for: item.get
            [INTERMEDIATE] Step 1: item.get
      -> Resolved to: decorators.item.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: item.get
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> decorators.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> decorators.item (cached)
      -> Not module state
      [NAME] Found name reference: multiplier
      [SYMBOL_LOOKUP] Found multiplier in function scope: decorators.float
      [SYMBOL_LOOKUP] Found multiplier in function scope: decorators.float
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> decorators.result (cached)
      -> Not module state
    [CONTEXT] Exited function: decorators.complex_calculation
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.complex_calculation
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: admin_operation
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.admin_operation
    [DECORATOR] @validate_auth(required_role='admin')
    [DECORATOR] @rate_limit(calls=5, period=300)
    [DECORATOR] @ClassBasedDecorator({'log_calls': True, 'validate_args': True, 'transform_result': True})
    [CONTEXT] Entered function: decorators.admin_operation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'operation_type': 'str', 'parameters': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for operation_type: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: operation_type -> decorators.str
        [ARG_TYPE] RESOLVED operation_type : decorators.str
        [ARG_TYPE] Processing type annotation for parameters: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: parameters -> typing.Dict
        [ARG_TYPE] RESOLVED parameters : typing.Dict
      [ASSIGNMENT] Processing: admin_mgr = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: AdminManager
      [SYMBOL_LOOKUP] Variable AdminManager not found in any scope
      [TYPE_INFERENCE] Call resolved to: admin_manager.AdminManager
      [TYPE_INFERENCE] RESOLVED Inferred type: admin_manager.AdminManager (class instantiation)
      [SYMBOL_UPDATE] Function: admin_mgr -> admin_manager.AdminManager
        [ASSIGNMENT] RESOLVED Updated symbol table: admin_mgr = admin_manager.AdminManager
      [NAME] Found name reference: admin_mgr
      [SYMBOL_LOOKUP] Found admin_mgr in function scope: admin_manager.AdminManager
      [SYMBOL_LOOKUP] Found admin_mgr in function scope: admin_manager.AdminManager
      -> Not module state
      [CALL] Found call: AdminManager
      [SYMBOL_LOOKUP] Variable AdminManager not found in any scope
      -> Resolved to: admin_manager.AdminManager
      -> ADDED to instantiations
      [NAME] Found name reference: AdminManager
      [SYMBOL_LOOKUP] Variable AdminManager not found in any scope
      -> Not module state
      [CALL] Found call: admin_mgr.execute_operation
      [SYMBOL_LOOKUP] Found admin_mgr in function scope: admin_manager.AdminManager
      [SYMBOL_LOOKUP] Found admin_mgr in function scope: admin_manager.AdminManager
            [INTERMEDIATE] Tracking chain steps for: admin_mgr.execute_operation
            [INTERMEDIATE] Step 1: admin_mgr.execute_operation
      -> Resolved to: admin_manager.AdminManager.execute_operation
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: operation_type
      [SYMBOL_LOOKUP] Found operation_type in function scope: decorators.str
      [SYMBOL_LOOKUP] Found operation_type in function scope: decorators.str
        [FUNCTION_ARG] Checking argument: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: admin_mgr.execute_operation
      [SYMBOL_LOOKUP] Found admin_mgr in function scope: admin_manager.AdminManager
      [SYMBOL_LOOKUP] Found admin_mgr in function scope: admin_manager.AdminManager
      -> Not module state
      [NAME] Found name reference: admin_mgr
        [CACHE] admin_mgr -> admin_manager.AdminManager (cached)
      -> Not module state
      [NAME] Found name reference: operation_type
      [SYMBOL_LOOKUP] Found operation_type in function scope: decorators.str
      [SYMBOL_LOOKUP] Found operation_type in function scope: decorators.str
      -> Not module state
      [NAME] Found name reference: parameters
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found parameters in function scope: typing.Dict
      -> Not module state
    [CONTEXT] Exited function: decorators.admin_operation
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.admin_operation
        Calls: 1
        Instantiations: 1
        State Access: 0
      [ASSIGNMENT] Processing: performance_monitor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: create_custom_decorator
      [SYMBOL_LOOKUP] Variable create_custom_decorator not found in any scope
      [TYPE_INFERENCE] Call resolved to: decorators.create_custom_decorator
        [RETURN_TYPE_RESOLUTION] Resolving return type: Callable
        [RETURN_TYPE_RESOLUTION] Class 'Callable' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Callable
      [TYPE_INFERENCE] Could not resolve return type 'Callable' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Callable (from return type - unresolved)
      [SYMBOL_UPDATE] Function: performance_monitor -> Callable
        [ASSIGNMENT] RESOLVED Updated symbol table: performance_monitor = Callable
  [FUNCTION] Analyzing function: cached_expensive_operation
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.cached_expensive_operation
    [DECORATOR] @performance_monitor
    [DECORATOR] @advanced_cache(ttl=600, key_func=lambda x: f'cache_{hash(str(x))}')
    [CONTEXT] Entered function: decorators.cached_expensive_operation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'input_data': 'Any'}
        [ARG_TYPE] Processing type annotation for input_data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: input_data -> typing.Any
        [ARG_TYPE] RESOLVED input_data : typing.Any
      [CALL] Found call: time.sleep
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.sleep
            [INTERMEDIATE] Step 1: time.sleep
      -> Resolved to: time.sleep
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.sleep
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: input_data
      [SYMBOL_LOOKUP] Found input_data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found input_data in function scope: typing.Any
      -> Not module state
    [CONTEXT] Exited function: decorators.cached_expensive_operation
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.cached_expensive_operation
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: debug_function
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.debug_function
    [DECORATOR] @conditional_decorator(condition=lambda func: func.__name__.startswith('debug_'), decorator=trace(level='DEBUG'))
    [CONTEXT] Entered function: decorators.debug_function (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
    [CONTEXT] Exited function: decorators.debug_function
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.debug_function
        Calls: 0
        Instantiations: 0
        State Access: 0
  [FUNCTION] Analyzing function: multi_decorated_function
    [FUNCTION_ANALYSIS] Starting analysis of: decorators.multi_decorated_function
    [DECORATOR] @multi_decorator(trace(), monitor_performance(), rate_limit(calls=10, period=60))
    [CONTEXT] Entered function: decorators.multi_decorated_function (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'param': 'str'}
        [ARG_TYPE] Processing type annotation for param: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: param -> decorators.str
        [ARG_TYPE] RESOLVED param : decorators.str
      [NAME] Found name reference: param
      [SYMBOL_LOOKUP] Found param in function scope: decorators.str
      [SYMBOL_LOOKUP] Found param in function scope: decorators.str
      -> Not module state
    [CONTEXT] Exited function: decorators.multi_decorated_function
    [FUNCTION_ANALYSIS] Completed analysis of: decorators.multi_decorated_function
        Calls: 0
        Instantiations: 0
        State Access: 0
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing event_validator.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Callable -> typing.Callable
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] Protocol -> typing.Protocol
    [FROM_IMPORT] TypeVar -> typing.TypeVar
    [FROM_IMPORT] ABC -> abc.ABC
    [FROM_IMPORT] abstractmethod -> abc.abstractmethod
    [FROM_IMPORT] dataclass -> dataclasses.dataclass
    [FROM_IMPORT] field -> dataclasses.field
    [FROM_IMPORT] Enum -> enum.Enum
    [FROM_IMPORT] auto -> enum.auto
    [IMPORT] re -> re
    [IMPORT] time -> time
    [FROM_IMPORT] wraps -> functools.wraps
    [FROM_IMPORT] trace -> decorators.trace
    [FROM_IMPORT] monitor_performance -> decorators.monitor_performance
    [FROM_IMPORT] validate_auth -> decorators.validate_auth
    [MODULE_STATE] T = TypeVar('T')
  [CLASS] Analyzing class: ValidationLevel
    [CONTEXT] Entered class: event_validator.ValidationLevel
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: event_validator.ValidationLevel
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidationResult
    [CONTEXT] Entered class: event_validator.ValidationResult
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: event_validator.ValidationResult
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidationError
    [CONTEXT] Entered class: event_validator.ValidationError
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: event_validator.ValidationError
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidationReport
    [CONTEXT] Entered class: event_validator.ValidationReport
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationReport.is_valid
    [CONTEXT] Entered function: event_validator.ValidationReport.is_valid (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.result
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.CONDITIONALLY_VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationReport.is_valid
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationReport.is_valid
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationReport.has_errors
    [CONTEXT] Entered function: event_validator.ValidationReport.has_errors (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationReport.has_errors
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationReport.has_errors
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationReport.has_warnings
    [CONTEXT] Entered function: event_validator.ValidationReport.has_warnings (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.warnings
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationReport.has_warnings
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationReport.has_warnings
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationReport.get_error_codes
    [CONTEXT] Entered function: event_validator.ValidationReport.get_error_codes (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: error.code
      [SYMBOL_LOOKUP] Variable error not found in any scope
      -> Not module state
      [NAME] Found name reference: error
      [SYMBOL_LOOKUP] Variable error not found in any scope
      -> Not module state
      [NAME] Found name reference: error
        [CACHE] error -> event_validator.error (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationReport.get_error_codes
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationReport.get_error_codes
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationReport.add_error
    [CONTEXT] Entered function: event_validator.ValidationReport.add_error (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 7 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'field': 'str', 'message': 'str', 'code': 'str', 'level': 'ValidationLevel', 'context': 'Dict[str, Any]', 'suggestions': 'List[str]'}
        [ARG_TYPE] Processing type annotation for field: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: field -> event_validator.str
        [ARG_TYPE] RESOLVED field : event_validator.str
        [ARG_TYPE] Processing type annotation for message: str
        [CACHE] str -> event_validator.str (cached)
      [SYMBOL_UPDATE] Function: message -> event_validator.str
        [ARG_TYPE] RESOLVED message : event_validator.str
        [ARG_TYPE] Processing type annotation for code: str
        [CACHE] str -> event_validator.str (cached)
      [SYMBOL_UPDATE] Function: code -> event_validator.str
        [ARG_TYPE] RESOLVED code : event_validator.str
        [ARG_TYPE] Processing type annotation for level: ValidationLevel
      [SYMBOL_LOOKUP] Variable ValidationLevel not found in any scope
      [SYMBOL_UPDATE] Function: level -> event_validator.ValidationLevel
        [ARG_TYPE] RESOLVED level : event_validator.ValidationLevel
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
        [ARG_TYPE] Processing type annotation for suggestions: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: suggestions -> typing.List
        [ARG_TYPE] RESOLVED suggestions : typing.List
      [ASSIGNMENT] Processing: error = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationError
      [SYMBOL_LOOKUP] Variable ValidationError not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationError
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationError (class instantiation)
      [SYMBOL_UPDATE] Function: error -> event_validator.ValidationError
        [ASSIGNMENT] RESOLVED Updated symbol table: error = event_validator.ValidationError
      [NAME] Found name reference: error
      [SYMBOL_LOOKUP] Found error in function scope: event_validator.ValidationError
      [SYMBOL_LOOKUP] Found error in function scope: event_validator.ValidationError
      -> Not module state
      [CALL] Found call: ValidationError
      [SYMBOL_LOOKUP] Variable ValidationError not found in any scope
      -> Resolved to: event_validator.ValidationError
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationError
      [SYMBOL_LOOKUP] Variable ValidationError not found in any scope
      -> Not module state
      [NAME] Found name reference: field
      [SYMBOL_LOOKUP] Found field in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found field in function scope: event_validator.str
      -> Not module state
      [NAME] Found name reference: message
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      -> Not module state
      [NAME] Found name reference: level
      [SYMBOL_LOOKUP] Found level in function scope: event_validator.ValidationLevel
      [SYMBOL_LOOKUP] Found level in function scope: event_validator.ValidationLevel
      -> Not module state
      [NAME] Found name reference: code
      [SYMBOL_LOOKUP] Found code in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found code in function scope: event_validator.str
      -> Not module state
      [NAME] Found name reference: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: suggestions
      [SYMBOL_LOOKUP] Found suggestions in function scope: typing.List
      [SYMBOL_LOOKUP] Found suggestions in function scope: typing.List
      -> Not module state
      [NAME] Found name reference: level
        [CACHE] level -> event_validator.ValidationLevel (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationLevel.WARNING
      [SYMBOL_LOOKUP] Variable ValidationLevel not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationLevel
        [CACHE] ValidationLevel -> event_validator.ValidationLevel (cached)
      -> Not module state
      [CALL] Found call: self.warnings.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.warnings.append
            [INTERMEDIATE] Step 1: self.warnings
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.warnings
            [INTERMEDIATE] Step 2: self.warnings.append
      -> Resolved to: event_validator.ValidationReport.warnings.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: error
      [SYMBOL_LOOKUP] Found error in function scope: event_validator.ValidationError
      [SYMBOL_LOOKUP] Found error in function scope: event_validator.ValidationError
      [ATTRIBUTE] Found attribute access: self.warnings.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.warnings
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: error
        [CACHE] error -> event_validator.ValidationError (cached)
      -> Not module state
      [CALL] Found call: self.errors.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.errors.append
            [INTERMEDIATE] Step 1: self.errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.errors
            [INTERMEDIATE] Step 2: self.errors.append
      -> Resolved to: event_validator.ValidationReport.errors.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: error
      [SYMBOL_LOOKUP] Found error in function scope: event_validator.ValidationError
      [SYMBOL_LOOKUP] Found error in function scope: event_validator.ValidationError
      [ATTRIBUTE] Found attribute access: self.errors.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: error
        [CACHE] error -> event_validator.ValidationError (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationReport.add_error
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationReport.add_error
        Calls: 0
        Instantiations: 1
        State Access: 0
    [CONTEXT] Exited class: event_validator.ValidationReport
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidationRule
    [CONTEXT] Entered class: event_validator.ValidationRule
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRule.validate
    [CONTEXT] Entered function: event_validator.ValidationRule.validate (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
    [CONTEXT] Exited function: event_validator.ValidationRule.validate
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRule.validate
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRule.get_rule_name
    [CONTEXT] Entered function: event_validator.ValidationRule.get_rule_name (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
    [CONTEXT] Exited function: event_validator.ValidationRule.get_rule_name
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRule.get_rule_name
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: event_validator.ValidationRule
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: BaseValidationRule
    [CONTEXT] Entered class: event_validator.BaseValidationRule
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.BaseValidationRule.__init__
    [CONTEXT] Entered function: event_validator.BaseValidationRule.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'rule_name': 'str', 'description': 'str'}
        [ARG_TYPE] Processing type annotation for rule_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: rule_name -> event_validator.str
        [ARG_TYPE] RESOLVED rule_name : event_validator.str
        [ARG_TYPE] Processing type annotation for description: str
        [CACHE] str -> event_validator.str (cached)
      [SYMBOL_UPDATE] Function: description -> event_validator.str
        [ARG_TYPE] RESOLVED description : event_validator.str
      [ATTRIBUTE] Found attribute access: self.rule_name
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule_name
      [SYMBOL_LOOKUP] Found rule_name in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found rule_name in function scope: event_validator.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.description
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.BaseValidationRule (cached)
      -> Not module state
      [NAME] Found name reference: description
      [SYMBOL_LOOKUP] Found description in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found description in function scope: event_validator.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.BaseValidationRule (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.priority
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.BaseValidationRule (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.dependencies
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.BaseValidationRule (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.BaseValidationRule.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.BaseValidationRule.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.BaseValidationRule._validate_implementation
    [DECORATOR] @abstractmethod
    [CONTEXT] Entered function: event_validator.BaseValidationRule._validate_implementation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
    [CONTEXT] Exited function: event_validator.BaseValidationRule._validate_implementation
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.BaseValidationRule._validate_implementation
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.BaseValidationRule.validate
    [DECORATOR] @trace
    [CONTEXT] Entered function: event_validator.BaseValidationRule.validate (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [ASSIGNMENT] Processing: context = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: context
        [CACHE] context -> typing.Dict (cached)
      -> Not module state
      [ASSIGNMENT] Processing: start_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for start_time
      [NAME] Found name reference: start_time
      [SYMBOL_LOOKUP] Variable start_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._validate_implementation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.BaseValidationRule._validate_implementation
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationReport
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (from return type)
      [SYMBOL_UPDATE] Function: report -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: report = event_validator.ValidationReport
      [NAME] Found name reference: report
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [CALL] Found call: self._validate_implementation
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._validate_implementation
            [INTERMEDIATE] Step 1: self._validate_implementation
      -> Resolved to: event_validator.BaseValidationRule._validate_implementation
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._validate_implementation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: context
        [CACHE] context -> typing.Dict (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.validation_time
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> event_validator.start_time (cached)
      -> Not module state
      [CALL] Found call: report.rules_applied.append
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Tracking chain steps for: report.rules_applied.append
            [INTERMEDIATE] Step 1: report.rules_applied
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.rules_applied
            [INTERMEDIATE] Step 2: report.rules_applied.append
      -> Resolved to: event_validator.ValidationReport.rules_applied.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: report.rules_applied.append
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.rules_applied
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rule_name
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.BaseValidationRule (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (class instantiation)
      [SYMBOL_UPDATE] Function: report -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: report = event_validator.ValidationReport
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [CALL] Found call: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Resolved to: event_validator.ValidationReport
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [CALL] Found call: report.add_error
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rule_name
        [CACHE] self.rule_name -> event_validator.BaseValidationRule.rule_name (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.BaseValidationRule (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationLevel.CRITICAL
      [SYMBOL_LOOKUP] Variable ValidationLevel not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationLevel
      [SYMBOL_LOOKUP] Variable ValidationLevel not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.validation_time
        [CACHE] report.validation_time -> event_validator.ValidationReport.validation_time (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> event_validator.start_time (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.BaseValidationRule.validate
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.BaseValidationRule.validate
        Calls: 2
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.BaseValidationRule.get_rule_name
    [CONTEXT] Entered function: event_validator.BaseValidationRule.get_rule_name (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.rule_name
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: event_validator.BaseValidationRule.get_rule_name
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.BaseValidationRule.get_rule_name
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: event_validator.BaseValidationRule
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: RequiredFieldRule
    [CONTEXT] Entered class: event_validator.RequiredFieldRule
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.RequiredFieldRule.__init__
    [CONTEXT] Entered function: event_validator.RequiredFieldRule.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'required_fields': 'List[str]'}
        [ARG_TYPE] Processing type annotation for required_fields: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: required_fields -> typing.List
        [ARG_TYPE] RESOLVED required_fields : typing.List
      [CALL] Found call: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: event_validator.super.__init__
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Resolved to: event_validator.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.required_fields
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: required_fields
      [SYMBOL_LOOKUP] Found required_fields in function scope: typing.List
      [SYMBOL_LOOKUP] Found required_fields in function scope: typing.List
      -> Not module state
    [CONTEXT] Exited function: event_validator.RequiredFieldRule.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.RequiredFieldRule.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.RequiredFieldRule._validate_implementation
    [CONTEXT] Entered function: event_validator.RequiredFieldRule._validate_implementation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [ASSIGNMENT] Processing: report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (class instantiation)
      [SYMBOL_UPDATE] Function: report -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: report = event_validator.ValidationReport
      [NAME] Found name reference: report
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [CALL] Found call: ValidationReport
    [CACHE] ValidationReport -> event_validator.ValidationReport (cached)
      -> Resolved to: event_validator.ValidationReport
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
      [SYMBOL_LOOKUP] Variable field not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.required_fields
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
        [CACHE] report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
        [CACHE] ValidationResult.INVALID -> event_validator.ValidationResult.INVALID (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
        [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
        [CACHE] report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
        [CACHE] ValidationResult.INVALID -> event_validator.ValidationResult.INVALID (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
        [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.RequiredFieldRule._validate_implementation
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.RequiredFieldRule._validate_implementation
        Calls: 1
        Instantiations: 1
        State Access: 0
    [CONTEXT] Exited class: event_validator.RequiredFieldRule
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: DataTypeRule
    [CONTEXT] Entered class: event_validator.DataTypeRule
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.DataTypeRule.__init__
    [CONTEXT] Entered function: event_validator.DataTypeRule.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'field_types': 'Dict[str, Union[type, List[type]]]'}
        [ARG_TYPE] Processing type annotation for field_types: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: field_types -> typing.Dict
        [ARG_TYPE] RESOLVED field_types : typing.Dict
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> event_validator.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: event_validator.super.__init__
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> event_validator.super (cached)
      -> Resolved to: event_validator.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.field_types
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: field_types
      [SYMBOL_LOOKUP] Found field_types in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found field_types in function scope: typing.Dict
      -> Not module state
    [CONTEXT] Exited function: event_validator.DataTypeRule.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.DataTypeRule.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.DataTypeRule._validate_implementation
    [CONTEXT] Entered function: event_validator.DataTypeRule._validate_implementation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [ASSIGNMENT] Processing: report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (class instantiation)
      [SYMBOL_UPDATE] Function: report -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: report = event_validator.ValidationReport
      [NAME] Found name reference: report
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [CALL] Found call: ValidationReport
    [CACHE] ValidationReport -> event_validator.ValidationReport (cached)
      -> Resolved to: event_validator.ValidationReport
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
      [SYMBOL_LOOKUP] Variable field not found in any scope
      -> Not module state
      [NAME] Found name reference: expected_type
      [SYMBOL_LOOKUP] Variable expected_type not found in any scope
      -> Not module state
      [CALL] Found call: self.field_types.items
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.field_types.items
            [INTERMEDIATE] Step 1: self.field_types
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.DataTypeRule.field_types
            [INTERMEDIATE] Step 2: self.field_types.items
      -> Resolved to: event_validator.DataTypeRule.field_types.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.field_types.items
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.field_types
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ASSIGNMENT] Processing: value = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: expected_type
      [SYMBOL_LOOKUP] Variable expected_type not found in any scope
        [FUNCTION_ARG] Checking argument: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: expected_type
        [CACHE] expected_type -> event_validator.expected_type (cached)
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [CALL] Found call: any
      -> IGNORED (built-in function)
      [NAME] Found name reference: any
      [SYMBOL_LOOKUP] Variable any not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
        [FUNCTION_ARG] Checking argument: t
      [SYMBOL_LOOKUP] Variable t not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [NAME] Found name reference: t
      [SYMBOL_LOOKUP] Variable t not found in any scope
      -> Not module state
      [NAME] Found name reference: t
        [CACHE] t -> event_validator.t (cached)
      -> Not module state
      [NAME] Found name reference: expected_type
        [CACHE] expected_type -> event_validator.expected_type (cached)
      -> Not module state
      [ASSIGNMENT] Processing: type_names = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: type_names
      [SYMBOL_LOOKUP] Variable type_names not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: t.__name__
      [SYMBOL_LOOKUP] Variable t not found in any scope
      -> Not module state
      [NAME] Found name reference: t
        [CACHE] t -> event_validator.t (cached)
      -> Not module state
      [NAME] Found name reference: t
        [CACHE] t -> event_validator.t (cached)
      -> Not module state
      [NAME] Found name reference: expected_type
        [CACHE] expected_type -> event_validator.expected_type (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
        [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: type_names
        [CACHE] type_names -> event_validator.type_names (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: type.__name__
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Not module state
      [CALL] Found call: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Resolved to: event_validator.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [NAME] Found name reference: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationLevel.ERROR
      [SYMBOL_LOOKUP] Variable ValidationLevel not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationLevel
      [SYMBOL_LOOKUP] Variable ValidationLevel not found in any scope
      -> Not module state
      [NAME] Found name reference: type_names
        [CACHE] type_names -> event_validator.type_names (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: type.__name__
        [CACHE] type.__name__ -> event_validator.type.__name__ (cached)
      -> Not module state
      [CALL] Found call: type
    [CACHE] type -> event_validator.type (cached)
      -> Resolved to: event_validator.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [NAME] Found name reference: type
        [CACHE] type -> event_validator.type (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
        [CACHE] report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
        [CACHE] ValidationResult.INVALID -> event_validator.ValidationResult.INVALID (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
        [FUNCTION_ARG] Checking argument: expected_type
      [SYMBOL_LOOKUP] Variable expected_type not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [NAME] Found name reference: expected_type
        [CACHE] expected_type -> event_validator.expected_type (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
        [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: expected_type.__name__
      [SYMBOL_LOOKUP] Variable expected_type not found in any scope
      -> Not module state
      [NAME] Found name reference: expected_type
        [CACHE] expected_type -> event_validator.expected_type (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: type.__name__
        [CACHE] type.__name__ -> event_validator.type.__name__ (cached)
      -> Not module state
      [CALL] Found call: type
    [CACHE] type -> event_validator.type (cached)
      -> Resolved to: event_validator.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [NAME] Found name reference: type
        [CACHE] type -> event_validator.type (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationLevel.ERROR
        [CACHE] ValidationLevel.ERROR -> event_validator.ValidationLevel.ERROR (cached)
      -> Not module state
      [NAME] Found name reference: ValidationLevel
        [CACHE] ValidationLevel -> event_validator.ValidationLevel (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: expected_type.__name__
        [CACHE] expected_type.__name__ -> event_validator.expected_type.__name__ (cached)
      -> Not module state
      [NAME] Found name reference: expected_type
        [CACHE] expected_type -> event_validator.expected_type (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: type.__name__
        [CACHE] type.__name__ -> event_validator.type.__name__ (cached)
      -> Not module state
      [CALL] Found call: type
    [CACHE] type -> event_validator.type (cached)
      -> Resolved to: event_validator.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [NAME] Found name reference: type
        [CACHE] type -> event_validator.type (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
        [CACHE] report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
        [CACHE] ValidationResult.INVALID -> event_validator.ValidationResult.INVALID (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.DataTypeRule._validate_implementation
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.DataTypeRule._validate_implementation
        Calls: 1
        Instantiations: 1
        State Access: 0
    [CONTEXT] Exited class: event_validator.DataTypeRule
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: RegexValidationRule
    [CONTEXT] Entered class: event_validator.RegexValidationRule
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.RegexValidationRule.__init__
    [CONTEXT] Entered function: event_validator.RegexValidationRule.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'field_patterns': 'Dict[str, str]'}
        [ARG_TYPE] Processing type annotation for field_patterns: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: field_patterns -> typing.Dict
        [ARG_TYPE] RESOLVED field_patterns : typing.Dict
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> event_validator.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: event_validator.super.__init__
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> event_validator.super (cached)
      -> Resolved to: event_validator.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.field_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: field_patterns
      [SYMBOL_LOOKUP] Found field_patterns in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found field_patterns in function scope: typing.Dict
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.compiled_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.RegexValidationRule (cached)
      -> Not module state
      [NAME] Found name reference: field
      [SYMBOL_LOOKUP] Variable field not found in any scope
      -> Not module state
      [CALL] Found call: re.compile
      [SYMBOL_LOOKUP] Variable re not found in any scope
            [INTERMEDIATE] Tracking chain steps for: re.compile
            [INTERMEDIATE] Step 1: re.compile
      -> Resolved to: re.compile
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: pattern
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      [ATTRIBUTE] Found attribute access: re.compile
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [NAME] Found name reference: re
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [NAME] Found name reference: pattern
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: pattern
        [CACHE] pattern -> event_validator.pattern (cached)
      -> Not module state
      [CALL] Found call: field_patterns.items
      [SYMBOL_LOOKUP] Found field_patterns in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found field_patterns in function scope: typing.Dict
            [INTERMEDIATE] Tracking chain steps for: field_patterns.items
            [INTERMEDIATE] Step 1: field_patterns.items
      -> Resolved to: typing.Dict.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: field_patterns.items
      [SYMBOL_LOOKUP] Found field_patterns in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found field_patterns in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: field_patterns
        [CACHE] field_patterns -> typing.Dict (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.RegexValidationRule.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.RegexValidationRule.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.RegexValidationRule._validate_implementation
    [CONTEXT] Entered function: event_validator.RegexValidationRule._validate_implementation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [ASSIGNMENT] Processing: report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (class instantiation)
      [SYMBOL_UPDATE] Function: report -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: report = event_validator.ValidationReport
      [NAME] Found name reference: report
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [CALL] Found call: ValidationReport
    [CACHE] ValidationReport -> event_validator.ValidationReport (cached)
      -> Resolved to: event_validator.ValidationReport
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
      [SYMBOL_LOOKUP] Variable field not found in any scope
      -> Not module state
      [NAME] Found name reference: pattern
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      -> Not module state
      [CALL] Found call: self.compiled_patterns.items
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.compiled_patterns.items
            [INTERMEDIATE] Step 1: self.compiled_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.RegexValidationRule.compiled_patterns
            [INTERMEDIATE] Step 2: self.compiled_patterns.items
      -> Resolved to: event_validator.RegexValidationRule.compiled_patterns.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.compiled_patterns.items
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.compiled_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ASSIGNMENT] Processing: value = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Resolved to: event_validator.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
        [FUNCTION_ARG] Checking argument: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> event_validator.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [CALL] Found call: pattern.match
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
            [INTERMEDIATE] Tracking chain steps for: pattern.match
            [INTERMEDIATE] Step 1: pattern.match
      -> Resolved to: event_validator.pattern.match
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [ATTRIBUTE] Found attribute access: pattern.match
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      -> Not module state
      [NAME] Found name reference: pattern
        [CACHE] pattern -> event_validator.pattern (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [CALL] Found call: report.add_error
    [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
            [INTERMEDIATE] Tracking chain steps for: report.add_error
            [INTERMEDIATE] Step 1: report.add_error
      -> Resolved to: event_validator.ValidationReport.add_error
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: report.add_error
        [CACHE] report.add_error -> event_validator.ValidationReport.add_error (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.field_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.RegexValidationRule (cached)
      -> Not module state
      [NAME] Found name reference: field
        [CACHE] field -> dataclasses.field (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> event_validator.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: report.result
        [CACHE] report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
        [CACHE] ValidationResult.INVALID -> event_validator.ValidationResult.INVALID (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [NAME] Found name reference: report
        [CACHE] report -> event_validator.ValidationReport (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.RegexValidationRule._validate_implementation
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.RegexValidationRule._validate_implementation
        Calls: 1
        Instantiations: 1
        State Access: 0
    [CONTEXT] Exited class: event_validator.RegexValidationRule
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidationEngine
    [CONTEXT] Entered class: event_validator.ValidationEngine
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine.__init__
    [CONTEXT] Entered function: event_validator.ValidationEngine.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: BaseValidationRule
      [SYMBOL_LOOKUP] Variable BaseValidationRule not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.global_context
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [NAME] Found name reference: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine.add_rule
    [DECORATOR] @trace
    [CONTEXT] Entered function: event_validator.ValidationEngine.add_rule (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'rule': 'BaseValidationRule'}
        [ARG_TYPE] Processing type annotation for rule: BaseValidationRule
      [SYMBOL_LOOKUP] Variable BaseValidationRule not found in any scope
      [SYMBOL_UPDATE] Function: rule -> event_validator.BaseValidationRule
        [ARG_TYPE] RESOLVED rule : event_validator.BaseValidationRule
      [CALL] Found call: self.rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.rules.append
            [INTERMEDIATE] Step 1: self.rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.rules
            [INTERMEDIATE] Step 2: self.rules.append
      -> Resolved to: event_validator.ValidationEngine.rules.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.BaseValidationRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.BaseValidationRule
      [ATTRIBUTE] Found attribute access: self.rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.BaseValidationRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.BaseValidationRule
      -> Not module state
      [CALL] Found call: self.rules.sort
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.rules.sort
            [INTERMEDIATE] Step 1: self.rules
    [CACHE] self.rules -> event_validator.ValidationEngine.rules (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.rules
            [INTERMEDIATE] Step 2: self.rules.sort
      -> Resolved to: event_validator.ValidationEngine.rules.sort
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.rules.sort
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rules
        [CACHE] self.rules -> event_validator.ValidationEngine.rules (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: r.priority
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [NAME] Found name reference: r
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine.add_rule
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine.add_rule
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine.add_rules
    [CONTEXT] Entered function: event_validator.ValidationEngine.add_rules (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'rules': 'List[BaseValidationRule]'}
        [ARG_TYPE] Processing type annotation for rules: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: rules -> typing.List
        [ARG_TYPE] RESOLVED rules : typing.List
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Not module state
      [NAME] Found name reference: rules
      [SYMBOL_LOOKUP] Found rules in function scope: typing.List
      [SYMBOL_LOOKUP] Found rules in function scope: typing.List
      -> Not module state
      [CALL] Found call: self.add_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.add_rule
            [INTERMEDIATE] Step 1: self.add_rule
      -> Resolved to: event_validator.ValidationEngine.add_rule
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      [ATTRIBUTE] Found attribute access: self.add_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.rule (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine.add_rules
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine.add_rules
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine.set_global_context
    [CONTEXT] Entered function: event_validator.ValidationEngine.set_global_context (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [CALL] Found call: self.global_context.update
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.global_context.update
            [INTERMEDIATE] Step 1: self.global_context
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.global_context
            [INTERMEDIATE] Step 2: self.global_context.update
      -> Resolved to: event_validator.ValidationEngine.global_context.update
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self.global_context.update
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.global_context
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine.set_global_context
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine.set_global_context
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine.validate
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: event_validator.ValidationEngine.validate (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [ASSIGNMENT] Processing: full_context = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: full_context
      [SYMBOL_LOOKUP] Variable full_context not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.global_context
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._generate_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationEngine._generate_cache_key
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Function: cache_key -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: cache_key = str
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Found cache_key in function scope: str
      [SYMBOL_LOOKUP] Found cache_key in function scope: str
      -> Not module state
      [CALL] Found call: self._generate_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._generate_cache_key
            [INTERMEDIATE] Step 1: self._generate_cache_key
      -> Resolved to: event_validator.ValidationEngine._generate_cache_key
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: full_context
      [SYMBOL_LOOKUP] Variable full_context not found in any scope
      [ATTRIBUTE] Found attribute access: self._generate_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: full_context
        [CACHE] full_context -> event_validator.full_context (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cached_report = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cached_report
      [SYMBOL_LOOKUP] Variable cached_report not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
        [CACHE] self.validation_cache -> event_validator.ValidationEngine.validation_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: cached_report.metadata
      [SYMBOL_LOOKUP] Variable cached_report not found in any scope
      -> Not module state
      [NAME] Found name reference: cached_report
        [CACHE] cached_report -> event_validator.cached_report (cached)
      -> Not module state
      [NAME] Found name reference: cached_report
        [CACHE] cached_report -> event_validator.cached_report (cached)
      -> Not module state
      [ASSIGNMENT] Processing: comprehensive_report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (class instantiation)
      [SYMBOL_UPDATE] Function: comprehensive_report -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: comprehensive_report = event_validator.ValidationReport
      [NAME] Found name reference: comprehensive_report
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      -> Not module state
      [CALL] Found call: ValidationReport
    [CACHE] ValidationReport -> event_validator.ValidationReport (cached)
      -> Resolved to: event_validator.ValidationReport
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: start_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for start_time
      [NAME] Found name reference: start_time
      [SYMBOL_LOOKUP] Variable start_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: rule.enabled
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.rule (cached)
      -> Not module state
      [ASSIGNMENT] Processing: rule_report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: rule.validate
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.rule.validate
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for rule_report
      [NAME] Found name reference: rule_report
      [SYMBOL_LOOKUP] Variable rule_report not found in any scope
      -> Not module state
      [CALL] Found call: rule.validate
      [SYMBOL_LOOKUP] Variable rule not found in any scope
            [INTERMEDIATE] Tracking chain steps for: rule.validate
            [INTERMEDIATE] Step 1: rule.validate
      -> Resolved to: event_validator.rule.validate
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: full_context
      [SYMBOL_LOOKUP] Variable full_context not found in any scope
      [ATTRIBUTE] Found attribute access: rule.validate
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.rule (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: full_context
        [CACHE] full_context -> event_validator.full_context (cached)
      -> Not module state
      [CALL] Found call: self._merge_reports
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._merge_reports
            [INTERMEDIATE] Step 1: self._merge_reports
      -> Resolved to: event_validator.ValidationEngine._merge_reports
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: comprehensive_report
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
        [FUNCTION_ARG] Checking argument: rule_report
      [SYMBOL_LOOKUP] Variable rule_report not found in any scope
      [ATTRIBUTE] Found attribute access: self._merge_reports
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: comprehensive_report
        [CACHE] comprehensive_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: rule_report
        [CACHE] rule_report -> event_validator.rule_report (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: comprehensive_report.validation_time
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: comprehensive_report
        [CACHE] comprehensive_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> event_validator.start_time (cached)
      -> Not module state
      [CALL] Found call: comprehensive_report.metadata.update
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Tracking chain steps for: comprehensive_report.metadata.update
            [INTERMEDIATE] Step 1: comprehensive_report.metadata
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.metadata
            [INTERMEDIATE] Step 2: comprehensive_report.metadata.update
      -> Resolved to: event_validator.ValidationReport.metadata.update
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: comprehensive_report.metadata.update
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      -> Not module state
      [ATTRIBUTE] Found attribute access: comprehensive_report.metadata
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found comprehensive_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: comprehensive_report
        [CACHE] comprehensive_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rules
        [CACHE] self.rules -> event_validator.ValidationEngine.rules (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      -> Not module state
      [NAME] Found name reference: r
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rules
        [CACHE] self.rules -> event_validator.ValidationEngine.rules (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: r.enabled
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [NAME] Found name reference: r
        [CACHE] r -> event_validator.r (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: comprehensive_report.validation_time
        [CACHE] comprehensive_report.validation_time -> event_validator.ValidationReport.validation_time (cached)
      -> Not module state
      [NAME] Found name reference: comprehensive_report
        [CACHE] comprehensive_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_enabled
        [CACHE] self.cache_enabled -> event_validator.ValidationEngine.cache_enabled (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
        [CACHE] self.validation_cache -> event_validator.ValidationEngine.validation_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> str (cached)
      -> Not module state
      [NAME] Found name reference: comprehensive_report
        [CACHE] comprehensive_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [NAME] Found name reference: comprehensive_report
        [CACHE] comprehensive_report -> event_validator.ValidationReport (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine.validate
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine.validate
        Calls: 2
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine._generate_cache_key
    [CONTEXT] Entered function: event_validator.ValidationEngine._generate_cache_key (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any', 'context': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
        [ARG_TYPE] Processing type annotation for context: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: context -> typing.Dict
        [ARG_TYPE] RESOLVED context : typing.Dict
      [ASSIGNMENT] Processing: data_hash = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.hash
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for data_hash
      [NAME] Found name reference: data_hash
      [SYMBOL_LOOKUP] Variable data_hash not found in any scope
      -> Not module state
      [CALL] Found call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Resolved to: event_validator.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [ASSIGNMENT] Processing: context_hash = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.hash
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for context_hash
      [NAME] Found name reference: context_hash
      [SYMBOL_LOOKUP] Variable context_hash not found in any scope
      -> Not module state
      [CALL] Found call: hash
    [CACHE] hash -> event_validator.hash (cached)
      -> Resolved to: event_validator.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
        [CACHE] hash -> event_validator.hash (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [CALL] Found call: sorted
      -> IGNORED (built-in function)
      [NAME] Found name reference: sorted
      [SYMBOL_LOOKUP] Variable sorted not found in any scope
      -> Not module state
      [CALL] Found call: context.items
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
            [INTERMEDIATE] Tracking chain steps for: context.items
            [INTERMEDIATE] Step 1: context.items
      -> Resolved to: typing.Dict.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: context.items
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: context
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found context in function scope: typing.Dict
      -> Not module state
      [ASSIGNMENT] Processing: rules_hash = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.hash
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for rules_hash
      [NAME] Found name reference: rules_hash
      [SYMBOL_LOOKUP] Variable rules_hash not found in any scope
      -> Not module state
      [CALL] Found call: hash
    [CACHE] hash -> event_validator.hash (cached)
      -> Resolved to: event_validator.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
        [CACHE] hash -> event_validator.hash (cached)
      -> Not module state
      [CALL] Found call: tuple
      -> IGNORED (built-in function)
      [NAME] Found name reference: tuple
      [SYMBOL_LOOKUP] Variable tuple not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: r.rule_name
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [NAME] Found name reference: r
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [NAME] Found name reference: r
        [CACHE] r -> event_validator.r (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: r.enabled
      [SYMBOL_LOOKUP] Variable r not found in any scope
      -> Not module state
      [NAME] Found name reference: r
        [CACHE] r -> event_validator.r (cached)
      -> Not module state
      [NAME] Found name reference: data_hash
        [CACHE] data_hash -> event_validator.data_hash (cached)
      -> Not module state
      [NAME] Found name reference: context_hash
        [CACHE] context_hash -> event_validator.context_hash (cached)
      -> Not module state
      [NAME] Found name reference: rules_hash
        [CACHE] rules_hash -> event_validator.rules_hash (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine._generate_cache_key
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine._generate_cache_key
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine._merge_reports
    [CONTEXT] Entered function: event_validator.ValidationEngine._merge_reports (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'main_report': 'ValidationReport', 'rule_report': 'ValidationReport'}
        [ARG_TYPE] Processing type annotation for main_report: ValidationReport
      [SYMBOL_LOOKUP] Variable ValidationReport not found in any scope
      [SYMBOL_UPDATE] Function: main_report -> event_validator.ValidationReport
        [ARG_TYPE] RESOLVED main_report : event_validator.ValidationReport
        [ARG_TYPE] Processing type annotation for rule_report: ValidationReport
        [CACHE] ValidationReport -> event_validator.ValidationReport (cached)
      [SYMBOL_UPDATE] Function: rule_report -> event_validator.ValidationReport
        [ARG_TYPE] RESOLVED rule_report : event_validator.ValidationReport
      [CALL] Found call: main_report.errors.extend
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Tracking chain steps for: main_report.errors.extend
            [INTERMEDIATE] Step 1: main_report.errors
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.errors
            [INTERMEDIATE] Step 2: main_report.errors.extend
      -> Resolved to: event_validator.ValidationReport.errors.extend
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: main_report.errors.extend
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [ATTRIBUTE] Found attribute access: main_report.errors
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: main_report
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [ATTRIBUTE] Found attribute access: rule_report.errors
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: rule_report
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      -> Not module state
      [CALL] Found call: main_report.warnings.extend
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Tracking chain steps for: main_report.warnings.extend
            [INTERMEDIATE] Step 1: main_report.warnings
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.warnings
            [INTERMEDIATE] Step 2: main_report.warnings.extend
      -> Resolved to: event_validator.ValidationReport.warnings.extend
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: main_report.warnings.extend
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [ATTRIBUTE] Found attribute access: main_report.warnings
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: main_report
        [CACHE] main_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: rule_report.warnings
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: rule_report
        [CACHE] rule_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [CALL] Found call: main_report.rules_applied.extend
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Tracking chain steps for: main_report.rules_applied.extend
            [INTERMEDIATE] Step 1: main_report.rules_applied
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationReport.rules_applied
            [INTERMEDIATE] Step 2: main_report.rules_applied.extend
      -> Resolved to: event_validator.ValidationReport.rules_applied.extend
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: main_report.rules_applied.extend
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [ATTRIBUTE] Found attribute access: main_report.rules_applied
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: main_report
        [CACHE] main_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: rule_report.rules_applied
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: rule_report
        [CACHE] rule_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: rule_report.result
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found rule_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: rule_report
        [CACHE] rule_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: main_report.result
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      [SYMBOL_LOOKUP] Found main_report in function scope: event_validator.ValidationReport
      -> Not module state
      [NAME] Found name reference: main_report
        [CACHE] main_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.INVALID
        [CACHE] ValidationResult.INVALID -> event_validator.ValidationResult.INVALID (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: rule_report.result
        [CACHE] rule_report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: rule_report
        [CACHE] rule_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.REQUIRES_REVIEW
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: main_report.result
        [CACHE] main_report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: main_report
        [CACHE] main_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.VALID
      [SYMBOL_LOOKUP] Variable ValidationResult not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: main_report.result
        [CACHE] main_report.result -> event_validator.ValidationReport.result (cached)
      -> Not module state
      [NAME] Found name reference: main_report
        [CACHE] main_report -> event_validator.ValidationReport (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: ValidationResult.REQUIRES_REVIEW
        [CACHE] ValidationResult.REQUIRES_REVIEW -> event_validator.ValidationResult.REQUIRES_REVIEW (cached)
      -> Not module state
      [NAME] Found name reference: ValidationResult
        [CACHE] ValidationResult -> event_validator.ValidationResult (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine._merge_reports
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine._merge_reports
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationEngine.create_rule_builder
    [CONTEXT] Entered function: event_validator.ValidationEngine.create_rule_builder (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: ValidationRuleBuilder
      [SYMBOL_LOOKUP] Variable ValidationRuleBuilder not found in any scope
      -> Resolved to: event_validator.ValidationRuleBuilder
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [NAME] Found name reference: ValidationRuleBuilder
      [SYMBOL_LOOKUP] Variable ValidationRuleBuilder not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationEngine.create_rule_builder
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationEngine.create_rule_builder
        Calls: 0
        Instantiations: 1
        State Access: 0
    [CONTEXT] Exited class: event_validator.ValidationEngine
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidationRuleBuilder
    [CONTEXT] Entered class: event_validator.ValidationRuleBuilder
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRuleBuilder.__init__
    [CONTEXT] Entered function: event_validator.ValidationRuleBuilder.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'engine': 'ValidationEngine'}
        [ARG_TYPE] Processing type annotation for engine: ValidationEngine
      [SYMBOL_LOOKUP] Variable ValidationEngine not found in any scope
      [SYMBOL_UPDATE] Function: engine -> event_validator.ValidationEngine
        [ARG_TYPE] RESOLVED engine : event_validator.ValidationEngine
      [ATTRIBUTE] Found attribute access: self.engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: engine
      [SYMBOL_LOOKUP] Found engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found engine in function scope: event_validator.ValidationEngine
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: BaseValidationRule
      [SYMBOL_LOOKUP] Variable BaseValidationRule not found in any scope
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationRuleBuilder.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRuleBuilder.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRuleBuilder.require_fields
    [CONTEXT] Entered function: event_validator.ValidationRuleBuilder.require_fields (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: rule = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: RequiredFieldRule
      [SYMBOL_LOOKUP] Variable RequiredFieldRule not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.RequiredFieldRule
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.RequiredFieldRule (class instantiation)
      [SYMBOL_UPDATE] Function: rule -> event_validator.RequiredFieldRule
        [ASSIGNMENT] RESOLVED Updated symbol table: rule = event_validator.RequiredFieldRule
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RequiredFieldRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RequiredFieldRule
      -> Not module state
      [CALL] Found call: RequiredFieldRule
      [SYMBOL_LOOKUP] Variable RequiredFieldRule not found in any scope
      -> Resolved to: event_validator.RequiredFieldRule
      -> ADDED to instantiations
      [NAME] Found name reference: RequiredFieldRule
      [SYMBOL_LOOKUP] Variable RequiredFieldRule not found in any scope
      -> Not module state
      [CALL] Found call: list
      -> IGNORED (built-in function)
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [NAME] Found name reference: fields
      [SYMBOL_LOOKUP] Variable fields not found in any scope
      -> Not module state
      [CALL] Found call: self.current_rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.current_rules.append
            [INTERMEDIATE] Step 1: self.current_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationRuleBuilder.current_rules
            [INTERMEDIATE] Step 2: self.current_rules.append
      -> Resolved to: event_validator.ValidationRuleBuilder.current_rules.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RequiredFieldRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RequiredFieldRule
      [ATTRIBUTE] Found attribute access: self.current_rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.RequiredFieldRule (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationRuleBuilder.require_fields
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRuleBuilder.require_fields
        Calls: 0
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRuleBuilder.field_types
    [CONTEXT] Entered function: event_validator.ValidationRuleBuilder.field_types (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: rule = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: DataTypeRule
      [SYMBOL_LOOKUP] Variable DataTypeRule not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.DataTypeRule
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.DataTypeRule (class instantiation)
      [SYMBOL_UPDATE] Function: rule -> event_validator.DataTypeRule
        [ASSIGNMENT] RESOLVED Updated symbol table: rule = event_validator.DataTypeRule
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.DataTypeRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.DataTypeRule
      -> Not module state
      [CALL] Found call: DataTypeRule
      [SYMBOL_LOOKUP] Variable DataTypeRule not found in any scope
      -> Resolved to: event_validator.DataTypeRule
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: field_types
      [SYMBOL_LOOKUP] Variable field_types not found in any scope
      [NAME] Found name reference: DataTypeRule
      [SYMBOL_LOOKUP] Variable DataTypeRule not found in any scope
      -> Not module state
      [NAME] Found name reference: field_types
      [SYMBOL_LOOKUP] Variable field_types not found in any scope
      -> Not module state
      [CALL] Found call: self.current_rules.append
    [CACHE] self.current_rules.append -> event_validator.ValidationRuleBuilder.current_rules.append (cached)
            [INTERMEDIATE] Tracking chain steps for: self.current_rules.append
            [INTERMEDIATE] Step 1: self.current_rules
    [CACHE] self.current_rules -> event_validator.ValidationRuleBuilder.current_rules (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationRuleBuilder.current_rules
            [INTERMEDIATE] Step 2: self.current_rules.append
      -> Resolved to: event_validator.ValidationRuleBuilder.current_rules.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.DataTypeRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.DataTypeRule
      [ATTRIBUTE] Found attribute access: self.current_rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.DataTypeRule (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationRuleBuilder.field_types
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRuleBuilder.field_types
        Calls: 0
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRuleBuilder.field_patterns
    [CONTEXT] Entered function: event_validator.ValidationRuleBuilder.field_patterns (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: rule = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: RegexValidationRule
      [SYMBOL_LOOKUP] Variable RegexValidationRule not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.RegexValidationRule
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.RegexValidationRule (class instantiation)
      [SYMBOL_UPDATE] Function: rule -> event_validator.RegexValidationRule
        [ASSIGNMENT] RESOLVED Updated symbol table: rule = event_validator.RegexValidationRule
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RegexValidationRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RegexValidationRule
      -> Not module state
      [CALL] Found call: RegexValidationRule
      [SYMBOL_LOOKUP] Variable RegexValidationRule not found in any scope
      -> Resolved to: event_validator.RegexValidationRule
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: field_patterns
      [SYMBOL_LOOKUP] Variable field_patterns not found in any scope
      [NAME] Found name reference: RegexValidationRule
      [SYMBOL_LOOKUP] Variable RegexValidationRule not found in any scope
      -> Not module state
      [NAME] Found name reference: field_patterns
      [SYMBOL_LOOKUP] Variable field_patterns not found in any scope
      -> Not module state
      [CALL] Found call: self.current_rules.append
    [CACHE] self.current_rules.append -> event_validator.ValidationRuleBuilder.current_rules.append (cached)
            [INTERMEDIATE] Tracking chain steps for: self.current_rules.append
            [INTERMEDIATE] Step 1: self.current_rules
    [CACHE] self.current_rules -> event_validator.ValidationRuleBuilder.current_rules (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationRuleBuilder.current_rules
            [INTERMEDIATE] Step 2: self.current_rules.append
      -> Resolved to: event_validator.ValidationRuleBuilder.current_rules.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: rule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RegexValidationRule
      [SYMBOL_LOOKUP] Found rule in function scope: event_validator.RegexValidationRule
      [ATTRIBUTE] Found attribute access: self.current_rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.RegexValidationRule (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationRuleBuilder.field_patterns
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRuleBuilder.field_patterns
        Calls: 0
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.ValidationRuleBuilder.build
    [CONTEXT] Entered function: event_validator.ValidationRuleBuilder.build (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: self.engine.add_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.engine.add_rule
            [INTERMEDIATE] Step 1: self.engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationRuleBuilder.engine
            [INTERMEDIATE] Step 2: self.engine.add_rule
      -> Resolved to: event_validator.ValidationRuleBuilder.engine.add_rule
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      [ATTRIBUTE] Found attribute access: self.engine.add_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
      [NAME] Found name reference: rule
        [CACHE] rule -> event_validator.rule (cached)
      -> Not module state
      [CALL] Found call: self.current_rules.clear
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.current_rules.clear
            [INTERMEDIATE] Step 1: self.current_rules
    [CACHE] self.current_rules -> event_validator.ValidationRuleBuilder.current_rules (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationRuleBuilder.current_rules
            [INTERMEDIATE] Step 2: self.current_rules.clear
      -> Resolved to: event_validator.ValidationRuleBuilder.current_rules.clear
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.current_rules.clear
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_rules
        [CACHE] self.current_rules -> event_validator.ValidationRuleBuilder.current_rules (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.engine
        [CACHE] self.engine -> event_validator.ValidationRuleBuilder.engine (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.ValidationRuleBuilder (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.ValidationRuleBuilder.build
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.ValidationRuleBuilder.build
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: event_validator.ValidationRuleBuilder
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: EventValidator
    [CONTEXT] Entered class: event_validator.EventValidator
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.EventValidator.__init__
    [CONTEXT] Entered function: event_validator.EventValidator.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.validation_engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: ValidationEngine
      [SYMBOL_LOOKUP] Variable ValidationEngine not found in any scope
      -> Resolved to: event_validator.ValidationEngine
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationEngine
      [SYMBOL_LOOKUP] Variable ValidationEngine not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_schemas
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: ValidationEngine
        [CACHE] ValidationEngine -> event_validator.ValidationEngine (cached)
      -> Not module state
      [CALL] Found call: self._setup_default_validations
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._setup_default_validations
            [INTERMEDIATE] Step 1: self._setup_default_validations
      -> Resolved to: event_validator.EventValidator._setup_default_validations
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._setup_default_validations
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.EventValidator.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.EventValidator.__init__
        Calls: 1
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.EventValidator._setup_default_validations
    [CONTEXT] Entered function: event_validator.EventValidator._setup_default_validations (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: self.validation_engine.create_rule_builder.require_fields.field_types.build
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_engine.create_rule_builder.require_fields.field_types.build
            [INTERMEDIATE] Step 1: self.validation_engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.EventValidator.validation_engine
            [INTERMEDIATE] Step 2: self.validation_engine.create_rule_builder
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 2 resolved to: event_validator.EventValidator.validation_engine.create_rule_builder
            [INTERMEDIATE] Step 3: self.validation_engine.create_rule_builder.require_fields
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 3 resolved to: event_validator.EventValidator.validation_engine.create_rule_builder.require_fields
            [INTERMEDIATE] Step 4: self.validation_engine.create_rule_builder.require_fields.field_types
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 4 resolved to: event_validator.EventValidator.validation_engine.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 5: self.validation_engine.create_rule_builder.require_fields.field_types.build
      -> Resolved to: event_validator.EventValidator.validation_engine.create_rule_builder.require_fields.field_types.build
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_engine.create_rule_builder.require_fields.field_types.build
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: self.validation_engine.create_rule_builder.require_fields.field_types
    [CACHE] self.validation_engine.create_rule_builder.require_fields.field_types -> event_validator.EventValidator.validation_engine.create_rule_builder.require_fields.field_types (cached)
            [INTERMEDIATE] Tracking chain steps for: self.validation_engine.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 1: self.validation_engine
    [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.EventValidator.validation_engine
            [INTERMEDIATE] Step 2: self.validation_engine.create_rule_builder
    [CACHE] self.validation_engine.create_rule_builder -> event_validator.EventValidator.validation_engine.create_rule_builder (cached)
            [INTERMEDIATE] Step 2 resolved to: event_validator.EventValidator.validation_engine.create_rule_builder
            [INTERMEDIATE] Step 3: self.validation_engine.create_rule_builder.require_fields
    [CACHE] self.validation_engine.create_rule_builder.require_fields -> event_validator.EventValidator.validation_engine.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Step 3 resolved to: event_validator.EventValidator.validation_engine.create_rule_builder.require_fields
            [INTERMEDIATE] Step 4: self.validation_engine.create_rule_builder.require_fields.field_types
      -> Resolved to: event_validator.EventValidator.validation_engine.create_rule_builder.require_fields.field_types
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_engine.create_rule_builder.require_fields.field_types
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: self.validation_engine.create_rule_builder.require_fields
    [CACHE] self.validation_engine.create_rule_builder.require_fields -> event_validator.EventValidator.validation_engine.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Tracking chain steps for: self.validation_engine.create_rule_builder.require_fields
            [INTERMEDIATE] Step 1: self.validation_engine
    [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.EventValidator.validation_engine
            [INTERMEDIATE] Step 2: self.validation_engine.create_rule_builder
    [CACHE] self.validation_engine.create_rule_builder -> event_validator.EventValidator.validation_engine.create_rule_builder (cached)
            [INTERMEDIATE] Step 2 resolved to: event_validator.EventValidator.validation_engine.create_rule_builder
            [INTERMEDIATE] Step 3: self.validation_engine.create_rule_builder.require_fields
      -> Resolved to: event_validator.EventValidator.validation_engine.create_rule_builder.require_fields
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_engine.create_rule_builder.require_fields
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: self.validation_engine.create_rule_builder
    [CACHE] self.validation_engine.create_rule_builder -> event_validator.EventValidator.validation_engine.create_rule_builder (cached)
            [INTERMEDIATE] Tracking chain steps for: self.validation_engine.create_rule_builder
            [INTERMEDIATE] Step 1: self.validation_engine
    [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.EventValidator.validation_engine
            [INTERMEDIATE] Step 2: self.validation_engine.create_rule_builder
      -> Resolved to: event_validator.EventValidator.validation_engine.create_rule_builder
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_engine.create_rule_builder
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: message_engine = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationEngine
      [SYMBOL_LOOKUP] Variable ValidationEngine not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationEngine
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationEngine (class instantiation)
      [SYMBOL_UPDATE] Function: message_engine -> event_validator.ValidationEngine
        [ASSIGNMENT] RESOLVED Updated symbol table: message_engine = event_validator.ValidationEngine
      [NAME] Found name reference: message_engine
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationEngine
      -> Not module state
      [CALL] Found call: ValidationEngine
    [CACHE] ValidationEngine -> event_validator.ValidationEngine (cached)
      -> Resolved to: event_validator.ValidationEngine
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationEngine
      [SYMBOL_LOOKUP] Variable ValidationEngine not found in any scope
      -> Not module state
      [CALL] Found call: message_engine.create_rule_builder.require_fields.field_types.field_patterns.build
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationEngine
            [INTERMEDIATE] Tracking chain steps for: message_engine.create_rule_builder.require_fields.field_types.field_patterns.build
            [INTERMEDIATE] Step 1: message_engine.create_rule_builder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationEngine
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
            [INTERMEDIATE] ADDED intermediate call: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: message_engine.create_rule_builder.require_fields
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
            [INTERMEDIATE] Step 3: message_engine.create_rule_builder.require_fields.field_types
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 3 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 4: message_engine.create_rule_builder.require_fields.field_types.field_patterns
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 4 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types.field_patterns
            [INTERMEDIATE] Step 5: message_engine.create_rule_builder.require_fields.field_types.field_patterns.build
      -> Resolved to: event_validator.ValidationEngine.create_rule_builder.require_fields.field_types.field_patterns.build
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: message_engine.create_rule_builder.require_fields.field_types.field_patterns.build
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: message_engine.create_rule_builder.require_fields.field_types.field_patterns
    [CACHE] message_engine.create_rule_builder.require_fields.field_types.field_patterns -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types.field_patterns (cached)
            [INTERMEDIATE] Tracking chain steps for: message_engine.create_rule_builder.require_fields.field_types.field_patterns
            [INTERMEDIATE] Step 1: message_engine.create_rule_builder
    [CACHE] message_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: message_engine.create_rule_builder.require_fields
    [CACHE] message_engine.create_rule_builder.require_fields -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Step 2 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
            [INTERMEDIATE] Step 3: message_engine.create_rule_builder.require_fields.field_types
    [CACHE] message_engine.create_rule_builder.require_fields.field_types -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types (cached)
            [INTERMEDIATE] Step 3 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 4: message_engine.create_rule_builder.require_fields.field_types.field_patterns
      -> Resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types.field_patterns
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: message_engine.create_rule_builder.require_fields.field_types.field_patterns
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: message_engine.create_rule_builder.require_fields.field_types
    [CACHE] message_engine.create_rule_builder.require_fields.field_types -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types (cached)
            [INTERMEDIATE] Tracking chain steps for: message_engine.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 1: message_engine.create_rule_builder
    [CACHE] message_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: message_engine.create_rule_builder.require_fields
    [CACHE] message_engine.create_rule_builder.require_fields -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Step 2 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
            [INTERMEDIATE] Step 3: message_engine.create_rule_builder.require_fields.field_types
      -> Resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: message_engine.create_rule_builder.require_fields.field_types
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: message_engine.create_rule_builder.require_fields
    [CACHE] message_engine.create_rule_builder.require_fields -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Tracking chain steps for: message_engine.create_rule_builder.require_fields
            [INTERMEDIATE] Step 1: message_engine.create_rule_builder
    [CACHE] message_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: message_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: message_engine.create_rule_builder.require_fields
      -> Resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: message_engine.create_rule_builder.require_fields
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: message_engine.create_rule_builder
    [CACHE] message_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Tracking chain steps for: message_engine.create_rule_builder
            [INTERMEDIATE] Step 1: message_engine.create_rule_builder
      -> Resolved to: event_validator.ValidationEngine.create_rule_builder
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: message_engine.create_rule_builder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found message_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [NAME] Found name reference: message_engine
        [CACHE] message_engine -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_schemas
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [NAME] Found name reference: message_engine
        [CACHE] message_engine -> event_validator.ValidationEngine (cached)
      -> Not module state
      [ASSIGNMENT] Processing: room_engine = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ValidationEngine
      [SYMBOL_LOOKUP] Variable ValidationEngine not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.ValidationEngine
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationEngine (class instantiation)
      [SYMBOL_UPDATE] Function: room_engine -> event_validator.ValidationEngine
        [ASSIGNMENT] RESOLVED Updated symbol table: room_engine = event_validator.ValidationEngine
      [NAME] Found name reference: room_engine
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationEngine
      -> Not module state
      [CALL] Found call: ValidationEngine
    [CACHE] ValidationEngine -> event_validator.ValidationEngine (cached)
      -> Resolved to: event_validator.ValidationEngine
      -> ADDED to instantiations
      [NAME] Found name reference: ValidationEngine
        [CACHE] ValidationEngine -> event_validator.ValidationEngine (cached)
      -> Not module state
      [CALL] Found call: room_engine.create_rule_builder.require_fields.field_types.field_patterns.build
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationEngine
            [INTERMEDIATE] Tracking chain steps for: room_engine.create_rule_builder.require_fields.field_types.field_patterns.build
            [INTERMEDIATE] Step 1: room_engine.create_rule_builder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationEngine
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationEngine
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: room_engine.create_rule_builder.require_fields
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
            [INTERMEDIATE] Step 3: room_engine.create_rule_builder.require_fields.field_types
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 3 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 4: room_engine.create_rule_builder.require_fields.field_types.field_patterns
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 4 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types.field_patterns
            [INTERMEDIATE] Step 5: room_engine.create_rule_builder.require_fields.field_types.field_patterns.build
      -> Resolved to: event_validator.ValidationEngine.create_rule_builder.require_fields.field_types.field_patterns.build
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: room_engine.create_rule_builder.require_fields.field_types.field_patterns.build
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: room_engine.create_rule_builder.require_fields.field_types.field_patterns
    [CACHE] room_engine.create_rule_builder.require_fields.field_types.field_patterns -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types.field_patterns (cached)
            [INTERMEDIATE] Tracking chain steps for: room_engine.create_rule_builder.require_fields.field_types.field_patterns
            [INTERMEDIATE] Step 1: room_engine.create_rule_builder
    [CACHE] room_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: room_engine.create_rule_builder.require_fields
    [CACHE] room_engine.create_rule_builder.require_fields -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Step 2 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
            [INTERMEDIATE] Step 3: room_engine.create_rule_builder.require_fields.field_types
    [CACHE] room_engine.create_rule_builder.require_fields.field_types -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types (cached)
            [INTERMEDIATE] Step 3 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 4: room_engine.create_rule_builder.require_fields.field_types.field_patterns
      -> Resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types.field_patterns
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: room_engine.create_rule_builder.require_fields.field_types.field_patterns
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: room_engine.create_rule_builder.require_fields.field_types
    [CACHE] room_engine.create_rule_builder.require_fields.field_types -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types (cached)
            [INTERMEDIATE] Tracking chain steps for: room_engine.create_rule_builder.require_fields.field_types
            [INTERMEDIATE] Step 1: room_engine.create_rule_builder
    [CACHE] room_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: room_engine.create_rule_builder.require_fields
    [CACHE] room_engine.create_rule_builder.require_fields -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Step 2 resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
            [INTERMEDIATE] Step 3: room_engine.create_rule_builder.require_fields.field_types
      -> Resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields.field_types
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: room_engine.create_rule_builder.require_fields.field_types
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: room_engine.create_rule_builder.require_fields
    [CACHE] room_engine.create_rule_builder.require_fields -> event_validator.ValidationRuleBuilder.create_rule_builder.require_fields (cached)
            [INTERMEDIATE] Tracking chain steps for: room_engine.create_rule_builder.require_fields
            [INTERMEDIATE] Step 1: room_engine.create_rule_builder
    [CACHE] room_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.ValidationEngine.create_rule_builder
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationRuleBuilder
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationRuleBuilder
      [SYMBOL_UPDATE] Function: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Updated context: room_engine -> event_validator.ValidationRuleBuilder
            [INTERMEDIATE] Step 2: room_engine.create_rule_builder.require_fields
      -> Resolved to: event_validator.ValidationRuleBuilder.create_rule_builder.require_fields
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: room_engine.create_rule_builder.require_fields
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [CALL] Found call: room_engine.create_rule_builder
    [CACHE] room_engine.create_rule_builder -> event_validator.ValidationEngine.create_rule_builder (cached)
            [INTERMEDIATE] Tracking chain steps for: room_engine.create_rule_builder
            [INTERMEDIATE] Step 1: room_engine.create_rule_builder
      -> Resolved to: event_validator.ValidationEngine.create_rule_builder
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: room_engine.create_rule_builder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      [SYMBOL_LOOKUP] Found room_engine in function scope: event_validator.ValidationRuleBuilder
      -> Not module state
      [NAME] Found name reference: room_engine
        [CACHE] room_engine -> event_validator.ValidationEngine (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_schemas
        [CACHE] self.event_schemas -> event_validator.EventValidator.event_schemas (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [NAME] Found name reference: room_engine
        [CACHE] room_engine -> event_validator.ValidationEngine (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.EventValidator._setup_default_validations
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.EventValidator._setup_default_validations
        Calls: 1
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.EventValidator.validate_event
    [DECORATOR] @trace
    [CONTEXT] Entered function: event_validator.EventValidator.validate_event (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_data': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for event_data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: event_data -> typing.Dict
        [ARG_TYPE] RESOLVED event_data : typing.Dict
      [ASSIGNMENT] Processing: base_report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.validation_engine.validate
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.EventValidator.validation_engine.validate
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for base_report
      [NAME] Found name reference: base_report
      [SYMBOL_LOOKUP] Variable base_report not found in any scope
      -> Not module state
      [CALL] Found call: self.validation_engine.validate
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_engine.validate
            [INTERMEDIATE] Step 1: self.validation_engine
    [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.EventValidator.validation_engine
            [INTERMEDIATE] Step 2: self.validation_engine.validate
      -> Resolved to: event_validator.EventValidator.validation_engine.validate
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: event_data
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self.validation_engine.validate
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: event_data
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      -> Not module state
      [CALL] Found call: base_report.is_valid
      [SYMBOL_LOOKUP] Variable base_report not found in any scope
            [INTERMEDIATE] Tracking chain steps for: base_report.is_valid
            [INTERMEDIATE] Step 1: base_report.is_valid
      -> Resolved to: event_validator.base_report.is_valid
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: base_report.is_valid
      [SYMBOL_LOOKUP] Variable base_report not found in any scope
      -> Not module state
      [NAME] Found name reference: base_report
        [CACHE] base_report -> event_validator.base_report (cached)
      -> Not module state
      [NAME] Found name reference: base_report
        [CACHE] base_report -> event_validator.base_report (cached)
      -> Not module state
      [ASSIGNMENT] Processing: event_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: event_data.get
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for event_type
      [NAME] Found name reference: event_type
      [SYMBOL_LOOKUP] Variable event_type not found in any scope
      -> Not module state
      [CALL] Found call: event_data.get
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
            [INTERMEDIATE] Tracking chain steps for: event_data.get
            [INTERMEDIATE] Step 1: event_data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: event_data.get
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: event_data
        [CACHE] event_data -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: event_type
        [CACHE] event_type -> event_validator.event_type (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_schemas
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [ASSIGNMENT] Processing: type_engine = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: type_engine
      [SYMBOL_LOOKUP] Variable type_engine not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_schemas
        [CACHE] self.event_schemas -> event_validator.EventValidator.event_schemas (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [NAME] Found name reference: event_type
        [CACHE] event_type -> event_validator.event_type (cached)
      -> Not module state
      [ASSIGNMENT] Processing: type_report = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: type_engine.validate
      [SYMBOL_LOOKUP] Variable type_engine not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.type_engine.validate
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for type_report
      [NAME] Found name reference: type_report
      [SYMBOL_LOOKUP] Variable type_report not found in any scope
      -> Not module state
      [CALL] Found call: type_engine.validate
      [SYMBOL_LOOKUP] Variable type_engine not found in any scope
            [INTERMEDIATE] Tracking chain steps for: type_engine.validate
            [INTERMEDIATE] Step 1: type_engine.validate
      -> Resolved to: event_validator.type_engine.validate
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: type_engine.validate
      [SYMBOL_LOOKUP] Variable type_engine not found in any scope
      -> Not module state
      [NAME] Found name reference: type_engine
        [CACHE] type_engine -> event_validator.type_engine (cached)
      -> Not module state
      [CALL] Found call: event_data.get
    [CACHE] event_data.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: event_data.get
            [INTERMEDIATE] Step 1: event_data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: event_data.get
        [CACHE] event_data.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: event_data
        [CACHE] event_data -> typing.Dict (cached)
      -> Not module state
      [CALL] Found call: self.validation_engine._merge_reports
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_engine._merge_reports
            [INTERMEDIATE] Step 1: self.validation_engine
    [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
            [INTERMEDIATE] Step 1 resolved to: event_validator.EventValidator.validation_engine
            [INTERMEDIATE] Step 2: self.validation_engine._merge_reports
      -> Resolved to: event_validator.EventValidator.validation_engine._merge_reports
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: base_report
      [SYMBOL_LOOKUP] Variable base_report not found in any scope
        [FUNCTION_ARG] Checking argument: type_report
      [SYMBOL_LOOKUP] Variable type_report not found in any scope
      [ATTRIBUTE] Found attribute access: self.validation_engine._merge_reports
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine
        [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [NAME] Found name reference: base_report
        [CACHE] base_report -> event_validator.base_report (cached)
      -> Not module state
      [NAME] Found name reference: type_report
        [CACHE] type_report -> event_validator.type_report (cached)
      -> Not module state
      [NAME] Found name reference: base_report
        [CACHE] base_report -> event_validator.base_report (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.EventValidator.validate_event
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.EventValidator.validate_event
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.EventValidator.validate_result
    [CONTEXT] Entered function: event_validator.EventValidator.validate_result (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'result': 'Any'}
        [ARG_TYPE] Processing type annotation for result: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: result -> typing.Any
        [ARG_TYPE] RESOLVED result : typing.Any
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: typing.Any
      [SYMBOL_LOOKUP] Found result in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.EventValidator.validate_result
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.EventValidator.validate_result
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.EventValidator.get_validation_details
    [CONTEXT] Entered function: event_validator.EventValidator.get_validation_details (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine.rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> event_validator.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_schemas
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> event_validator.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine.validation_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_engine
        [CACHE] self.validation_engine -> event_validator.EventValidator.validation_engine (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.EventValidator (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.EventValidator.get_validation_details
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.EventValidator.get_validation_details
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: event_validator.EventValidator
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: MessageValidator
    [CONTEXT] Entered class: event_validator.MessageValidator
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.MessageValidator.__init__
    [CONTEXT] Entered function: event_validator.MessageValidator.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.content_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: bool
      [SYMBOL_LOOKUP] Variable bool not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.banned_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: re.Pattern
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [NAME] Found name reference: re
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> event_validator.str (cached)
      -> Not module state
      [NAME] Found name reference: bool
        [CACHE] bool -> event_validator.bool (cached)
      -> Not module state
      [CALL] Found call: self._setup_default_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._setup_default_filters
            [INTERMEDIATE] Step 1: self._setup_default_filters
      -> Resolved to: event_validator.MessageValidator._setup_default_filters
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._setup_default_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.MessageValidator.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.MessageValidator.__init__
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.MessageValidator._setup_default_filters
    [CONTEXT] Entered function: event_validator.MessageValidator._setup_default_filters (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: self.content_filters.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.content_filters.append
            [INTERMEDIATE] Step 1: self.content_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.MessageValidator.content_filters
            [INTERMEDIATE] Step 2: self.content_filters.append
      -> Resolved to: event_validator.MessageValidator.content_filters.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.content_filters.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.content_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [CALL] Found call: msg.strip
      [SYMBOL_LOOKUP] Variable msg not found in any scope
            [INTERMEDIATE] Tracking chain steps for: msg.strip
            [INTERMEDIATE] Step 1: msg.strip
      -> Resolved to: event_validator.msg.strip
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: msg.strip
      [SYMBOL_LOOKUP] Variable msg not found in any scope
      -> Not module state
      [NAME] Found name reference: msg
      [SYMBOL_LOOKUP] Variable msg not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: banned_words = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: banned_words
      [SYMBOL_LOOKUP] Variable banned_words not found in any scope
      -> Not module state
      [NAME] Found name reference: word
      [SYMBOL_LOOKUP] Variable word not found in any scope
      -> Not module state
      [NAME] Found name reference: banned_words
        [CACHE] banned_words -> event_validator.banned_words (cached)
      -> Not module state
      [ASSIGNMENT] Processing: pattern = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: re.compile
      [SYMBOL_LOOKUP] Variable re not found in any scope
      [TYPE_INFERENCE] Call resolved to: re.compile
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for pattern
      [NAME] Found name reference: pattern
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      -> Not module state
      [CALL] Found call: re.compile
    [CACHE] re.compile -> re.compile (cached)
            [INTERMEDIATE] Tracking chain steps for: re.compile
            [INTERMEDIATE] Step 1: re.compile
      -> Resolved to: re.compile
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: re.compile
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [NAME] Found name reference: re
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [CALL] Found call: re.escape
      [SYMBOL_LOOKUP] Variable re not found in any scope
            [INTERMEDIATE] Tracking chain steps for: re.escape
            [INTERMEDIATE] Step 1: re.escape
      -> Resolved to: re.escape
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: word
      [SYMBOL_LOOKUP] Variable word not found in any scope
      [ATTRIBUTE] Found attribute access: re.escape
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [NAME] Found name reference: re
        [CACHE] re -> re (cached)
      -> Not module state
      [NAME] Found name reference: word
        [CACHE] word -> event_validator.word (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: re.IGNORECASE
      [SYMBOL_LOOKUP] Variable re not found in any scope
      -> Not module state
      [NAME] Found name reference: re
        [CACHE] re -> re (cached)
      -> Not module state
      [CALL] Found call: self.banned_patterns.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.banned_patterns.append
            [INTERMEDIATE] Step 1: self.banned_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: event_validator.MessageValidator.banned_patterns
            [INTERMEDIATE] Step 2: self.banned_patterns.append
      -> Resolved to: event_validator.MessageValidator.banned_patterns.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: pattern
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      [ATTRIBUTE] Found attribute access: self.banned_patterns.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.banned_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: pattern
        [CACHE] pattern -> event_validator.pattern (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.MessageValidator._setup_default_filters
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.MessageValidator._setup_default_filters
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.MessageValidator.validate_message
    [DECORATOR] @trace
    [CONTEXT] Entered function: event_validator.MessageValidator.validate_message (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'message': 'str'}
        [ARG_TYPE] Processing type annotation for message: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: message -> event_validator.str
        [ARG_TYPE] RESOLVED message : event_validator.str
      [ASSIGNMENT] Processing: message_hash = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.hash
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for message_hash
      [NAME] Found name reference: message_hash
      [SYMBOL_LOOKUP] Variable message_hash not found in any scope
      -> Not module state
      [CALL] Found call: hash
    [CACHE] hash -> event_validator.hash (cached)
      -> Resolved to: event_validator.hash
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: message
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [NAME] Found name reference: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Not module state
      [NAME] Found name reference: message
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      -> Not module state
      [NAME] Found name reference: message_hash
        [CACHE] message_hash -> event_validator.message_hash (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
        [CACHE] self.validation_cache -> event_validator.MessageValidator.validation_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: message_hash
        [CACHE] message_hash -> event_validator.message_hash (cached)
      -> Not module state
      [NAME] Found name reference: filter_func
      [SYMBOL_LOOKUP] Variable filter_func not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.content_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [CALL] Found call: filter_func
      [SYMBOL_LOOKUP] Variable filter_func not found in any scope
      -> Resolved to: event_validator.filter_func
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: message
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [NAME] Found name reference: filter_func
        [CACHE] filter_func -> event_validator.filter_func (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> event_validator.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
        [CACHE] self.validation_cache -> event_validator.MessageValidator.validation_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: message_hash
        [CACHE] message_hash -> event_validator.message_hash (cached)
      -> Not module state
      [NAME] Found name reference: pattern
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.banned_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [CALL] Found call: pattern.search
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
            [INTERMEDIATE] Tracking chain steps for: pattern.search
            [INTERMEDIATE] Step 1: pattern.search
      -> Resolved to: event_validator.pattern.search
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: message
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message in function scope: event_validator.str
      [ATTRIBUTE] Found attribute access: pattern.search
      [SYMBOL_LOOKUP] Variable pattern not found in any scope
      -> Not module state
      [NAME] Found name reference: pattern
        [CACHE] pattern -> event_validator.pattern (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> event_validator.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
        [CACHE] self.validation_cache -> event_validator.MessageValidator.validation_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: message_hash
        [CACHE] message_hash -> event_validator.message_hash (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
        [CACHE] self.validation_cache -> event_validator.MessageValidator.validation_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [NAME] Found name reference: message_hash
        [CACHE] message_hash -> event_validator.message_hash (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.MessageValidator.validate_message
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.MessageValidator.validate_message
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.MessageValidator.get_validation_details
    [CONTEXT] Entered function: event_validator.MessageValidator.get_validation_details (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.content_filters
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> event_validator.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.banned_patterns
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> event_validator.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> event_validator.MessageValidator (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.MessageValidator.get_validation_details
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.MessageValidator.get_validation_details
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: event_validator.MessageValidator
    [SYMBOL_TABLE] Exited class scope
      [ASSIGNMENT] Processing: event_validator = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: EventValidator
      [SYMBOL_LOOKUP] Variable EventValidator not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.EventValidator
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.EventValidator (class instantiation)
      [SYMBOL_UPDATE] Function: event_validator -> event_validator.EventValidator
        [ASSIGNMENT] RESOLVED Updated symbol table: event_validator = event_validator.EventValidator
      [ASSIGNMENT] Processing: message_validator = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: MessageValidator
      [SYMBOL_LOOKUP] Variable MessageValidator not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.MessageValidator
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.MessageValidator (class instantiation)
      [SYMBOL_UPDATE] Function: message_validator -> event_validator.MessageValidator
        [ASSIGNMENT] RESOLVED Updated symbol table: message_validator = event_validator.MessageValidator
      [ASSIGNMENT] Processing: test_event_data = ...
        [ASSIGNMENT] Non-call assignment
      [ASSIGNMENT] Processing: event_validation_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: event_validator.validate_event
      [SYMBOL_LOOKUP] Found event_validator in function scope: event_validator.EventValidator
      [SYMBOL_LOOKUP] Found event_validator in function scope: event_validator.EventValidator
      [TYPE_INFERENCE] Call resolved to: event_validator.EventValidator.validate_event
        [RETURN_TYPE_RESOLUTION] Resolving return type: ValidationReport
        [RETURN_TYPE_RESOLUTION] Found in current module: event_validator.ValidationReport
      [TYPE_INFERENCE] RESOLVED Inferred type: event_validator.ValidationReport (from return type)
      [SYMBOL_UPDATE] Function: event_validation_result -> event_validator.ValidationReport
        [ASSIGNMENT] RESOLVED Updated symbol table: event_validation_result = event_validator.ValidationReport
      [ASSIGNMENT] Processing: message_validation_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: message_validator.validate_message
      [SYMBOL_LOOKUP] Found message_validator in function scope: event_validator.MessageValidator
      [SYMBOL_LOOKUP] Found message_validator in function scope: event_validator.MessageValidator
      [TYPE_INFERENCE] Call resolved to: event_validator.MessageValidator.validate_message
        [RETURN_TYPE_RESOLUTION] Resolving return type: bool
        [RETURN_TYPE_RESOLUTION] Class 'bool' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: bool
      [TYPE_INFERENCE] Could not resolve return type 'bool' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: bool (from return type - unresolved)
      [SYMBOL_UPDATE] Function: message_validation_result -> bool
        [ASSIGNMENT] RESOLVED Updated symbol table: message_validation_result = bool
  [FUNCTION] Analyzing function: validate_complete_action
    [FUNCTION_ANALYSIS] Starting analysis of: event_validator.validate_complete_action
    [CONTEXT] Entered function: event_validator.validate_complete_action (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_data': 'Dict[str, Any]', 'message_content': 'str'}
        [ARG_TYPE] Processing type annotation for event_data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: event_data -> typing.Dict
        [ARG_TYPE] RESOLVED event_data : typing.Dict
        [ARG_TYPE] Processing type annotation for message_content: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: message_content -> event_validator.str
        [ARG_TYPE] RESOLVED message_content : event_validator.str
      [ASSIGNMENT] Processing: results = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: results
      [SYMBOL_LOOKUP] Variable results not found in any scope
      -> Not module state
      [NAME] Found name reference: results
        [CACHE] results -> event_validator.results (cached)
      -> Not module state
      [CALL] Found call: event_validator.validate_event
      [SYMBOL_LOOKUP] Variable event_validator not found in any scope
            [INTERMEDIATE] Tracking chain steps for: event_validator.validate_event
            [INTERMEDIATE] Step 1: event_validator.validate_event
      -> Resolved to: event_validator.event_validator.validate_event
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: event_data
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: event_validator.validate_event
      [SYMBOL_LOOKUP] Variable event_validator not found in any scope
      -> Not module state
      [NAME] Found name reference: event_validator
      [SYMBOL_LOOKUP] Variable event_validator not found in any scope
      -> Resolved to state: event_validator.event_validator
      [SYMBOL_LOOKUP] Variable event_validator not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: event_data
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found event_data in function scope: typing.Dict
      -> Not module state
      [ASSIGNMENT] Processing: message_valid = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: message_validator.validate_message
      [SYMBOL_LOOKUP] Variable message_validator not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.message_validator.validate_message
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for message_valid
      [NAME] Found name reference: message_valid
      [SYMBOL_LOOKUP] Variable message_valid not found in any scope
      -> Not module state
      [CALL] Found call: message_validator.validate_message
      [SYMBOL_LOOKUP] Variable message_validator not found in any scope
            [INTERMEDIATE] Tracking chain steps for: message_validator.validate_message
            [INTERMEDIATE] Step 1: message_validator.validate_message
      -> Resolved to: event_validator.message_validator.validate_message
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: message_content
      [SYMBOL_LOOKUP] Found message_content in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message_content in function scope: event_validator.str
      [ATTRIBUTE] Found attribute access: message_validator.validate_message
      [SYMBOL_LOOKUP] Variable message_validator not found in any scope
      -> Not module state
      [NAME] Found name reference: message_validator
      [SYMBOL_LOOKUP] Variable message_validator not found in any scope
      -> Resolved to state: event_validator.message_validator
      [SYMBOL_LOOKUP] Variable message_validator not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: message_content
      [SYMBOL_LOOKUP] Found message_content in function scope: event_validator.str
      [SYMBOL_LOOKUP] Found message_content in function scope: event_validator.str
      -> Not module state
      [NAME] Found name reference: results
        [CACHE] results -> event_validator.results (cached)
      -> Not module state
      [NAME] Found name reference: message_valid
        [CACHE] message_valid -> event_validator.message_valid (cached)
      -> Not module state
      [NAME] Found name reference: results
        [CACHE] results -> event_validator.results (cached)
      -> Not module state
    [CONTEXT] Exited function: event_validator.validate_complete_action
    [FUNCTION_ANALYSIS] Completed analysis of: event_validator.validate_complete_action
        Calls: 0
        Instantiations: 0
        State Access: 2
      [ASSIGNMENT] Processing: complete_validation = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: validate_complete_action
      [SYMBOL_LOOKUP] Variable validate_complete_action not found in any scope
      [TYPE_INFERENCE] Call resolved to: event_validator.validate_complete_action
        [RETURN_TYPE_RESOLUTION] Resolving return type: Dict[str, Any]
        [RETURN_TYPE_RESOLUTION] Class 'Dict[str, Any]' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Dict[str, Any]
      [TYPE_INFERENCE] Could not resolve return type 'Dict[str, Any]' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Dict[str, Any] (from return type - unresolved)
      [SYMBOL_UPDATE] Function: complete_validation -> Dict[str, Any]
        [ASSIGNMENT] RESOLVED Updated symbol table: complete_validation = Dict[str, Any]
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing inheritence_complex.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] Protocol -> typing.Protocol
    [FROM_IMPORT] TypeVar -> typing.TypeVar
    [FROM_IMPORT] Generic -> typing.Generic
    [FROM_IMPORT] ABC -> abc.ABC
    [FROM_IMPORT] abstractmethod -> abc.abstractmethod
    [IMPORT] asyncio -> asyncio
    [FROM_IMPORT] dataclass -> dataclasses.dataclass
    [FROM_IMPORT] field -> dataclasses.field
    [FROM_IMPORT] Enum -> enum.Enum
    [FROM_IMPORT] auto -> enum.auto
    [FROM_IMPORT] contextmanager -> contextlib.contextmanager
    [FROM_IMPORT] trace -> decorators.trace
    [FROM_IMPORT] monitor_performance -> decorators.monitor_performance
    [FROM_IMPORT] validate_auth -> decorators.validate_auth
    [FROM_IMPORT] BaseProxy -> proxy_handler.BaseProxy
    [FROM_IMPORT] DataProxy -> proxy_handler.DataProxy
    [FROM_IMPORT] SessionManager -> session_manager.SessionManager
    [MODULE_STATE] T = TypeVar('T')
    [MODULE_STATE] U = TypeVar('U')
  [CLASS] Analyzing class: Priority
    [CONTEXT] Entered class: inheritence_complex.Priority
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: inheritence_complex.Priority
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ProcessingResult
    [CONTEXT] Entered class: inheritence_complex.ProcessingResult
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: inheritence_complex.ProcessingResult
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: AbstractProcessor
    [CONTEXT] Entered class: inheritence_complex.AbstractProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AbstractProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.AbstractProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_id': 'str'}
        [ARG_TYPE] Processing type annotation for processor_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: processor_id -> inheritence_complex.str
        [ARG_TYPE] RESOLVED processor_id : inheritence_complex.str
      [ATTRIBUTE] Found attribute access: self.processor_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processed_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AbstractProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AbstractProcessor (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AbstractProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AbstractProcessor.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AbstractProcessor.process_data
    [DECORATOR] @abstractmethod
    [CONTEXT] Entered function: inheritence_complex.AbstractProcessor.process_data (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
    [CONTEXT] Exited function: inheritence_complex.AbstractProcessor.process_data
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AbstractProcessor.process_data
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AbstractProcessor.validate_input
    [DECORATOR] @abstractmethod
    [CONTEXT] Entered function: inheritence_complex.AbstractProcessor.validate_input (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
    [CONTEXT] Exited function: inheritence_complex.AbstractProcessor.validate_input
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AbstractProcessor.validate_input
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AbstractProcessor.get_statistics
    [CONTEXT] Entered function: inheritence_complex.AbstractProcessor.get_statistics (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.processed_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AbstractProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processed_count
        [CACHE] self.processed_count -> inheritence_complex.AbstractProcessor.processed_count (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AbstractProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
        [CACHE] self.error_count -> inheritence_complex.AbstractProcessor.error_count (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AbstractProcessor (cached)
      -> Not module state
      [CALL] Found call: max
      -> IGNORED (built-in function)
      [NAME] Found name reference: max
      [SYMBOL_LOOKUP] Variable max not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processed_count
        [CACHE] self.processed_count -> inheritence_complex.AbstractProcessor.processed_count (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AbstractProcessor (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AbstractProcessor.get_statistics
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AbstractProcessor.get_statistics
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AbstractProcessor.log_operation
    [DECORATOR] @trace
    [CONTEXT] Entered function: inheritence_complex.AbstractProcessor.log_operation (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'operation': 'str', 'details': 'Optional[Dict[str, Any]]'}
        [ARG_TYPE] Processing type annotation for operation: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: operation -> inheritence_complex.str
        [ARG_TYPE] RESOLVED operation : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for details: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: details -> typing.Optional
        [ARG_TYPE] RESOLVED details : typing.Optional
      [CALL] Found call: print
      -> IGNORED (built-in function)
      [NAME] Found name reference: print
      [SYMBOL_LOOKUP] Variable print not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processor_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: operation
      [SYMBOL_LOOKUP] Found operation in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found operation in function scope: inheritence_complex.str
      -> Not module state
      [NAME] Found name reference: details
      [SYMBOL_LOOKUP] Found details in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found details in function scope: typing.Optional
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AbstractProcessor.log_operation
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AbstractProcessor.log_operation
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.AbstractProcessor
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: AsyncProcessor
    [CONTEXT] Entered class: inheritence_complex.AsyncProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AsyncProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.AsyncProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_id': 'str'}
        [ARG_TYPE] Processing type annotation for processor_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: processor_id -> inheritence_complex.str
        [ARG_TYPE] RESOLVED processor_id : inheritence_complex.str
      [CALL] Found call: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.async_queue
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.batch_size
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AsyncProcessor (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AsyncProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AsyncProcessor.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
      [ASSIGNMENT] Processing: results = ...
        [ASSIGNMENT] Non-call assignment
      [ASSIGNMENT] Processing: batch = ...
        [ASSIGNMENT] Non-call assignment
      [ASSIGNMENT] Processing: tasks = ...
        [ASSIGNMENT] Non-call assignment
      [ASSIGNMENT] Processing: batch_results = ...
        [ASSIGNMENT] Non-call assignment
      [ASSIGNMENT] Processing: error_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.ProcessingResult
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.ProcessingResult (class instantiation)
      [SYMBOL_UPDATE] Function: error_result -> inheritence_complex.ProcessingResult
        [ASSIGNMENT] RESOLVED Updated symbol table: error_result = inheritence_complex.ProcessingResult
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AsyncProcessor.queue_for_async_processing
    [CONTEXT] Entered function: inheritence_complex.AsyncProcessor.queue_for_async_processing (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: self.async_queue.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.async_queue.append
            [INTERMEDIATE] Step 1: self.async_queue
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.AsyncProcessor.async_queue
            [INTERMEDIATE] Step 2: self.async_queue.append
      -> Resolved to: inheritence_complex.AsyncProcessor.async_queue.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self.async_queue.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.async_queue
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [CALL] Found call: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AsyncProcessor (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.async_queue
        [CACHE] self.async_queue -> inheritence_complex.AsyncProcessor.async_queue (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AsyncProcessor (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AsyncProcessor.queue_for_async_processing
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AsyncProcessor.queue_for_async_processing
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.AsyncProcessor
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: CacheableMixin
    [CONTEXT] Entered class: inheritence_complex.CacheableMixin
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.CacheableMixin.__init__
    [CONTEXT] Entered function: inheritence_complex.CacheableMixin.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> inheritence_complex.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_hits
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_misses
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.CacheableMixin.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.CacheableMixin.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.CacheableMixin.get_cache_key
    [CONTEXT] Entered function: inheritence_complex.CacheableMixin.get_cache_key (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Resolved to: inheritence_complex.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.CacheableMixin.get_cache_key
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.CacheableMixin.get_cache_key
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.CacheableMixin.get_from_cache
    [DECORATOR] @trace
    [CONTEXT] Entered function: inheritence_complex.CacheableMixin.get_from_cache (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'cache_key': 'str'}
        [ARG_TYPE] Processing type annotation for cache_key: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: cache_key -> inheritence_complex.str
        [ARG_TYPE] RESOLVED cache_key : inheritence_complex.str
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Found cache_key in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found cache_key in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_hits
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache
        [CACHE] self._cache -> inheritence_complex.CacheableMixin._cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_misses
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
        [CACHE] self.log_operation -> inheritence_complex.CacheableMixin.log_operation (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.str (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.CacheableMixin.get_from_cache
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.CacheableMixin.get_from_cache
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.CacheableMixin.store_in_cache
    [CONTEXT] Entered function: inheritence_complex.CacheableMixin.store_in_cache (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'cache_key': 'str', 'data': 'Any'}
        [ARG_TYPE] Processing type annotation for cache_key: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: cache_key -> inheritence_complex.str
        [ARG_TYPE] RESOLVED cache_key : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [ATTRIBUTE] Found attribute access: self._cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Found cache_key in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found cache_key in function scope: inheritence_complex.str
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.str (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache
        [CACHE] self._cache -> inheritence_complex.CacheableMixin._cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.CacheableMixin.store_in_cache
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.CacheableMixin.store_in_cache
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.CacheableMixin.get_cache_statistics
    [CONTEXT] Entered function: inheritence_complex.CacheableMixin.get_cache_statistics (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: total_requests = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: total_requests
      [SYMBOL_LOOKUP] Variable total_requests not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_hits
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_misses
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [ASSIGNMENT] Processing: hit_rate = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: hit_rate
      [SYMBOL_LOOKUP] Variable hit_rate not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_hits
        [CACHE] self._cache_hits -> inheritence_complex.CacheableMixin._cache_hits (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [CALL] Found call: max
      -> IGNORED (built-in function)
      [NAME] Found name reference: max
      [SYMBOL_LOOKUP] Variable max not found in any scope
      -> Not module state
      [NAME] Found name reference: total_requests
        [CACHE] total_requests -> inheritence_complex.total_requests (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_hits
        [CACHE] self._cache_hits -> inheritence_complex.CacheableMixin._cache_hits (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache_misses
        [CACHE] self._cache_misses -> inheritence_complex.CacheableMixin._cache_misses (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
      [NAME] Found name reference: hit_rate
        [CACHE] hit_rate -> inheritence_complex.hit_rate (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.CacheableMixin (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.CacheableMixin.get_cache_statistics
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.CacheableMixin.get_cache_statistics
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.CacheableMixin
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ValidatedMixin
    [CONTEXT] Entered class: inheritence_complex.ValidatedMixin
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.ValidatedMixin.__init__
    [CONTEXT] Entered function: inheritence_complex.ValidatedMixin.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> inheritence_complex.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.ValidatedMixin.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.ValidatedMixin.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.ValidatedMixin.add_validation_rule
    [CONTEXT] Entered function: inheritence_complex.ValidatedMixin.add_validation_rule (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'rule': 'callable', 'description': 'str'}
        [ARG_TYPE] Processing type annotation for rule: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      [SYMBOL_UPDATE] Function: rule -> inheritence_complex.callable
        [ARG_TYPE] RESOLVED rule : inheritence_complex.callable
        [ARG_TYPE] Processing type annotation for description: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: description -> inheritence_complex.str
        [ARG_TYPE] RESOLVED description : inheritence_complex.str
      [CALL] Found call: self.validation_rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_rules.append
            [INTERMEDIATE] Step 1: self.validation_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.ValidatedMixin.validation_rules
            [INTERMEDIATE] Step 2: self.validation_rules.append
      -> Resolved to: inheritence_complex.ValidatedMixin.validation_rules.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_rules.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Found rule in function scope: inheritence_complex.callable
      [SYMBOL_LOOKUP] Found rule in function scope: inheritence_complex.callable
      -> Not module state
      [NAME] Found name reference: description
      [SYMBOL_LOOKUP] Found description in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found description in function scope: inheritence_complex.str
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: description
        [CACHE] description -> inheritence_complex.str (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.ValidatedMixin.add_validation_rule
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.ValidatedMixin.add_validation_rule
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.ValidatedMixin.comprehensive_validate
    [DECORATOR] @trace
    [CONTEXT] Entered function: inheritence_complex.ValidatedMixin.comprehensive_validate (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: self.validation_errors.clear
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_errors.clear
            [INTERMEDIATE] Step 1: self.validation_errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.ValidatedMixin.validation_errors
            [INTERMEDIATE] Step 2: self.validation_errors.clear
      -> Resolved to: inheritence_complex.ValidatedMixin.validation_errors.clear
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_errors.clear
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: hasattr
      [SYMBOL_LOOKUP] Variable hasattr not found in any scope
      -> Resolved to: inheritence_complex.hasattr
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hasattr
      [SYMBOL_LOOKUP] Variable hasattr not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super.validate_input
      [SYMBOL_LOOKUP] Variable super not found in any scope
            [INTERMEDIATE] Tracking chain steps for: super.validate_input
            [INTERMEDIATE] Step 1: super.validate_input
      -> Resolved to: inheritence_complex.super.validate_input
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: super.validate_input
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
        [CACHE] super -> inheritence_complex.super (cached)
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [CALL] Found call: self.validation_errors.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_errors.append
            [INTERMEDIATE] Step 1: self.validation_errors
    [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.ValidatedMixin.validation_errors
            [INTERMEDIATE] Step 2: self.validation_errors.append
      -> Resolved to: inheritence_complex.ValidatedMixin.validation_errors.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_errors.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
        [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Not module state
      [NAME] Found name reference: description
      [SYMBOL_LOOKUP] Variable description not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_rules
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [CALL] Found call: rule
      [SYMBOL_LOOKUP] Variable rule not found in any scope
      -> Resolved to: inheritence_complex.rule
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [NAME] Found name reference: rule
        [CACHE] rule -> inheritence_complex.rule (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: self.validation_errors.append
    [CACHE] self.validation_errors.append -> inheritence_complex.ValidatedMixin.validation_errors.append (cached)
            [INTERMEDIATE] Tracking chain steps for: self.validation_errors.append
            [INTERMEDIATE] Step 1: self.validation_errors
    [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.ValidatedMixin.validation_errors
            [INTERMEDIATE] Step 2: self.validation_errors.append
      -> Resolved to: inheritence_complex.ValidatedMixin.validation_errors.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_errors.append
        [CACHE] self.validation_errors.append -> inheritence_complex.ValidatedMixin.validation_errors.append (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
        [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: description
        [CACHE] description -> inheritence_complex.description (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: self.validation_errors.append
    [CACHE] self.validation_errors.append -> inheritence_complex.ValidatedMixin.validation_errors.append (cached)
            [INTERMEDIATE] Tracking chain steps for: self.validation_errors.append
            [INTERMEDIATE] Step 1: self.validation_errors
    [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.ValidatedMixin.validation_errors
            [INTERMEDIATE] Step 2: self.validation_errors.append
      -> Resolved to: inheritence_complex.ValidatedMixin.validation_errors.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_errors.append
        [CACHE] self.validation_errors.append -> inheritence_complex.ValidatedMixin.validation_errors.append (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
        [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: description
        [CACHE] description -> inheritence_complex.description (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: is_valid = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: is_valid
      [SYMBOL_LOOKUP] Variable is_valid not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
        [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: is_valid
        [CACHE] is_valid -> inheritence_complex.is_valid (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> inheritence_complex.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
        [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.ValidatedMixin (cached)
      -> Not module state
      [NAME] Found name reference: is_valid
        [CACHE] is_valid -> inheritence_complex.is_valid (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.ValidatedMixin.comprehensive_validate
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.ValidatedMixin.comprehensive_validate
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.ValidatedMixin
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: MetricsMixin
    [CONTEXT] Entered class: inheritence_complex.MetricsMixin
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.MetricsMixin.__init__
    [CONTEXT] Entered function: inheritence_complex.MetricsMixin.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> inheritence_complex.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metric_callbacks
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.MetricsMixin.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.MetricsMixin.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.MetricsMixin.record_metric
    [CONTEXT] Entered function: inheritence_complex.MetricsMixin.record_metric (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metric_name': 'str', 'value': 'float'}
        [ARG_TYPE] Processing type annotation for metric_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: metric_name -> inheritence_complex.str
        [ARG_TYPE] RESOLVED metric_name : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for value: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      [SYMBOL_UPDATE] Function: value -> inheritence_complex.float
        [ARG_TYPE] RESOLVED value : inheritence_complex.float
      [NAME] Found name reference: metric_name
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
        [CACHE] self.custom_metrics -> inheritence_complex.MetricsMixin.custom_metrics (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [CALL] Found call: self.custom_metrics.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.custom_metrics.append
            [INTERMEDIATE] Step 1: self.custom_metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.MetricsMixin.custom_metrics
            [INTERMEDIATE] Step 2: self.custom_metrics.append
      -> Resolved to: inheritence_complex.MetricsMixin.custom_metrics.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      [ATTRIBUTE] Found attribute access: self.custom_metrics.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
        [CACHE] self.custom_metrics -> inheritence_complex.MetricsMixin.custom_metrics (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      -> Not module state
      [NAME] Found name reference: callback
      [SYMBOL_LOOKUP] Variable callback not found in any scope
      -> Not module state
      [CALL] Found call: self.metric_callbacks.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.metric_callbacks.get
            [INTERMEDIATE] Step 1: self.metric_callbacks
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.MetricsMixin.metric_callbacks
            [INTERMEDIATE] Step 2: self.metric_callbacks.get
      -> Resolved to: inheritence_complex.MetricsMixin.metric_callbacks.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: metric_name
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      [ATTRIBUTE] Found attribute access: self.metric_callbacks.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metric_callbacks
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [CALL] Found call: callback
      [SYMBOL_LOOKUP] Variable callback not found in any scope
      -> Resolved to: inheritence_complex.callback
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: metric_name
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      [NAME] Found name reference: callback
        [CACHE] callback -> inheritence_complex.callback (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.float (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
        [CACHE] self.custom_metrics -> inheritence_complex.MetricsMixin.custom_metrics (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.MetricsMixin.record_metric
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.MetricsMixin.record_metric
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.MetricsMixin.add_metric_callback
    [CONTEXT] Entered function: inheritence_complex.MetricsMixin.add_metric_callback (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metric_name': 'str', 'callback': 'callable'}
        [ARG_TYPE] Processing type annotation for metric_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: metric_name -> inheritence_complex.str
        [ARG_TYPE] RESOLVED metric_name : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for callback: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      [SYMBOL_UPDATE] Function: callback -> inheritence_complex.callable
        [ARG_TYPE] RESOLVED callback : inheritence_complex.callable
      [NAME] Found name reference: metric_name
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metric_callbacks
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metric_callbacks
        [CACHE] self.metric_callbacks -> inheritence_complex.MetricsMixin.metric_callbacks (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [CALL] Found call: self.metric_callbacks.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.metric_callbacks.append
            [INTERMEDIATE] Step 1: self.metric_callbacks
    [CACHE] self.metric_callbacks -> inheritence_complex.MetricsMixin.metric_callbacks (cached)
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.MetricsMixin.metric_callbacks
            [INTERMEDIATE] Step 2: self.metric_callbacks.append
      -> Resolved to: inheritence_complex.MetricsMixin.metric_callbacks.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: callback
      [SYMBOL_LOOKUP] Found callback in function scope: inheritence_complex.callable
      [SYMBOL_LOOKUP] Found callback in function scope: inheritence_complex.callable
      [ATTRIBUTE] Found attribute access: self.metric_callbacks.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metric_callbacks
        [CACHE] self.metric_callbacks -> inheritence_complex.MetricsMixin.metric_callbacks (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: callback
      [SYMBOL_LOOKUP] Found callback in function scope: inheritence_complex.callable
      [SYMBOL_LOOKUP] Found callback in function scope: inheritence_complex.callable
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.MetricsMixin.add_metric_callback
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.MetricsMixin.add_metric_callback
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.MetricsMixin.get_metric_summary
    [CONTEXT] Entered function: inheritence_complex.MetricsMixin.get_metric_summary (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metric_name': 'str'}
        [ARG_TYPE] Processing type annotation for metric_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: metric_name -> inheritence_complex.str
        [ARG_TYPE] RESOLVED metric_name : inheritence_complex.str
      [NAME] Found name reference: metric_name
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found metric_name in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: values = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: values
      [SYMBOL_LOOKUP] Variable values not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.custom_metrics
        [CACHE] self.custom_metrics -> inheritence_complex.MetricsMixin.custom_metrics (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.MetricsMixin (cached)
      -> Not module state
      [NAME] Found name reference: metric_name
        [CACHE] metric_name -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
        [CACHE] sum -> inheritence_complex.sum (cached)
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> inheritence_complex.len (cached)
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
      [CALL] Found call: min
      -> IGNORED (built-in function)
      [NAME] Found name reference: min
      [SYMBOL_LOOKUP] Variable min not found in any scope
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
      [CALL] Found call: max
      -> IGNORED (built-in function)
      [NAME] Found name reference: max
      [SYMBOL_LOOKUP] Variable max not found in any scope
      -> Not module state
      [NAME] Found name reference: values
        [CACHE] values -> inheritence_complex.values (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.MetricsMixin.get_metric_summary
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.MetricsMixin.get_metric_summary
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.MetricsMixin
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: BasicDataProcessor
    [CONTEXT] Entered class: inheritence_complex.BasicDataProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.BasicDataProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.BasicDataProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_id': 'str', 'enable_cache': 'bool'}
        [ARG_TYPE] Processing type annotation for processor_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: processor_id -> inheritence_complex.str
        [ARG_TYPE] RESOLVED processor_id : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for enable_cache: bool
      [SYMBOL_LOOKUP] Variable bool not found in any scope
      [SYMBOL_UPDATE] Function: enable_cache -> inheritence_complex.bool
        [ARG_TYPE] RESOLVED enable_cache : inheritence_complex.bool
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> inheritence_complex.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.enable_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: enable_cache
      [SYMBOL_LOOKUP] Found enable_cache in function scope: inheritence_complex.bool
      [SYMBOL_LOOKUP] Found enable_cache in function scope: inheritence_complex.bool
      -> Not module state
      [CALL] Found call: self.add_validation_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.add_validation_rule
            [INTERMEDIATE] Step 1: self.add_validation_rule
      -> Resolved to: inheritence_complex.BasicDataProcessor.add_validation_rule
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.add_validation_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Variable data not found in any scope
      -> Not module state
      [CALL] Found call: self.add_validation_rule
    [CACHE] self.add_validation_rule -> inheritence_complex.BasicDataProcessor.add_validation_rule (cached)
            [INTERMEDIATE] Tracking chain steps for: self.add_validation_rule
            [INTERMEDIATE] Step 1: self.add_validation_rule
      -> Resolved to: inheritence_complex.BasicDataProcessor.add_validation_rule
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.add_validation_rule
        [CACHE] self.add_validation_rule -> inheritence_complex.BasicDataProcessor.add_validation_rule (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Variable data not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> inheritence_complex.data (cached)
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.BasicDataProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.BasicDataProcessor.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.BasicDataProcessor.validate_input
    [CONTEXT] Entered function: inheritence_complex.BasicDataProcessor.validate_input (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: self.comprehensive_validate
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.comprehensive_validate
            [INTERMEDIATE] Step 1: self.comprehensive_validate
      -> Resolved to: inheritence_complex.BasicDataProcessor.comprehensive_validate
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self.comprehensive_validate
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.BasicDataProcessor.validate_input
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.BasicDataProcessor.validate_input
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.BasicDataProcessor.process_data
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: inheritence_complex.BasicDataProcessor.process_data (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: self.validate_input
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validate_input
            [INTERMEDIATE] Step 1: self.validate_input
      -> Resolved to: inheritence_complex.BasicDataProcessor.validate_input
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self.validate_input
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      -> Resolved to: inheritence_complex.ProcessingResult
      -> ADDED to instantiations
      [NAME] Found name reference: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      -> Not module state
      [CALL] Found call: self.validation_errors.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validation_errors.copy
            [INTERMEDIATE] Step 1: self.validation_errors
    [CACHE] self.validation_errors -> inheritence_complex.ValidatedMixin.validation_errors (cached)
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.ValidatedMixin.validation_errors
            [INTERMEDIATE] Step 2: self.validation_errors.copy
      -> Resolved to: inheritence_complex.BasicDataProcessor.validation_errors.copy
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.validation_errors.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.validation_errors
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.enable_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.BasicDataProcessor.get_cache_key
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cache_key
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
      -> Not module state
      [CALL] Found call: self.get_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.get_cache_key
            [INTERMEDIATE] Step 1: self.get_cache_key
      -> Resolved to: inheritence_complex.BasicDataProcessor.get_cache_key
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self.get_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cached_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_from_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.BasicDataProcessor.get_from_cache
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cached_result
      [NAME] Found name reference: cached_result
      [SYMBOL_LOOKUP] Variable cached_result not found in any scope
      -> Not module state
      [CALL] Found call: self.get_from_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.get_from_cache
            [INTERMEDIATE] Step 1: self.get_from_cache
      -> Resolved to: inheritence_complex.BasicDataProcessor.get_from_cache
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
      [ATTRIBUTE] Found attribute access: self.get_from_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: cached_result
        [CACHE] cached_result -> inheritence_complex.cached_result (cached)
      -> Not module state
      [NAME] Found name reference: cached_result
        [CACHE] cached_result -> inheritence_complex.cached_result (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processed_data = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._internal_process
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.BasicDataProcessor._internal_process
        [RETURN_TYPE_RESOLUTION] Resolving return type: Any
        [RETURN_TYPE_RESOLUTION] Class 'Any' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Any
      [TYPE_INFERENCE] Could not resolve return type 'Any' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Any (from return type - unresolved)
      [SYMBOL_UPDATE] Function: processed_data -> Any
        [ASSIGNMENT] RESOLVED Updated symbol table: processed_data = Any
      [NAME] Found name reference: processed_data
      [SYMBOL_LOOKUP] Found processed_data in function scope: Any
      [SYMBOL_LOOKUP] Found processed_data in function scope: Any
      -> Not module state
      [CALL] Found call: self._internal_process
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._internal_process
            [INTERMEDIATE] Step 1: self._internal_process
      -> Resolved to: inheritence_complex.BasicDataProcessor._internal_process
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self._internal_process
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.ProcessingResult
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.ProcessingResult (class instantiation)
      [SYMBOL_UPDATE] Function: result -> inheritence_complex.ProcessingResult
        [ASSIGNMENT] RESOLVED Updated symbol table: result = inheritence_complex.ProcessingResult
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in function scope: inheritence_complex.ProcessingResult
      [SYMBOL_LOOKUP] Found result in function scope: inheritence_complex.ProcessingResult
      -> Not module state
      [CALL] Found call: ProcessingResult
    [CACHE] ProcessingResult -> inheritence_complex.ProcessingResult (cached)
      -> Resolved to: inheritence_complex.ProcessingResult
      -> ADDED to instantiations
      [NAME] Found name reference: ProcessingResult
        [CACHE] ProcessingResult -> inheritence_complex.ProcessingResult (cached)
      -> Not module state
      [NAME] Found name reference: processed_data
        [CACHE] processed_data -> Any (cached)
      -> Not module state
      [CALL] Found call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: inheritence_complex.time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.enable_cache
        [CACHE] self.enable_cache -> inheritence_complex.BasicDataProcessor.enable_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: self.store_in_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.store_in_cache
            [INTERMEDIATE] Step 1: self.store_in_cache
      -> Resolved to: inheritence_complex.BasicDataProcessor.store_in_cache
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Found result in function scope: inheritence_complex.ProcessingResult
      [SYMBOL_LOOKUP] Found result in function scope: inheritence_complex.ProcessingResult
      [ATTRIBUTE] Found attribute access: self.store_in_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.ProcessingResult (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processed_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.ProcessingResult (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
        [CACHE] self.error_count -> inheritence_complex.BasicDataProcessor.error_count (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: ProcessingResult
    [CACHE] ProcessingResult -> inheritence_complex.ProcessingResult (cached)
      -> Resolved to: inheritence_complex.ProcessingResult
      -> ADDED to instantiations
      [NAME] Found name reference: ProcessingResult
        [CACHE] ProcessingResult -> inheritence_complex.ProcessingResult (cached)
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.BasicDataProcessor.process_data
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.BasicDataProcessor.process_data
        Calls: 2
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.BasicDataProcessor._internal_process
    [CONTEXT] Entered function: inheritence_complex.BasicDataProcessor._internal_process (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [NAME] Found name reference: k
      [SYMBOL_LOOKUP] Variable k not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: v
      [SYMBOL_LOOKUP] Variable v not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: v
      [SYMBOL_LOOKUP] Variable v not found in any scope
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [NAME] Found name reference: k
        [CACHE] k -> inheritence_complex.k (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [CALL] Found call: data.items
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
            [INTERMEDIATE] Tracking chain steps for: data.items
            [INTERMEDIATE] Step 1: data.items
      -> Resolved to: typing.Any.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.items
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [NAME] Found name reference: int
        [CACHE] int -> inheritence_complex.int (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> inheritence_complex.float (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: int
        [CACHE] int -> inheritence_complex.int (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> inheritence_complex.float (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: str.upper
      [SYMBOL_LOOKUP] Variable str not found in any scope
            [INTERMEDIATE] Tracking chain steps for: str.upper
            [INTERMEDIATE] Step 1: str.upper
      -> Resolved to: inheritence_complex.str.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: str.upper
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.BasicDataProcessor._internal_process
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.BasicDataProcessor._internal_process
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.BasicDataProcessor
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: AdvancedProcessor
    [CONTEXT] Entered class: inheritence_complex.AdvancedProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AdvancedProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.AdvancedProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_id': 'str', 'priority': 'Priority'}
        [ARG_TYPE] Processing type annotation for processor_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: processor_id -> inheritence_complex.str
        [ARG_TYPE] RESOLVED processor_id : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for priority: Priority
      [SYMBOL_LOOKUP] Variable Priority not found in any scope
      [SYMBOL_UPDATE] Function: priority -> inheritence_complex.Priority
        [ARG_TYPE] RESOLVED priority : inheritence_complex.Priority
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> inheritence_complex.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.priority
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: priority
      [SYMBOL_LOOKUP] Found priority in function scope: inheritence_complex.Priority
      [SYMBOL_LOOKUP] Found priority in function scope: inheritence_complex.Priority
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processing_strategy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [CALL] Found call: self.add_metric_callback
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.add_metric_callback
            [INTERMEDIATE] Step 1: self.add_metric_callback
      -> Resolved to: inheritence_complex.AdvancedProcessor.add_metric_callback
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.add_metric_callback
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._processing_time_callback
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [CALL] Found call: self.add_metric_callback
    [CACHE] self.add_metric_callback -> inheritence_complex.AdvancedProcessor.add_metric_callback (cached)
            [INTERMEDIATE] Tracking chain steps for: self.add_metric_callback
            [INTERMEDIATE] Step 1: self.add_metric_callback
      -> Resolved to: inheritence_complex.AdvancedProcessor.add_metric_callback
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.add_metric_callback
        [CACHE] self.add_metric_callback -> inheritence_complex.AdvancedProcessor.add_metric_callback (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._data_size_callback
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AdvancedProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AdvancedProcessor.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AdvancedProcessor.process_data
    [DECORATOR] @trace
    [CONTEXT] Entered function: inheritence_complex.AdvancedProcessor.process_data (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
    [IMPORT] time -> time
      [ASSIGNMENT] Processing: start_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for start_time
      [NAME] Found name reference: start_time
      [SYMBOL_LOOKUP] Variable start_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> inheritence_complex.time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: inheritence_complex.time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: data_size = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.len
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for data_size
      [NAME] Found name reference: data_size
      [SYMBOL_LOOKUP] Variable data_size not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [CALL] Found call: self.record_metric
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.record_metric
            [INTERMEDIATE] Step 1: self.record_metric
      -> Resolved to: inheritence_complex.AdvancedProcessor.record_metric
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data_size
      [SYMBOL_LOOKUP] Variable data_size not found in any scope
      [ATTRIBUTE] Found attribute access: self.record_metric
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: data_size
        [CACHE] data_size -> inheritence_complex.data_size (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] No name parts extracted from call
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: super.process_data
      [SYMBOL_LOOKUP] Variable super not found in any scope
            [INTERMEDIATE] Tracking chain steps for: super.process_data
            [INTERMEDIATE] Step 1: super.process_data
      -> Resolved to: inheritence_complex.super.process_data
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: super.process_data
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processing_time = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: processing_time
      [SYMBOL_LOOKUP] Variable processing_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> inheritence_complex.time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: inheritence_complex.time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> inheritence_complex.start_time (cached)
      -> Not module state
      [CALL] Found call: self.record_metric
    [CACHE] self.record_metric -> inheritence_complex.AdvancedProcessor.record_metric (cached)
            [INTERMEDIATE] Tracking chain steps for: self.record_metric
            [INTERMEDIATE] Step 1: self.record_metric
      -> Resolved to: inheritence_complex.AdvancedProcessor.record_metric
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: processing_time
      [SYMBOL_LOOKUP] Variable processing_time not found in any scope
      [ATTRIBUTE] Found attribute access: self.record_metric
        [CACHE] self.record_metric -> inheritence_complex.AdvancedProcessor.record_metric (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: processing_time
        [CACHE] processing_time -> inheritence_complex.processing_time (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: result.metrics
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.result (cached)
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: processing_time
        [CACHE] processing_time -> inheritence_complex.processing_time (cached)
      -> Not module state
      [NAME] Found name reference: data_size
        [CACHE] data_size -> inheritence_complex.data_size (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.priority.name
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.priority
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.result (cached)
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: inheritence_complex.AdvancedProcessor.process_data
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AdvancedProcessor.process_data
        Calls: 0
        Instantiations: 0
        State Access: 1
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AdvancedProcessor._processing_time_callback
    [CONTEXT] Entered function: inheritence_complex.AdvancedProcessor._processing_time_callback (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metric_name': 'str', 'value': 'float', 'history': 'List[float]'}
        [ARG_TYPE] Processing type annotation for metric_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: metric_name -> inheritence_complex.str
        [ARG_TYPE] RESOLVED metric_name : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for value: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      [SYMBOL_UPDATE] Function: value -> inheritence_complex.float
        [ARG_TYPE] RESOLVED value : inheritence_complex.float
        [ARG_TYPE] Processing type annotation for history: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: history -> typing.List
        [ARG_TYPE] RESOLVED history : typing.List
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [NAME] Found name reference: history
      [SYMBOL_LOOKUP] Found history in function scope: typing.List
      [SYMBOL_LOOKUP] Found history in function scope: typing.List
      -> Not module state
      [ASSIGNMENT] Processing: avg_time = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: avg_time
      [SYMBOL_LOOKUP] Variable avg_time not found in any scope
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      -> Not module state
      [NAME] Found name reference: history
        [CACHE] history -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: avg_time
        [CACHE] avg_time -> inheritence_complex.avg_time (cached)
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: avg_time
        [CACHE] avg_time -> inheritence_complex.avg_time (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AdvancedProcessor._processing_time_callback
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AdvancedProcessor._processing_time_callback
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AdvancedProcessor._data_size_callback
    [CONTEXT] Entered function: inheritence_complex.AdvancedProcessor._data_size_callback (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'metric_name': 'str', 'value': 'float', 'history': 'List[float]'}
        [ARG_TYPE] Processing type annotation for metric_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: metric_name -> inheritence_complex.str
        [ARG_TYPE] RESOLVED metric_name : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for value: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      [SYMBOL_UPDATE] Function: value -> inheritence_complex.float
        [ARG_TYPE] RESOLVED value : inheritence_complex.float
        [ARG_TYPE] Processing type annotation for history: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: history -> typing.List
        [ARG_TYPE] RESOLVED history : typing.List
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      [SYMBOL_LOOKUP] Found value in function scope: inheritence_complex.float
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.float (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AdvancedProcessor._data_size_callback
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AdvancedProcessor._data_size_callback
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.AdvancedProcessor.change_processing_strategy
    [DECORATOR] @validate_auth(required_role='operator')
    [CONTEXT] Entered function: inheritence_complex.AdvancedProcessor.change_processing_strategy (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'new_strategy': 'str'}
        [ARG_TYPE] Processing type annotation for new_strategy: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: new_strategy -> inheritence_complex.str
        [ARG_TYPE] RESOLVED new_strategy : inheritence_complex.str
      [ASSIGNMENT] Processing: old_strategy = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: old_strategy
      [SYMBOL_LOOKUP] Variable old_strategy not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processing_strategy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.processing_strategy
        [CACHE] self.processing_strategy -> inheritence_complex.AdvancedProcessor.processing_strategy (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: new_strategy
      [SYMBOL_LOOKUP] Found new_strategy in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found new_strategy in function scope: inheritence_complex.str
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.AdvancedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: old_strategy
        [CACHE] old_strategy -> inheritence_complex.old_strategy (cached)
      -> Not module state
      [NAME] Found name reference: new_strategy
        [CACHE] new_strategy -> inheritence_complex.str (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.AdvancedProcessor.change_processing_strategy
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.AdvancedProcessor.change_processing_strategy
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.AdvancedProcessor
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: SpecializedProcessor
    [CONTEXT] Entered class: inheritence_complex.SpecializedProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.SpecializedProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.SpecializedProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_id': 'str', 'specialization': 'str'}
        [ARG_TYPE] Processing type annotation for processor_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: processor_id -> inheritence_complex.str
        [ARG_TYPE] RESOLVED processor_id : inheritence_complex.str
        [ARG_TYPE] Processing type annotation for specialization: str
        [CACHE] str -> inheritence_complex.str (cached)
      [SYMBOL_UPDATE] Function: specialization -> inheritence_complex.str
        [ARG_TYPE] RESOLVED specialization : inheritence_complex.str
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> inheritence_complex.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: inheritence_complex.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: Priority.HIGH
      [SYMBOL_LOOKUP] Variable Priority not found in any scope
      -> Not module state
      [NAME] Found name reference: Priority
      [SYMBOL_LOOKUP] Variable Priority not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.specialization
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: specialization
      [SYMBOL_LOOKUP] Found specialization in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found specialization in function scope: inheritence_complex.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.specialist_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [CALL] Found call: self.add_validation_rule
    [CACHE] self.add_validation_rule -> inheritence_complex.BasicDataProcessor.add_validation_rule (cached)
            [INTERMEDIATE] Tracking chain steps for: self.add_validation_rule
            [INTERMEDIATE] Step 1: self.add_validation_rule
      -> Resolved to: inheritence_complex.BasicDataProcessor.add_validation_rule
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.add_validation_rule
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self._validate_specialization
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: specialization
        [CACHE] specialization -> inheritence_complex.str (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.SpecializedProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.SpecializedProcessor.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.SpecializedProcessor._validate_specialization
    [CONTEXT] Entered function: inheritence_complex.SpecializedProcessor._validate_specialization (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [ATTRIBUTE] Found attribute access: self.specialization
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.specialization
        [CACHE] self.specialization -> inheritence_complex.SpecializedProcessor.specialization (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: list
        [CACHE] list -> inheritence_complex.list (cached)
      -> Not module state
      [NAME] Found name reference: dict
        [CACHE] dict -> inheritence_complex.dict (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.specialization
        [CACHE] self.specialization -> inheritence_complex.SpecializedProcessor.specialization (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: dict
        [CACHE] dict -> inheritence_complex.dict (cached)
      -> Not module state
      [NAME] Found name reference: list
        [CACHE] list -> inheritence_complex.list (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.SpecializedProcessor._validate_specialization
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.SpecializedProcessor._validate_specialization
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.SpecializedProcessor._internal_process
    [DECORATOR] @trace
    [CONTEXT] Entered function: inheritence_complex.SpecializedProcessor._internal_process (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [ATTRIBUTE] Found attribute access: self.specialization
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: self._process_numeric
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._process_numeric
            [INTERMEDIATE] Step 1: self._process_numeric
      -> Resolved to: inheritence_complex.SpecializedProcessor._process_numeric
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self._process_numeric
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.specialization
        [CACHE] self.specialization -> inheritence_complex.SpecializedProcessor.specialization (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [CALL] Found call: self._process_text
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._process_text
            [INTERMEDIATE] Step 1: self._process_text
      -> Resolved to: inheritence_complex.SpecializedProcessor._process_text
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self._process_text
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.specialization
        [CACHE] self.specialization -> inheritence_complex.SpecializedProcessor.specialization (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [CALL] Found call: self._process_structured
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._process_structured
            [INTERMEDIATE] Step 1: self._process_structured
      -> Resolved to: inheritence_complex.SpecializedProcessor._process_structured
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: self._process_structured
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: super._internal_process
      [SYMBOL_LOOKUP] Variable super not found in any scope
            [INTERMEDIATE] Tracking chain steps for: super._internal_process
            [INTERMEDIATE] Step 1: super._internal_process
      -> Resolved to: inheritence_complex.super._internal_process
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [ATTRIBUTE] Found attribute access: super._internal_process
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> inheritence_complex.super (cached)
      -> Resolved to: inheritence_complex.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.SpecializedProcessor._internal_process
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.SpecializedProcessor._internal_process
        Calls: 3
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.SpecializedProcessor._process_numeric
    [CONTEXT] Entered function: inheritence_complex.SpecializedProcessor._process_numeric (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: x
      [SYMBOL_LOOKUP] Variable x not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: x
      [SYMBOL_LOOKUP] Variable x not found in any scope
      -> Not module state
      [NAME] Found name reference: int
        [CACHE] int -> inheritence_complex.int (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> inheritence_complex.float (cached)
      -> Not module state
      [NAME] Found name reference: x
        [CACHE] x -> inheritence_complex.x (cached)
      -> Not module state
      [NAME] Found name reference: x
        [CACHE] x -> inheritence_complex.x (cached)
      -> Not module state
      [NAME] Found name reference: x
        [CACHE] x -> inheritence_complex.x (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [NAME] Found name reference: k
      [SYMBOL_LOOKUP] Variable k not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: v
      [SYMBOL_LOOKUP] Variable v not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: v
      [SYMBOL_LOOKUP] Variable v not found in any scope
      -> Not module state
      [NAME] Found name reference: int
        [CACHE] int -> inheritence_complex.int (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> inheritence_complex.float (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [NAME] Found name reference: k
        [CACHE] k -> inheritence_complex.k (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [CALL] Found call: data.items
    [CACHE] data.items -> typing.Any.items (cached)
            [INTERMEDIATE] Tracking chain steps for: data.items
            [INTERMEDIATE] Step 1: data.items
      -> Resolved to: typing.Any.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.items
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.SpecializedProcessor._process_numeric
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.SpecializedProcessor._process_numeric
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.SpecializedProcessor._process_text
    [CONTEXT] Entered function: inheritence_complex.SpecializedProcessor._process_text (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [CALL] Found call: data.upper.replace
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
            [INTERMEDIATE] Tracking chain steps for: data.upper.replace
            [INTERMEDIATE] Step 1: data.upper
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
            [INTERMEDIATE] Step 1 resolved to: typing.Any.upper
            [INTERMEDIATE] Step 2: data.upper.replace
      -> Resolved to: typing.Any.upper.replace
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.upper.replace
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [CALL] Found call: data.upper
    [CACHE] data.upper -> typing.Any.upper (cached)
            [INTERMEDIATE] Tracking chain steps for: data.upper
            [INTERMEDIATE] Step 1: data.upper
      -> Resolved to: typing.Any.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.upper
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
        [FUNCTION_ARG] Checking argument: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [CALL] Found call: item.upper.replace
      [SYMBOL_LOOKUP] Variable item not found in any scope
            [INTERMEDIATE] Tracking chain steps for: item.upper.replace
            [INTERMEDIATE] Step 1: item.upper
      [SYMBOL_LOOKUP] Variable item not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.item.upper
            [INTERMEDIATE] Step 2: item.upper.replace
      -> Resolved to: inheritence_complex.item.upper.replace
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: item.upper.replace
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [CALL] Found call: item.upper
    [CACHE] item.upper -> inheritence_complex.item.upper (cached)
            [INTERMEDIATE] Tracking chain steps for: item.upper
            [INTERMEDIATE] Step 1: item.upper
      -> Resolved to: inheritence_complex.item.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: item.upper
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [NAME] Found name reference: k
      [SYMBOL_LOOKUP] Variable k not found in any scope
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: v
      [SYMBOL_LOOKUP] Variable v not found in any scope
        [FUNCTION_ARG] Checking argument: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: v
      [SYMBOL_LOOKUP] Variable v not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [CALL] Found call: v.upper.replace
      [SYMBOL_LOOKUP] Variable v not found in any scope
            [INTERMEDIATE] Tracking chain steps for: v.upper.replace
            [INTERMEDIATE] Step 1: v.upper
      [SYMBOL_LOOKUP] Variable v not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.v.upper
            [INTERMEDIATE] Step 2: v.upper.replace
      -> Resolved to: inheritence_complex.v.upper.replace
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: v.upper.replace
      [SYMBOL_LOOKUP] Variable v not found in any scope
      -> Not module state
      [CALL] Found call: v.upper
    [CACHE] v.upper -> inheritence_complex.v.upper (cached)
            [INTERMEDIATE] Tracking chain steps for: v.upper
            [INTERMEDIATE] Step 1: v.upper
      -> Resolved to: inheritence_complex.v.upper
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: v.upper
      [SYMBOL_LOOKUP] Variable v not found in any scope
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [NAME] Found name reference: k
        [CACHE] k -> inheritence_complex.k (cached)
      -> Not module state
      [NAME] Found name reference: v
        [CACHE] v -> inheritence_complex.v (cached)
      -> Not module state
      [CALL] Found call: data.items
    [CACHE] data.items -> typing.Any.items (cached)
            [INTERMEDIATE] Tracking chain steps for: data.items
            [INTERMEDIATE] Step 1: data.items
      -> Resolved to: typing.Any.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.items
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.SpecializedProcessor._process_text
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.SpecializedProcessor._process_text
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.SpecializedProcessor._process_structured
    [CONTEXT] Entered function: inheritence_complex.SpecializedProcessor._process_structured (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: key
      [SYMBOL_LOOKUP] Variable key not found in any scope
      -> Not module state
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      -> Not module state
      [CALL] Found call: data.items
    [CACHE] data.items -> typing.Any.items (cached)
            [INTERMEDIATE] Tracking chain steps for: data.items
            [INTERMEDIATE] Step 1: data.items
      -> Resolved to: typing.Any.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.items
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [NAME] Found name reference: dict
        [CACHE] dict -> inheritence_complex.dict (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.result (cached)
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: key
        [CACHE] key -> inheritence_complex.key (cached)
      -> Not module state
      [CALL] Found call: self._process_structured
    [CACHE] self._process_structured -> inheritence_complex.SpecializedProcessor._process_structured (cached)
            [INTERMEDIATE] Tracking chain steps for: self._process_structured
            [INTERMEDIATE] Step 1: self._process_structured
      -> Resolved to: inheritence_complex.SpecializedProcessor._process_structured
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [ATTRIBUTE] Found attribute access: self._process_structured
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
        [FUNCTION_ARG] Checking argument: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.result (cached)
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: key
        [CACHE] key -> inheritence_complex.key (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      -> Not module state
      [NAME] Found name reference: dict
        [CACHE] dict -> inheritence_complex.dict (cached)
      -> Not module state
      [CALL] Found call: self._process_structured
    [CACHE] self._process_structured -> inheritence_complex.SpecializedProcessor._process_structured (cached)
            [INTERMEDIATE] Tracking chain steps for: self._process_structured
            [INTERMEDIATE] Step 1: self._process_structured
      -> Resolved to: inheritence_complex.SpecializedProcessor._process_structured
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      [ATTRIBUTE] Found attribute access: self._process_structured
        [CACHE] self._process_structured -> inheritence_complex.SpecializedProcessor._process_structured (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.result (cached)
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: key
        [CACHE] key -> inheritence_complex.key (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> inheritence_complex.result (cached)
      -> Resolved to state: inheritence_complex.result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: list
        [CACHE] list -> inheritence_complex.list (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: dict
        [CACHE] dict -> inheritence_complex.dict (cached)
      -> Not module state
      [CALL] Found call: self._process_structured
    [CACHE] self._process_structured -> inheritence_complex.SpecializedProcessor._process_structured (cached)
            [INTERMEDIATE] Tracking chain steps for: self._process_structured
            [INTERMEDIATE] Step 1: self._process_structured
      -> Resolved to: inheritence_complex.SpecializedProcessor._process_structured
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: item
      [SYMBOL_LOOKUP] Variable item not found in any scope
      [ATTRIBUTE] Found attribute access: self._process_structured
        [CACHE] self._process_structured -> inheritence_complex.SpecializedProcessor._process_structured (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.SpecializedProcessor (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: item
        [CACHE] item -> inheritence_complex.item (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.SpecializedProcessor._process_structured
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.SpecializedProcessor._process_structured
        Calls: 1
        Instantiations: 0
        State Access: 1
    [CONTEXT] Exited class: inheritence_complex.SpecializedProcessor
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ProcessorProtocol
    [CONTEXT] Entered class: inheritence_complex.ProcessorProtocol
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.ProcessorProtocol.process_data
    [CONTEXT] Entered function: inheritence_complex.ProcessorProtocol.process_data (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
    [CONTEXT] Exited function: inheritence_complex.ProcessorProtocol.process_data
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.ProcessorProtocol.process_data
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.ProcessorProtocol.get_statistics
    [CONTEXT] Entered function: inheritence_complex.ProcessorProtocol.get_statistics (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
    [CONTEXT] Exited function: inheritence_complex.ProcessorProtocol.get_statistics
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.ProcessorProtocol.get_statistics
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.ProcessorProtocol
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: GenericProcessor
    [CONTEXT] Entered class: inheritence_complex.GenericProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.GenericProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.GenericProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'input_type': 'type', 'output_type': 'type'}
        [ARG_TYPE] Processing type annotation for input_type: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      [SYMBOL_UPDATE] Function: input_type -> inheritence_complex.type
        [ARG_TYPE] RESOLVED input_type : inheritence_complex.type
        [ARG_TYPE] Processing type annotation for output_type: type
        [CACHE] type -> inheritence_complex.type (cached)
      [SYMBOL_UPDATE] Function: output_type -> inheritence_complex.type
        [ARG_TYPE] RESOLVED output_type : inheritence_complex.type
      [ATTRIBUTE] Found attribute access: self.input_type
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: input_type
      [SYMBOL_LOOKUP] Found input_type in function scope: inheritence_complex.type
      [SYMBOL_LOOKUP] Found input_type in function scope: inheritence_complex.type
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.output_type
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [NAME] Found name reference: output_type
      [SYMBOL_LOOKUP] Found output_type in function scope: inheritence_complex.type
      [SYMBOL_LOOKUP] Found output_type in function scope: inheritence_complex.type
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.type_conversion_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.GenericProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.GenericProcessor.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.GenericProcessor.process_typed_data
    [CONTEXT] Entered function: inheritence_complex.GenericProcessor.process_typed_data (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'T'}
        [ARG_TYPE] Processing type annotation for data: T
      [SYMBOL_LOOKUP] Variable T not found in any scope
      [SYMBOL_UPDATE] Function: data -> inheritence_complex.T
        [ARG_TYPE] RESOLVED data : inheritence_complex.T
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      -> Resolved to state: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      -> REJECTED (shadowed by local variable)
      [ATTRIBUTE] Found attribute access: self.input_type
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: TypeError
      [SYMBOL_LOOKUP] Variable TypeError not found in any scope
      -> Resolved to: inheritence_complex.TypeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: TypeError
      [SYMBOL_LOOKUP] Variable TypeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.input_type
        [CACHE] self.input_type -> inheritence_complex.GenericProcessor.input_type (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [CALL] Found call: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Resolved to: inheritence_complex.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [NAME] Found name reference: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> inheritence_complex.T (cached)
      -> Resolved to state: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      -> REJECTED (shadowed by local variable)
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: type.__name__
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Not module state
      [CALL] Found call: type
    [CACHE] type -> inheritence_complex.type (cached)
      -> Resolved to: inheritence_complex.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [NAME] Found name reference: type
        [CACHE] type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> inheritence_complex.T (cached)
      -> Resolved to state: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      -> REJECTED (shadowed by local variable)
      [ATTRIBUTE] Found attribute access: self.output_type.__name__
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.output_type
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.cache_key (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.type_conversion_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [ASSIGNMENT] Processing: converter = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: converter
      [SYMBOL_LOOKUP] Variable converter not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.type_conversion_cache
        [CACHE] self.type_conversion_cache -> inheritence_complex.GenericProcessor.type_conversion_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.cache_key (cached)
      -> Not module state
      [ASSIGNMENT] Processing: converter = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._create_type_converter
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.GenericProcessor._create_type_converter
        [RETURN_TYPE_RESOLUTION] Resolving return type: callable
        [RETURN_TYPE_RESOLUTION] Class 'callable' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: callable
      [TYPE_INFERENCE] Could not resolve return type 'callable' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: callable (from return type - unresolved)
      [SYMBOL_UPDATE] Function: converter -> callable
        [ASSIGNMENT] RESOLVED Updated symbol table: converter = callable
      [NAME] Found name reference: converter
        [CACHE] converter -> inheritence_complex.converter (cached)
      -> Not module state
      [CALL] Found call: self._create_type_converter
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._create_type_converter
            [INTERMEDIATE] Step 1: self._create_type_converter
      -> Resolved to: inheritence_complex.GenericProcessor._create_type_converter
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._create_type_converter
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [CALL] Found call: type
    [CACHE] type -> inheritence_complex.type (cached)
      -> Resolved to: inheritence_complex.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [NAME] Found name reference: type
        [CACHE] type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> inheritence_complex.T (cached)
      -> Resolved to state: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      -> REJECTED (shadowed by local variable)
      [ATTRIBUTE] Found attribute access: self.output_type
        [CACHE] self.output_type -> inheritence_complex.GenericProcessor.output_type (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.type_conversion_cache
        [CACHE] self.type_conversion_cache -> inheritence_complex.GenericProcessor.type_conversion_cache (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.GenericProcessor (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> inheritence_complex.cache_key (cached)
      -> Not module state
      [NAME] Found name reference: converter
        [CACHE] converter -> inheritence_complex.converter (cached)
      -> Not module state
      [CALL] Found call: converter
      [SYMBOL_LOOKUP] Found converter in function scope: callable
      [SYMBOL_LOOKUP] Found converter in function scope: callable
      -> Resolved to: callable
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      [NAME] Found name reference: converter
        [CACHE] converter -> inheritence_complex.converter (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> inheritence_complex.T (cached)
      -> Resolved to state: inheritence_complex.T
      [SYMBOL_LOOKUP] Found data in function scope: inheritence_complex.T
      -> REJECTED (shadowed by local variable)
    [CONTEXT] Exited function: inheritence_complex.GenericProcessor.process_typed_data
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.GenericProcessor.process_typed_data
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.GenericProcessor._create_type_converter
    [CONTEXT] Entered function: inheritence_complex.GenericProcessor._create_type_converter (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'from_type': 'type', 'to_type': 'type'}
        [ARG_TYPE] Processing type annotation for from_type: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      [SYMBOL_UPDATE] Function: from_type -> inheritence_complex.type
        [ARG_TYPE] RESOLVED from_type : inheritence_complex.type
        [ARG_TYPE] Processing type annotation for to_type: type
        [CACHE] type -> inheritence_complex.type (cached)
      [SYMBOL_UPDATE] Function: to_type -> inheritence_complex.type
        [ARG_TYPE] RESOLVED to_type : inheritence_complex.type
      [NAME] Found name reference: from_type
      [SYMBOL_LOOKUP] Found from_type in function scope: inheritence_complex.type
      [SYMBOL_LOOKUP] Found from_type in function scope: inheritence_complex.type
      -> Not module state
      [NAME] Found name reference: to_type
      [SYMBOL_LOOKUP] Found to_type in function scope: inheritence_complex.type
      [SYMBOL_LOOKUP] Found to_type in function scope: inheritence_complex.type
      -> Not module state
      [NAME] Found name reference: x
      [SYMBOL_LOOKUP] Variable x not found in any scope
      -> Not module state
      [NAME] Found name reference: to_type
        [CACHE] to_type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: to_type
        [CACHE] to_type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [NAME] Found name reference: from_type
        [CACHE] from_type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: int
        [CACHE] int -> inheritence_complex.int (cached)
      -> Not module state
      [NAME] Found name reference: to_type
        [CACHE] to_type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> inheritence_complex.float (cached)
      -> Not module state
      [NAME] Found name reference: from_type
        [CACHE] from_type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: int
        [CACHE] int -> inheritence_complex.int (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> inheritence_complex.float (cached)
      -> Not module state
      [CALL] Found call: to_type
      [SYMBOL_LOOKUP] Found to_type in function scope: inheritence_complex.type
      [SYMBOL_LOOKUP] Found to_type in function scope: inheritence_complex.type
      -> Resolved to: inheritence_complex.type
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: x
      [SYMBOL_LOOKUP] Variable x not found in any scope
      [NAME] Found name reference: to_type
        [CACHE] to_type -> inheritence_complex.type (cached)
      -> Not module state
      [NAME] Found name reference: x
        [CACHE] x -> inheritence_complex.x (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.GenericProcessor._create_type_converter
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.GenericProcessor._create_type_converter
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.GenericProcessor
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: UltimateProcessor
    [CONTEXT] Entered class: inheritence_complex.UltimateProcessor
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.UltimateProcessor.__init__
    [CONTEXT] Entered function: inheritence_complex.UltimateProcessor.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_id': 'str'}
        [ARG_TYPE] Processing type annotation for processor_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: processor_id -> inheritence_complex.str
        [ARG_TYPE] RESOLVED processor_id : inheritence_complex.str
      [CALL] Found call: SpecializedProcessor.__init__
      [SYMBOL_LOOKUP] Variable SpecializedProcessor not found in any scope
            [INTERMEDIATE] Tracking chain steps for: SpecializedProcessor.__init__
            [INTERMEDIATE] Step 1: SpecializedProcessor.__init__
      -> Resolved to: inheritence_complex.SpecializedProcessor.__init__
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [ATTRIBUTE] Found attribute access: SpecializedProcessor.__init__
      [SYMBOL_LOOKUP] Variable SpecializedProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: SpecializedProcessor
      [SYMBOL_LOOKUP] Variable SpecializedProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      [SYMBOL_LOOKUP] Found processor_id in function scope: inheritence_complex.str
      -> Not module state
      [CALL] Found call: GenericProcessor.__init__
      [SYMBOL_LOOKUP] Variable GenericProcessor not found in any scope
            [INTERMEDIATE] Tracking chain steps for: GenericProcessor.__init__
            [INTERMEDIATE] Step 1: GenericProcessor.__init__
      -> Resolved to: inheritence_complex.GenericProcessor.__init__
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
        [FUNCTION_ARG] Checking argument: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      [ATTRIBUTE] Found attribute access: GenericProcessor.__init__
      [SYMBOL_LOOKUP] Variable GenericProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: GenericProcessor
      [SYMBOL_LOOKUP] Variable GenericProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [NAME] Found name reference: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.ultimate_features_enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cross_references
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.UltimateProcessor.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.UltimateProcessor.__init__
        Calls: 2
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.UltimateProcessor.ultimate_process
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [DECORATOR] @validate_auth(required_role='admin')
    [CONTEXT] Entered function: inheritence_complex.UltimateProcessor.ultimate_process (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: typed_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.process_typed_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor.process_typed_data
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for typed_result
      [NAME] Found name reference: typed_result
      [SYMBOL_LOOKUP] Variable typed_result not found in any scope
      -> Not module state
      [CALL] Found call: self.process_typed_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.process_typed_data
            [INTERMEDIATE] Step 1: self.process_typed_data
      -> Resolved to: inheritence_complex.UltimateProcessor.process_typed_data
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self.process_typed_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: typed_result
      [SYMBOL_LOOKUP] Variable typed_result not found in any scope
        [FUNCTION_ARG] Checking argument: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: typed_result
        [CACHE] typed_result -> inheritence_complex.typed_result (cached)
      -> Not module state
      [NAME] Found name reference: ProcessingResult
      [SYMBOL_LOOKUP] Variable ProcessingResult not found in any scope
      -> Not module state
      [NAME] Found name reference: typed_result
        [CACHE] typed_result -> inheritence_complex.typed_result (cached)
      -> Not module state
      [ASSIGNMENT] Processing: specialized_result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.process_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor.process_data
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for specialized_result
      [NAME] Found name reference: specialized_result
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
      -> Not module state
      [CALL] Found call: self.process_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.process_data
            [INTERMEDIATE] Step 1: self.process_data
      -> Resolved to: inheritence_complex.UltimateProcessor.process_data
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self.process_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Dict (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: specialized_result.success
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
      -> Not module state
      [NAME] Found name reference: specialized_result
        [CACHE] specialized_result -> inheritence_complex.specialized_result (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.ultimate_features_enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: specialized_result.data
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
      -> Not module state
      [NAME] Found name reference: specialized_result
        [CACHE] specialized_result -> inheritence_complex.specialized_result (cached)
      -> Not module state
      [CALL] Found call: self._apply_ultimate_enhancements
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._apply_ultimate_enhancements
            [INTERMEDIATE] Step 1: self._apply_ultimate_enhancements
      -> Resolved to: inheritence_complex.UltimateProcessor._apply_ultimate_enhancements
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._apply_ultimate_enhancements
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: specialized_result.data
        [CACHE] specialized_result.data -> inheritence_complex.specialized_result.data (cached)
      -> Not module state
      [NAME] Found name reference: specialized_result
        [CACHE] specialized_result -> inheritence_complex.specialized_result (cached)
      -> Not module state
      [CALL] Found call: specialized_result.metrics.update
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
            [INTERMEDIATE] Tracking chain steps for: specialized_result.metrics.update
            [INTERMEDIATE] Step 1: specialized_result.metrics
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
            [INTERMEDIATE] Step 1 resolved to: inheritence_complex.specialized_result.metrics
            [INTERMEDIATE] Step 2: specialized_result.metrics.update
      -> Resolved to: inheritence_complex.specialized_result.metrics.update
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: specialized_result.metrics.update
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: specialized_result.metrics
      [SYMBOL_LOOKUP] Variable specialized_result not found in any scope
      -> Not module state
      [NAME] Found name reference: specialized_result
        [CACHE] specialized_result -> inheritence_complex.specialized_result (cached)
      -> Not module state
      [NAME] Found name reference: specialized_result
        [CACHE] specialized_result -> inheritence_complex.specialized_result (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.UltimateProcessor.ultimate_process
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.UltimateProcessor.ultimate_process
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.UltimateProcessor._apply_ultimate_enhancements
    [CONTEXT] Entered function: inheritence_complex.UltimateProcessor._apply_ultimate_enhancements (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data': 'Any'}
        [ARG_TYPE] Processing type annotation for data: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Any
        [ARG_TYPE] RESOLVED data : typing.Any
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      [NAME] Found name reference: isinstance
      [SYMBOL_LOOKUP] Variable isinstance not found in any scope
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: dict
      [SYMBOL_LOOKUP] Variable dict not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: enhanced = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: enhanced
      [SYMBOL_LOOKUP] Variable enhanced not found in any scope
      -> Not module state
      [NAME] Found name reference: key
      [SYMBOL_LOOKUP] Variable key not found in any scope
      -> Not module state
      [NAME] Found name reference: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      -> Not module state
      [CALL] Found call: data.items
    [CACHE] data.items -> typing.Any.items (cached)
            [INTERMEDIATE] Tracking chain steps for: data.items
            [INTERMEDIATE] Step 1: data.items
      -> Resolved to: typing.Any.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.items
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
      [NAME] Found name reference: enhanced
        [CACHE] enhanced -> inheritence_complex.enhanced (cached)
      -> Not module state
      [NAME] Found name reference: key
        [CACHE] key -> inheritence_complex.key (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [CALL] Found call: isinstance
    [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Resolved to: inheritence_complex.isinstance
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: value
      [SYMBOL_LOOKUP] Variable value not found in any scope
      [NAME] Found name reference: isinstance
        [CACHE] isinstance -> inheritence_complex.isinstance (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: int
      [SYMBOL_LOOKUP] Variable int not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: ref_key = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: ref_key
      [SYMBOL_LOOKUP] Variable ref_key not found in any scope
      -> Not module state
      [CALL] Found call: hash
    [CACHE] hash -> inheritence_complex.hash (cached)
      -> Resolved to: inheritence_complex.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> inheritence_complex.str (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cross_references
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: ref_key
        [CACHE] ref_key -> inheritence_complex.ref_key (cached)
      -> Not module state
      [NAME] Found name reference: value
        [CACHE] value -> inheritence_complex.value (cached)
      -> Not module state
      [NAME] Found name reference: enhanced
        [CACHE] enhanced -> inheritence_complex.enhanced (cached)
      -> Not module state
      [NAME] Found name reference: key
        [CACHE] key -> inheritence_complex.key (cached)
      -> Not module state
      [NAME] Found name reference: ref_key
        [CACHE] ref_key -> inheritence_complex.ref_key (cached)
      -> Not module state
      [NAME] Found name reference: enhanced
        [CACHE] enhanced -> inheritence_complex.enhanced (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Any (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.UltimateProcessor._apply_ultimate_enhancements
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.UltimateProcessor._apply_ultimate_enhancements
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.UltimateProcessor.ultimate_processing_context
    [DECORATOR] @contextmanager
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function inheritence_complex.UltimateProcessor.ultimate_processing_context
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in inheritence_complex.UltimateProcessor.ultimate_processing_context
    [CONTEXT] Entered function: inheritence_complex.UltimateProcessor.ultimate_processing_context (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: original_features = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: original_features
      [SYMBOL_LOOKUP] Variable original_features not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.ultimate_features_enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.ultimate_features_enabled
        [CACHE] self.ultimate_features_enabled -> inheritence_complex.UltimateProcessor.ultimate_features_enabled (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.ultimate_features_enabled
        [CACHE] self.ultimate_features_enabled -> inheritence_complex.UltimateProcessor.ultimate_features_enabled (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
      [NAME] Found name reference: original_features
        [CACHE] original_features -> inheritence_complex.original_features (cached)
      -> Not module state
      [CALL] Found call: self.log_operation
    [CACHE] self.log_operation -> inheritence_complex.AsyncProcessor.log_operation (cached)
            [INTERMEDIATE] Tracking chain steps for: self.log_operation
            [INTERMEDIATE] Step 1: self.log_operation
      -> Resolved to: inheritence_complex.AsyncProcessor.log_operation
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.log_operation
        [CACHE] self.log_operation -> inheritence_complex.UltimateProcessor.log_operation (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> inheritence_complex.UltimateProcessor (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.UltimateProcessor.ultimate_processing_context
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.UltimateProcessor.ultimate_processing_context
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: inheritence_complex.UltimateProcessor
    [SYMBOL_TABLE] Exited class scope
  [FUNCTION] Analyzing function: create_processor_hierarchy
    [FUNCTION_ANALYSIS] Starting analysis of: inheritence_complex.create_processor_hierarchy
    [CONTEXT] Entered function: inheritence_complex.create_processor_hierarchy (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'processor_configs': 'List[Dict[str, Any]]'}
        [ARG_TYPE] Processing type annotation for processor_configs: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: processor_configs -> typing.List
        [ARG_TYPE] RESOLVED processor_configs : typing.List
      [ASSIGNMENT] Processing: processors = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: processors
      [SYMBOL_LOOKUP] Variable processors not found in any scope
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Variable config not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_configs
      [SYMBOL_LOOKUP] Found processor_configs in function scope: typing.List
      [SYMBOL_LOOKUP] Found processor_configs in function scope: typing.List
      -> Not module state
      [ASSIGNMENT] Processing: processor_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: config.get
      [SYMBOL_LOOKUP] Variable config not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.config.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for processor_type
      [NAME] Found name reference: processor_type
      [SYMBOL_LOOKUP] Variable processor_type not found in any scope
      -> Not module state
      [CALL] Found call: config.get
      [SYMBOL_LOOKUP] Variable config not found in any scope
            [INTERMEDIATE] Tracking chain steps for: config.get
            [INTERMEDIATE] Step 1: config.get
      -> Resolved to: inheritence_complex.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: config.get
      [SYMBOL_LOOKUP] Variable config not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processor_id = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: processor_id
      [SYMBOL_LOOKUP] Variable processor_id not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [NAME] Found name reference: processor_type
        [CACHE] processor_type -> inheritence_complex.processor_type (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: BasicDataProcessor
      [SYMBOL_LOOKUP] Variable BasicDataProcessor not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.BasicDataProcessor
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.BasicDataProcessor (class instantiation)
      [SYMBOL_UPDATE] Function: processor -> inheritence_complex.BasicDataProcessor
        [ASSIGNMENT] RESOLVED Updated symbol table: processor = inheritence_complex.BasicDataProcessor
      [NAME] Found name reference: processor
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      -> Not module state
      [CALL] Found call: BasicDataProcessor
      [SYMBOL_LOOKUP] Variable BasicDataProcessor not found in any scope
      -> Resolved to: inheritence_complex.BasicDataProcessor
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Variable processor_id not found in any scope
      [NAME] Found name reference: BasicDataProcessor
      [SYMBOL_LOOKUP] Variable BasicDataProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
        [CACHE] processor_id -> inheritence_complex.processor_id (cached)
      -> Not module state
      [NAME] Found name reference: processor_type
        [CACHE] processor_type -> inheritence_complex.processor_type (cached)
      -> Not module state
      [ASSIGNMENT] Processing: priority = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: priority
      [SYMBOL_LOOKUP] Variable priority not found in any scope
      -> Not module state
      [NAME] Found name reference: Priority
      [SYMBOL_LOOKUP] Variable Priority not found in any scope
      -> Not module state
      [CALL] Found call: config.get
    [CACHE] config.get -> inheritence_complex.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: config.get
            [INTERMEDIATE] Step 1: config.get
      -> Resolved to: inheritence_complex.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: config.get
        [CACHE] config.get -> inheritence_complex.config.get (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: AdvancedProcessor
      [SYMBOL_LOOKUP] Variable AdvancedProcessor not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.AdvancedProcessor
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.AdvancedProcessor (class instantiation)
      [SYMBOL_UPDATE] Function: processor -> inheritence_complex.AdvancedProcessor
        [ASSIGNMENT] RESOLVED Updated symbol table: processor = inheritence_complex.AdvancedProcessor
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: AdvancedProcessor
      [SYMBOL_LOOKUP] Variable AdvancedProcessor not found in any scope
      -> Resolved to: inheritence_complex.AdvancedProcessor
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Variable processor_id not found in any scope
        [FUNCTION_ARG] Checking argument: priority
      [SYMBOL_LOOKUP] Variable priority not found in any scope
      [NAME] Found name reference: AdvancedProcessor
      [SYMBOL_LOOKUP] Variable AdvancedProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
        [CACHE] processor_id -> inheritence_complex.processor_id (cached)
      -> Not module state
      [NAME] Found name reference: priority
        [CACHE] priority -> inheritence_complex.priority (cached)
      -> Not module state
      [NAME] Found name reference: processor_type
        [CACHE] processor_type -> inheritence_complex.processor_type (cached)
      -> Not module state
      [ASSIGNMENT] Processing: specialization = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: config.get
      [SYMBOL_LOOKUP] Variable config not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.config.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for specialization
      [NAME] Found name reference: specialization
      [SYMBOL_LOOKUP] Variable specialization not found in any scope
      -> Not module state
      [CALL] Found call: config.get
    [CACHE] config.get -> inheritence_complex.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: config.get
            [INTERMEDIATE] Step 1: config.get
      -> Resolved to: inheritence_complex.config.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: config.get
        [CACHE] config.get -> inheritence_complex.config.get (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: SpecializedProcessor
      [SYMBOL_LOOKUP] Variable SpecializedProcessor not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.SpecializedProcessor
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.SpecializedProcessor (class instantiation)
      [SYMBOL_UPDATE] Function: processor -> inheritence_complex.SpecializedProcessor
        [ASSIGNMENT] RESOLVED Updated symbol table: processor = inheritence_complex.SpecializedProcessor
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: SpecializedProcessor
      [SYMBOL_LOOKUP] Variable SpecializedProcessor not found in any scope
      -> Resolved to: inheritence_complex.SpecializedProcessor
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Variable processor_id not found in any scope
        [FUNCTION_ARG] Checking argument: specialization
      [SYMBOL_LOOKUP] Variable specialization not found in any scope
      [NAME] Found name reference: SpecializedProcessor
      [SYMBOL_LOOKUP] Variable SpecializedProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
        [CACHE] processor_id -> inheritence_complex.processor_id (cached)
      -> Not module state
      [NAME] Found name reference: specialization
        [CACHE] specialization -> inheritence_complex.specialization (cached)
      -> Not module state
      [NAME] Found name reference: processor_type
        [CACHE] processor_type -> inheritence_complex.processor_type (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: UltimateProcessor
      [SYMBOL_LOOKUP] Variable UltimateProcessor not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.UltimateProcessor (class instantiation)
      [SYMBOL_UPDATE] Function: processor -> inheritence_complex.UltimateProcessor
        [ASSIGNMENT] RESOLVED Updated symbol table: processor = inheritence_complex.UltimateProcessor
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: UltimateProcessor
      [SYMBOL_LOOKUP] Variable UltimateProcessor not found in any scope
      -> Resolved to: inheritence_complex.UltimateProcessor
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Variable processor_id not found in any scope
      [NAME] Found name reference: UltimateProcessor
      [SYMBOL_LOOKUP] Variable UltimateProcessor not found in any scope
      -> Not module state
      [NAME] Found name reference: processor_id
        [CACHE] processor_id -> inheritence_complex.processor_id (cached)
      -> Not module state
      [ASSIGNMENT] Processing: processor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: BasicDataProcessor
      [SYMBOL_LOOKUP] Variable BasicDataProcessor not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.BasicDataProcessor
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.BasicDataProcessor (class instantiation)
      [SYMBOL_UPDATE] Function: processor -> inheritence_complex.BasicDataProcessor
        [ASSIGNMENT] RESOLVED Updated symbol table: processor = inheritence_complex.BasicDataProcessor
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [CALL] Found call: BasicDataProcessor
    [CACHE] BasicDataProcessor -> inheritence_complex.BasicDataProcessor (cached)
      -> Resolved to: inheritence_complex.BasicDataProcessor
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: processor_id
      [SYMBOL_LOOKUP] Variable processor_id not found in any scope
      [NAME] Found name reference: BasicDataProcessor
        [CACHE] BasicDataProcessor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: processor_id
        [CACHE] processor_id -> inheritence_complex.processor_id (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: processor.enable_cache
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      -> Not module state
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [NAME] Found name reference: rule_config
      [SYMBOL_LOOKUP] Variable rule_config not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> inheritence_complex.config (cached)
      -> Not module state
      [ASSIGNMENT] Processing: rule_func = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: eval
      [SYMBOL_LOOKUP] Variable eval not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.eval
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for rule_func
      [NAME] Found name reference: rule_func
      [SYMBOL_LOOKUP] Variable rule_func not found in any scope
      -> Not module state
      [CALL] Found call: eval
      [SYMBOL_LOOKUP] Variable eval not found in any scope
      -> Resolved to: inheritence_complex.eval
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: eval
      [SYMBOL_LOOKUP] Variable eval not found in any scope
      -> Not module state
      [NAME] Found name reference: rule_config
        [CACHE] rule_config -> inheritence_complex.rule_config (cached)
      -> Not module state
      [CALL] Found call: processor.add_validation_rule
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
            [INTERMEDIATE] Tracking chain steps for: processor.add_validation_rule
            [INTERMEDIATE] Step 1: processor.add_validation_rule
      -> Resolved to: inheritence_complex.BasicDataProcessor.add_validation_rule
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: rule_func
      [SYMBOL_LOOKUP] Variable rule_func not found in any scope
      [ATTRIBUTE] Found attribute access: processor.add_validation_rule
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      [SYMBOL_LOOKUP] Found processor in function scope: inheritence_complex.BasicDataProcessor
      -> Not module state
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: rule_func
        [CACHE] rule_func -> inheritence_complex.rule_func (cached)
      -> Not module state
      [NAME] Found name reference: rule_config
        [CACHE] rule_config -> inheritence_complex.rule_config (cached)
      -> Not module state
      [NAME] Found name reference: processors
        [CACHE] processors -> inheritence_complex.processors (cached)
      -> Not module state
      [NAME] Found name reference: processor_id
        [CACHE] processor_id -> inheritence_complex.processor_id (cached)
      -> Not module state
      [NAME] Found name reference: processor
        [CACHE] processor -> inheritence_complex.BasicDataProcessor (cached)
      -> Not module state
      [NAME] Found name reference: processors
        [CACHE] processors -> inheritence_complex.processors (cached)
      -> Not module state
    [CONTEXT] Exited function: inheritence_complex.create_processor_hierarchy
    [FUNCTION_ANALYSIS] Completed analysis of: inheritence_complex.create_processor_hierarchy
        Calls: 0
        Instantiations: 4
        State Access: 0
    [IMPORT] time -> time
      [ASSIGNMENT] Processing: ultimate_processor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: UltimateProcessor
      [SYMBOL_LOOKUP] Variable UltimateProcessor not found in any scope
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.UltimateProcessor (class instantiation)
      [SYMBOL_UPDATE] Function: ultimate_processor -> inheritence_complex.UltimateProcessor
        [ASSIGNMENT] RESOLVED Updated symbol table: ultimate_processor = inheritence_complex.UltimateProcessor
      [ASSIGNMENT] Processing: test_data = ...
        [ASSIGNMENT] Non-call assignment
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ultimate_processor.ultimate_process
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor.ultimate_process
        [RETURN_TYPE_RESOLUTION] Resolving return type: ProcessingResult
        [RETURN_TYPE_RESOLUTION] Found in current module: inheritence_complex.ProcessingResult
      [TYPE_INFERENCE] RESOLVED Inferred type: inheritence_complex.ProcessingResult (from return type)
      [SYMBOL_UPDATE] Function: result -> inheritence_complex.ProcessingResult
        [ASSIGNMENT] RESOLVED Updated symbol table: result = inheritence_complex.ProcessingResult
      [ASSIGNMENT] Processing: stats = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ultimate_processor.get_statistics
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor.get_statistics
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for stats
      [ASSIGNMENT] Processing: cache_stats = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ultimate_processor.get_cache_statistics
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor.get_cache_statistics
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cache_stats
      [ASSIGNMENT] Processing: metric_summary = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: ultimate_processor.get_metric_summary
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [SYMBOL_LOOKUP] Found ultimate_processor in function scope: inheritence_complex.UltimateProcessor
      [TYPE_INFERENCE] Call resolved to: inheritence_complex.UltimateProcessor.get_metric_summary
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for metric_summary
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing proxy_handler.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Callable -> typing.Callable
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] TypeVar -> typing.TypeVar
    [FROM_IMPORT] Generic -> typing.Generic
    [FROM_IMPORT] Set -> typing.Set
    [FROM_IMPORT] ABC -> abc.ABC
    [FROM_IMPORT] abstractmethod -> abc.abstractmethod
    [FROM_IMPORT] wraps -> functools.wraps
    [IMPORT] threading -> threading
    [IMPORT] time -> time
    [FROM_IMPORT] dataclass -> dataclasses.dataclass
    [FROM_IMPORT] contextmanager -> contextlib.contextmanager
    [FROM_IMPORT] trace -> decorators.trace
    [FROM_IMPORT] monitor_performance -> decorators.monitor_performance
    [FROM_IMPORT] validate_auth -> decorators.validate_auth
    [FROM_IMPORT] rate_limit -> decorators.rate_limit
    [MODULE_STATE] T = TypeVar('T')
  [CLASS] Analyzing class: ProxyConfig
    [CONTEXT] Entered class: proxy_handler.ProxyConfig
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: proxy_handler.ProxyConfig
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: ProxyMetrics
    [CONTEXT] Entered class: proxy_handler.ProxyMetrics
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.ProxyMetrics.__init__
    [CONTEXT] Entered function: proxy_handler.ProxyMetrics.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.call_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.success_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_hits
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_misses
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.total_execution_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.average_execution_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_error_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [NAME] Found name reference: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      -> Not module state
      [NAME] Found name reference: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_success_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [NAME] Found name reference: Optional
        [CACHE] Optional -> typing.Optional (cached)
      -> Not module state
      [NAME] Found name reference: float
        [CACHE] float -> proxy_handler.float (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.ProxyMetrics.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.ProxyMetrics.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.ProxyMetrics.record_call
    [CONTEXT] Entered function: proxy_handler.ProxyMetrics.record_call (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'execution_time': 'float', 'success': 'bool', 'cache_hit': 'bool'}
        [ARG_TYPE] Processing type annotation for execution_time: float
      [SYMBOL_LOOKUP] Variable float not found in any scope
      [SYMBOL_UPDATE] Function: execution_time -> proxy_handler.float
        [ARG_TYPE] RESOLVED execution_time : proxy_handler.float
        [ARG_TYPE] Processing type annotation for success: bool
      [SYMBOL_LOOKUP] Variable bool not found in any scope
      [SYMBOL_UPDATE] Function: success -> proxy_handler.bool
        [ARG_TYPE] RESOLVED success : proxy_handler.bool
        [ARG_TYPE] Processing type annotation for cache_hit: bool
        [CACHE] bool -> proxy_handler.bool (cached)
      [SYMBOL_UPDATE] Function: cache_hit -> proxy_handler.bool
        [ARG_TYPE] RESOLVED cache_hit : proxy_handler.bool
      [ATTRIBUTE] Found attribute access: self.call_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.total_execution_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
      [SYMBOL_LOOKUP] Found execution_time in function scope: proxy_handler.float
      [SYMBOL_LOOKUP] Found execution_time in function scope: proxy_handler.float
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.average_execution_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.total_execution_time
        [CACHE] self.total_execution_time -> proxy_handler.ProxyMetrics.total_execution_time (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.call_count
        [CACHE] self.call_count -> proxy_handler.ProxyMetrics.call_count (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [NAME] Found name reference: success
      [SYMBOL_LOOKUP] Found success in function scope: proxy_handler.bool
      [SYMBOL_LOOKUP] Found success in function scope: proxy_handler.bool
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.success_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_success_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [CALL] Found call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.error_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_error_time
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: cache_hit
      [SYMBOL_LOOKUP] Found cache_hit in function scope: proxy_handler.bool
      [SYMBOL_LOOKUP] Found cache_hit in function scope: proxy_handler.bool
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_hits
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_misses
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.ProxyMetrics.record_call
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.ProxyMetrics.record_call
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.ProxyMetrics.get_success_rate
    [CONTEXT] Entered function: proxy_handler.ProxyMetrics.get_success_rate (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.success_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: max
      -> IGNORED (built-in function)
      [NAME] Found name reference: max
      [SYMBOL_LOOKUP] Variable max not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.call_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.ProxyMetrics.get_success_rate
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.ProxyMetrics.get_success_rate
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.ProxyMetrics.get_cache_hit_rate
    [CONTEXT] Entered function: proxy_handler.ProxyMetrics.get_cache_hit_rate (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: total_cacheable = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: total_cacheable
      [SYMBOL_LOOKUP] Variable total_cacheable not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_hits
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_misses
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache_hits
        [CACHE] self.cache_hits -> proxy_handler.ProxyMetrics.cache_hits (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.ProxyMetrics (cached)
      -> Not module state
      [CALL] Found call: max
      -> IGNORED (built-in function)
      [NAME] Found name reference: max
      [SYMBOL_LOOKUP] Variable max not found in any scope
      -> Not module state
      [NAME] Found name reference: total_cacheable
        [CACHE] total_cacheable -> proxy_handler.total_cacheable (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.ProxyMetrics.get_cache_hit_rate
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.ProxyMetrics.get_cache_hit_rate
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: proxy_handler.ProxyMetrics
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: BaseProxy
    [CONTEXT] Entered class: proxy_handler.BaseProxy
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy.__init__
    [CONTEXT] Entered function: proxy_handler.BaseProxy.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'target': 'Any', 'config': 'ProxyConfig'}
        [ARG_TYPE] Processing type annotation for target: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: target -> typing.Any
        [ARG_TYPE] RESOLVED target : typing.Any
        [ARG_TYPE] Processing type annotation for config: ProxyConfig
      [SYMBOL_LOOKUP] Variable ProxyConfig not found in any scope
      [SYMBOL_UPDATE] Function: config -> proxy_handler.ProxyConfig
        [ARG_TYPE] RESOLVED config : proxy_handler.ProxyConfig
      [ATTRIBUTE] Found attribute access: self.target
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: target
      [SYMBOL_LOOKUP] Found target in function scope: typing.Any
      [SYMBOL_LOOKUP] Found target in function scope: typing.Any
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      -> Not module state
      [CALL] Found call: ProxyConfig
      [SYMBOL_LOOKUP] Variable ProxyConfig not found in any scope
      -> Resolved to: proxy_handler.ProxyConfig
      -> ADDED to instantiations
      [NAME] Found name reference: ProxyConfig
        [CACHE] ProxyConfig -> proxy_handler.ProxyConfig (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [CALL] Found call: ProxyMetrics
      [SYMBOL_LOOKUP] Variable ProxyMetrics not found in any scope
      -> Resolved to: proxy_handler.ProxyMetrics
      -> ADDED to instantiations
      [NAME] Found name reference: ProxyMetrics
      [SYMBOL_LOOKUP] Variable ProxyMetrics not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
        [CACHE] Any -> typing.Any (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [CALL] Found call: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
            [INTERMEDIATE] Tracking chain steps for: threading.RLock
            [INTERMEDIATE] Step 1: threading.RLock
      -> Resolved to: threading.RLock
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [NAME] Found name reference: threading
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_failures
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_last_failure
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.BaseProxy.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy.__init__
        Calls: 1
        Instantiations: 2
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy._proxy_method_call
    [DECORATOR] @abstractmethod
    [CONTEXT] Entered function: proxy_handler.BaseProxy._proxy_method_call (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
    [CONTEXT] Exited function: proxy_handler.BaseProxy._proxy_method_call
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy._proxy_method_call
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy.__getattr__
    [DECORATOR] @trace
    [CONTEXT] Entered function: proxy_handler.BaseProxy.__getattr__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'name': 'str'}
        [ARG_TYPE] Processing type annotation for name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: name -> proxy_handler.str
        [ARG_TYPE] RESOLVED name : proxy_handler.str
      [CALL] Found call: hasattr
      [SYMBOL_LOOKUP] Variable hasattr not found in any scope
      -> Resolved to: proxy_handler.hasattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: name
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      [NAME] Found name reference: hasattr
      [SYMBOL_LOOKUP] Variable hasattr not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.target
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: name
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      -> Not module state
      [ASSIGNMENT] Processing: attr = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      [TYPE_INFERENCE] Call resolved to: proxy_handler.getattr
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for attr
      [NAME] Found name reference: attr
      [SYMBOL_LOOKUP] Variable attr not found in any scope
      -> Not module state
      [CALL] Found call: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Resolved to: proxy_handler.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: name
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      [NAME] Found name reference: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.target
        [CACHE] self.target -> proxy_handler.BaseProxy.target (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: name
        [CACHE] name -> proxy_handler.str (cached)
      -> Not module state
      [CALL] Found call: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      -> Resolved to: proxy_handler.callable
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: attr
      [SYMBOL_LOOKUP] Variable attr not found in any scope
      [NAME] Found name reference: callable
      [SYMBOL_LOOKUP] Variable callable not found in any scope
      -> Not module state
      [NAME] Found name reference: attr
        [CACHE] attr -> proxy_handler.attr (cached)
      -> Not module state
      [CALL] Found call: self._create_proxy_method
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._create_proxy_method
            [INTERMEDIATE] Step 1: self._create_proxy_method
      -> Resolved to: proxy_handler.BaseProxy._create_proxy_method
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: name
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found name in function scope: proxy_handler.str
        [FUNCTION_ARG] Checking argument: attr
      [SYMBOL_LOOKUP] Variable attr not found in any scope
      [ATTRIBUTE] Found attribute access: self._create_proxy_method
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: name
        [CACHE] name -> proxy_handler.str (cached)
      -> Not module state
      [NAME] Found name reference: attr
        [CACHE] attr -> proxy_handler.attr (cached)
      -> Not module state
      [NAME] Found name reference: attr
        [CACHE] attr -> proxy_handler.attr (cached)
      -> Not module state
      [CALL] Found call: AttributeError
      [SYMBOL_LOOKUP] Variable AttributeError not found in any scope
      -> Resolved to: proxy_handler.AttributeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: AttributeError
      [SYMBOL_LOOKUP] Variable AttributeError not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: type.__name__
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Not module state
      [CALL] Found call: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Resolved to: proxy_handler.type
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: type
      [SYMBOL_LOOKUP] Variable type not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.target
        [CACHE] self.target -> proxy_handler.BaseProxy.target (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: name
        [CACHE] name -> proxy_handler.str (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.BaseProxy.__getattr__
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy.__getattr__
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy._create_proxy_method
    [CONTEXT] Entered function: proxy_handler.BaseProxy._create_proxy_method (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str', 'original_method': 'Callable'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
        [ARG_TYPE] Processing type annotation for original_method: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: original_method -> typing.Callable
        [ARG_TYPE] RESOLVED original_method : typing.Callable
      [NESTED_FUNCTION] Analyzing nested function: proxy_wrapper
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 0 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str', 'original_method': 'Callable'}
      [CALL] Found call: self._proxy_method_call
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._proxy_method_call
            [INTERMEDIATE] Step 1: self._proxy_method_call
      -> Resolved to: proxy_handler.BaseProxy._proxy_method_call
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self._proxy_method_call
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: proxy_wrapper
      [SYMBOL_LOOKUP] Variable proxy_wrapper not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.BaseProxy._create_proxy_method
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy._create_proxy_method
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy._execute_with_circuit_breaker
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: proxy_handler.BaseProxy._execute_with_circuit_breaker (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str', 'method': 'Callable'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
        [ARG_TYPE] Processing type annotation for method: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: method -> typing.Callable
        [ARG_TYPE] RESOLVED method : typing.Callable
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_open
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_last_failure
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_open
        [CACHE] self.circuit_breaker_open -> proxy_handler.BaseProxy.circuit_breaker_open (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_failures
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [CALL] Found call: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Resolved to: proxy_handler.RuntimeError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: RuntimeError
      [SYMBOL_LOOKUP] Variable RuntimeError not found in any scope
      -> Not module state
      [NAME] Found name reference: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: method
      [SYMBOL_LOOKUP] Found method in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found method in function scope: typing.Callable
      [TYPE_INFERENCE] Call resolved to: typing.Callable
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: method
      [SYMBOL_LOOKUP] Found method in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found method in function scope: typing.Callable
      -> Resolved to: typing.Callable
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: method
      [SYMBOL_LOOKUP] Found method in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found method in function scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_failures
        [CACHE] self.circuit_breaker_failures -> proxy_handler.BaseProxy.circuit_breaker_failures (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> proxy_handler.result (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_failures
        [CACHE] self.circuit_breaker_failures -> proxy_handler.BaseProxy.circuit_breaker_failures (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_last_failure
        [CACHE] self.circuit_breaker_last_failure -> proxy_handler.BaseProxy.circuit_breaker_last_failure (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_failures
        [CACHE] self.circuit_breaker_failures -> proxy_handler.BaseProxy.circuit_breaker_failures (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.circuit_breaker_open
        [CACHE] self.circuit_breaker_open -> proxy_handler.BaseProxy.circuit_breaker_open (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.BaseProxy._execute_with_circuit_breaker
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy._execute_with_circuit_breaker
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy._get_cache_key
    [CONTEXT] Entered function: proxy_handler.BaseProxy._get_cache_key (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
      [NAME] Found name reference: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      -> Not module state
      [CALL] Found call: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Resolved to: proxy_handler.hash
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: hash
      [SYMBOL_LOOKUP] Variable hash not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> proxy_handler.str (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> proxy_handler.str (cached)
      -> Not module state
      [CALL] Found call: sorted
      -> IGNORED (built-in function)
      [NAME] Found name reference: sorted
      [SYMBOL_LOOKUP] Variable sorted not found in any scope
      -> Not module state
      [CALL] Found call: kwargs.items
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
            [INTERMEDIATE] Tracking chain steps for: kwargs.items
            [INTERMEDIATE] Step 1: kwargs.items
      -> Resolved to: proxy_handler.kwargs.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: kwargs.items
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.BaseProxy._get_cache_key
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy._get_cache_key
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.BaseProxy._metrics_context
    [DECORATOR] @contextmanager
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function proxy_handler.BaseProxy._metrics_context
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in proxy_handler.BaseProxy._metrics_context
    [CONTEXT] Entered function: proxy_handler.BaseProxy._metrics_context (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
      [ASSIGNMENT] Processing: start_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      [TYPE_INFERENCE] Call resolved to: time.time
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for start_time
      [NAME] Found name reference: start_time
      [SYMBOL_LOOKUP] Variable start_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: success = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: success
      [SYMBOL_LOOKUP] Variable success not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: cache_hit = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: cache_hit
      [SYMBOL_LOOKUP] Variable cache_hit not found in any scope
      -> Not module state
      [CALL] Found call: setattr
      [SYMBOL_LOOKUP] Variable setattr not found in any scope
      -> Resolved to: proxy_handler.setattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [NAME] Found name reference: setattr
      [SYMBOL_LOOKUP] Variable setattr not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: success = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: success
        [CACHE] success -> proxy_handler.success (cached)
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: success = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: success
        [CACHE] success -> proxy_handler.success (cached)
      -> Not module state
      [ASSIGNMENT] Processing: execution_time = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
      -> Not module state
      [CALL] Found call: time.time
    [CACHE] time.time -> time.time (cached)
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
        [CACHE] time.time -> time.time (cached)
      -> Not module state
      [NAME] Found name reference: time
        [CACHE] time -> time (cached)
      -> Not module state
      [NAME] Found name reference: start_time
        [CACHE] start_time -> proxy_handler.start_time (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cache_hit = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      [TYPE_INFERENCE] Call resolved to: proxy_handler.getattr
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cache_hit
      [NAME] Found name reference: cache_hit
        [CACHE] cache_hit -> proxy_handler.cache_hit (cached)
      -> Not module state
      [CALL] Found call: getattr
    [CACHE] getattr -> proxy_handler.getattr (cached)
      -> Resolved to: proxy_handler.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [NAME] Found name reference: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [CALL] Found call: setattr
    [CACHE] setattr -> proxy_handler.setattr (cached)
      -> Resolved to: proxy_handler.setattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [NAME] Found name reference: setattr
        [CACHE] setattr -> proxy_handler.setattr (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [CALL] Found call: self.metrics.record_call
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.metrics.record_call
            [INTERMEDIATE] Step 1: self.metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: proxy_handler.BaseProxy.metrics
            [INTERMEDIATE] Step 2: self.metrics.record_call
      -> Resolved to: proxy_handler.BaseProxy.metrics.record_call
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: execution_time
      [SYMBOL_LOOKUP] Variable execution_time not found in any scope
        [FUNCTION_ARG] Checking argument: success
      [SYMBOL_LOOKUP] Variable success not found in any scope
        [FUNCTION_ARG] Checking argument: cache_hit
      [SYMBOL_LOOKUP] Variable cache_hit not found in any scope
      [ATTRIBUTE] Found attribute access: self.metrics.record_call
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.BaseProxy (cached)
      -> Not module state
      [NAME] Found name reference: execution_time
        [CACHE] execution_time -> proxy_handler.execution_time (cached)
      -> Not module state
      [NAME] Found name reference: success
        [CACHE] success -> proxy_handler.success (cached)
      -> Not module state
      [NAME] Found name reference: cache_hit
        [CACHE] cache_hit -> proxy_handler.cache_hit (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.BaseProxy._metrics_context
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.BaseProxy._metrics_context
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: proxy_handler.BaseProxy
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: DataProxy
    [CONTEXT] Entered class: proxy_handler.DataProxy
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.DataProxy.__init__
    [CONTEXT] Entered function: proxy_handler.DataProxy.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'data_source': 'Any', 'config': 'ProxyConfig'}
        [ARG_TYPE] Processing type annotation for data_source: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: data_source -> typing.Any
        [ARG_TYPE] RESOLVED data_source : typing.Any
        [ARG_TYPE] Processing type annotation for config: ProxyConfig
      [SYMBOL_LOOKUP] Variable ProxyConfig not found in any scope
      [SYMBOL_UPDATE] Function: config -> proxy_handler.ProxyConfig
        [ARG_TYPE] RESOLVED config : proxy_handler.ProxyConfig
      [CALL] Found call: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: proxy_handler.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: data_source
      [SYMBOL_LOOKUP] Found data_source in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data_source in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Resolved to: proxy_handler.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: data_source
      [SYMBOL_LOOKUP] Found data_source in function scope: typing.Any
      [SYMBOL_LOOKUP] Found data_source in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.data_validators
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.data_transformers
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.DataProxy (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> proxy_handler.str (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: Callable
        [CACHE] Callable -> typing.Callable (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.DataProxy.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.DataProxy.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.DataProxy._proxy_method_call
    [DECORATOR] @trace
    [CONTEXT] Entered function: proxy_handler.DataProxy._proxy_method_call (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
      [CALL] Found call: self._metrics_context
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._metrics_context
            [INTERMEDIATE] Step 1: self._metrics_context
      -> Resolved to: proxy_handler.DataProxy._metrics_context
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self._metrics_context
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: mark_cache_hit
      [SYMBOL_LOOKUP] Variable mark_cache_hit not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config.cache_enabled
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.config
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.DataProxy (cached)
      -> Not module state
      [ASSIGNMENT] Processing: cache_key = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._get_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: proxy_handler.DataProxy._get_cache_key
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for cache_key
      [NAME] Found name reference: cache_key
      [SYMBOL_LOOKUP] Variable cache_key not found in any scope
      -> Not module state
      [CALL] Found call: self._get_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._get_cache_key
            [INTERMEDIATE] Step 1: self._get_cache_key
      -> Resolved to: proxy_handler.DataProxy._get_cache_key
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self._get_cache_key
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.DataProxy (cached)
      -> Not module state
      [NAME] Found name reference: method_name
        [CACHE] method_name -> proxy_handler.str (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.DataProxy (cached)
      -> Not module state
      [NAME] Found name reference: cache_key
        [CACHE] cache_key -> proxy_handler.cache_key (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.DataProxy (cached)
      -> Not module state
      [CALL] Found call: mark_cache_hit
      [SYMBOL_LOOKUP] Variable mark_cache_hit not found in any scope
      -> Resolved to: proxy_handler.mark_cache_hit
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: mark_cache_hit
        [CACHE] mark_cache_hit -> proxy_handler.mark_cache_hit (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.DataProxy._proxy_method_call
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.DataProxy._proxy_method_call
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: proxy_handler.DataProxy
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: HavenProxy
    [CONTEXT] Entered class: proxy_handler.HavenProxy
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.__init__
    [CONTEXT] Entered function: proxy_handler.HavenProxy.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'target': 'Any', 'config': 'ProxyConfig'}
        [ARG_TYPE] Processing type annotation for target: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      [SYMBOL_UPDATE] Function: target -> typing.Any
        [ARG_TYPE] RESOLVED target : typing.Any
        [ARG_TYPE] Processing type annotation for config: ProxyConfig
      [SYMBOL_LOOKUP] Variable ProxyConfig not found in any scope
      [SYMBOL_UPDATE] Function: config -> proxy_handler.ProxyConfig
        [ARG_TYPE] RESOLVED config : proxy_handler.ProxyConfig
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> proxy_handler.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: proxy_handler.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: target
      [SYMBOL_LOOKUP] Found target in function scope: typing.Any
      [SYMBOL_LOOKUP] Found target in function scope: typing.Any
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> proxy_handler.super (cached)
      -> Resolved to: proxy_handler.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: target
      [SYMBOL_LOOKUP] Found target in function scope: typing.Any
      [SYMBOL_LOOKUP] Found target in function scope: typing.Any
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
        [CACHE] Any -> typing.Any (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.room_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.HavenProxy (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> proxy_handler.str (cached)
      -> Not module state
      [NAME] Found name reference: Set
      [SYMBOL_LOOKUP] Variable Set not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> proxy_handler.str (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_user_credentials
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_user_credentials (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'auth_data': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for auth_data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: auth_data -> typing.Dict
        [ARG_TYPE] RESOLVED auth_data : typing.Dict
      [CALL] Found call: auth_data.get
      [SYMBOL_LOOKUP] Found auth_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found auth_data in function scope: typing.Dict
            [INTERMEDIATE] Tracking chain steps for: auth_data.get
            [INTERMEDIATE] Step 1: auth_data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: auth_data.get
      [SYMBOL_LOOKUP] Found auth_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found auth_data in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: auth_data
      [SYMBOL_LOOKUP] Found auth_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found auth_data in function scope: typing.Dict
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_user_credentials
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_user_credentials
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.get_user_preferences
    [CONTEXT] Entered function: proxy_handler.HavenProxy.get_user_preferences (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [CALL] Found call: self.user_cache.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_cache.get
            [INTERMEDIATE] Step 1: self.user_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: proxy_handler.HavenProxy.user_cache
            [INTERMEDIATE] Step 2: self.user_cache.get
      -> Resolved to: proxy_handler.HavenProxy.user_cache.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self.user_cache.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.get_user_preferences
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.get_user_preferences
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_room_access
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_room_access (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str', 'room_name': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
        [ARG_TYPE] Processing type annotation for room_name: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: room_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED room_name : proxy_handler.str
      [NAME] Found name reference: room_name
      [SYMBOL_LOOKUP] Found room_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found room_name in function scope: proxy_handler.str
      -> Not module state
      [CALL] Found call: self.room_permissions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.room_permissions.get
            [INTERMEDIATE] Step 1: self.room_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: proxy_handler.HavenProxy.room_permissions
            [INTERMEDIATE] Step 2: self.room_permissions.get
      -> Resolved to: proxy_handler.HavenProxy.room_permissions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self.room_permissions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.room_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_room_access
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_room_access
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.get_user_info
    [CONTEXT] Entered function: proxy_handler.HavenProxy.get_user_info (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.get_user_info
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.get_user_info
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_admin_role
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_admin_role (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [CALL] Found call: user_id.startswith
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
            [INTERMEDIATE] Tracking chain steps for: user_id.startswith
            [INTERMEDIATE] Step 1: user_id.startswith
      -> Resolved to: proxy_handler.str.startswith
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: user_id.startswith
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_admin_role
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_admin_role
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_moderator_role
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_moderator_role (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [CALL] Found call: user_id.startswith
    [CACHE] user_id.startswith -> proxy_handler.str.startswith (cached)
            [INTERMEDIATE] Tracking chain steps for: user_id.startswith
            [INTERMEDIATE] Step 1: user_id.startswith
      -> Resolved to: proxy_handler.str.startswith
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: user_id.startswith
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
      [CALL] Found call: self.validate_admin_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.validate_admin_role
            [INTERMEDIATE] Step 1: self.validate_admin_role
      -> Resolved to: proxy_handler.HavenProxy.validate_admin_role
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self.validate_admin_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> proxy_handler.str (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_moderator_role
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_moderator_role
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.get_runner_capabilities
    [CONTEXT] Entered function: proxy_handler.HavenProxy.get_runner_capabilities (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
    [CONTEXT] Exited function: proxy_handler.HavenProxy.get_runner_capabilities
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.get_runner_capabilities
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.get_guest_limitations
    [CONTEXT] Entered function: proxy_handler.HavenProxy.get_guest_limitations (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
    [CONTEXT] Exited function: proxy_handler.HavenProxy.get_guest_limitations
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.get_guest_limitations
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_message_content
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_message_content (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'message': 'str', 'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for message: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: message -> proxy_handler.str
        [ARG_TYPE] RESOLVED message : proxy_handler.str
        [ARG_TYPE] Processing type annotation for user_id: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [CALL] Found call: message.strip
      [SYMBOL_LOOKUP] Found message in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found message in function scope: proxy_handler.str
            [INTERMEDIATE] Tracking chain steps for: message.strip
            [INTERMEDIATE] Step 1: message.strip
      -> Resolved to: proxy_handler.str.strip
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: message.strip
      [SYMBOL_LOOKUP] Found message in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found message in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: message
      [SYMBOL_LOOKUP] Found message in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found message in function scope: proxy_handler.str
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> proxy_handler.len (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> proxy_handler.str (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_message_content
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_message_content
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.log_room_message
    [CONTEXT] Entered function: proxy_handler.HavenProxy.log_room_message (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'room': 'str', 'user_id': 'str', 'message': 'str'}
        [ARG_TYPE] Processing type annotation for room: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: room -> proxy_handler.str
        [ARG_TYPE] RESOLVED room : proxy_handler.str
        [ARG_TYPE] Processing type annotation for user_id: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
        [ARG_TYPE] Processing type annotation for message: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: message -> proxy_handler.str
        [ARG_TYPE] RESOLVED message : proxy_handler.str
    [CONTEXT] Exited function: proxy_handler.HavenProxy.log_room_message
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.log_room_message
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_direct_message_permission
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_direct_message_permission (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'sender_id': 'str', 'recipient_id': 'str'}
        [ARG_TYPE] Processing type annotation for sender_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: sender_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED sender_id : proxy_handler.str
        [ARG_TYPE] Processing type annotation for recipient_id: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: recipient_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED recipient_id : proxy_handler.str
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_direct_message_permission
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_direct_message_permission
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_broadcast_permission
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_broadcast_permission (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [CALL] Found call: self.validate_admin_role
    [CACHE] self.validate_admin_role -> proxy_handler.HavenProxy.validate_admin_role (cached)
            [INTERMEDIATE] Tracking chain steps for: self.validate_admin_role
            [INTERMEDIATE] Step 1: self.validate_admin_role
      -> Resolved to: proxy_handler.HavenProxy.validate_admin_role
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [ATTRIBUTE] Found attribute access: self.validate_admin_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_broadcast_permission
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_broadcast_permission
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.get_room_statistics
    [CONTEXT] Entered function: proxy_handler.HavenProxy.get_room_statistics (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'room_name': 'str'}
        [ARG_TYPE] Processing type annotation for room_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: room_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED room_name : proxy_handler.str
    [CONTEXT] Exited function: proxy_handler.HavenProxy.get_room_statistics
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.get_room_statistics
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.validate_event_data
    [CONTEXT] Entered function: proxy_handler.HavenProxy.validate_event_data (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'data': 'Dict[str, Any]', 'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for event_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: event_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED event_name : proxy_handler.str
        [ARG_TYPE] Processing type annotation for data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
        [ARG_TYPE] Processing type annotation for user_id: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
    [CONTEXT] Exited function: proxy_handler.HavenProxy.validate_event_data
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.validate_event_data
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.process_event
    [CONTEXT] Entered function: proxy_handler.HavenProxy.process_event (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 4 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'data': 'Dict[str, Any]', 'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for event_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: event_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED event_name : proxy_handler.str
        [ARG_TYPE] Processing type annotation for data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
        [ARG_TYPE] Processing type annotation for user_id: str
        [CACHE] str -> proxy_handler.str (cached)
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
    [CONTEXT] Exited function: proxy_handler.HavenProxy.process_event
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.process_event
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy.user_exists
    [CONTEXT] Entered function: proxy_handler.HavenProxy.user_exists (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> proxy_handler.str
        [ARG_TYPE] RESOLVED user_id : proxy_handler.str
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found user_id in function scope: proxy_handler.str
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy.user_exists
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy.user_exists
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.HavenProxy._proxy_method_call
    [CONTEXT] Entered function: proxy_handler.HavenProxy._proxy_method_call (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
      [CALL] Found call: getattr
    [CACHE] getattr -> proxy_handler.getattr (cached)
      -> Resolved to: proxy_handler.getattr
      -> REJECTED (not in catalog or allowlist)
      [CALL] Found call: getattr
    [CACHE] getattr -> proxy_handler.getattr (cached)
      -> Resolved to: proxy_handler.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [NAME] Found name reference: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.target
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.HavenProxy._proxy_method_call
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.HavenProxy._proxy_method_call
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: proxy_handler.HavenProxy
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: UserProxy
    [CONTEXT] Entered class: proxy_handler.UserProxy
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.UserProxy.__init__
    [CONTEXT] Entered function: proxy_handler.UserProxy.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_data': 'Dict[str, Any]', 'config': 'ProxyConfig'}
        [ARG_TYPE] Processing type annotation for user_data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: user_data -> typing.Dict
        [ARG_TYPE] RESOLVED user_data : typing.Dict
        [ARG_TYPE] Processing type annotation for config: ProxyConfig
      [SYMBOL_LOOKUP] Variable ProxyConfig not found in any scope
      [SYMBOL_UPDATE] Function: config -> proxy_handler.ProxyConfig
        [ARG_TYPE] RESOLVED config : proxy_handler.ProxyConfig
      [CALL] Found call: super.__init__
    [CACHE] super.__init__ -> proxy_handler.super.__init__ (cached)
            [INTERMEDIATE] Tracking chain steps for: super.__init__
            [INTERMEDIATE] Step 1: super.__init__
      -> Resolved to: proxy_handler.super.__init__
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_data
      [SYMBOL_LOOKUP] Found user_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found user_data in function scope: typing.Dict
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [ATTRIBUTE] Found attribute access: super.__init__
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [CALL] Found call: super
    [CACHE] super -> proxy_handler.super (cached)
      -> Resolved to: proxy_handler.super
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: super
      [SYMBOL_LOOKUP] Variable super not found in any scope
      -> Not module state
      [NAME] Found name reference: user_data
      [SYMBOL_LOOKUP] Found user_data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found user_data in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      [SYMBOL_LOOKUP] Found config in function scope: proxy_handler.ProxyConfig
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_data
        [CACHE] user_data -> typing.Dict (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.UserProxy.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.UserProxy.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.UserProxy.has_role
    [CONTEXT] Entered function: proxy_handler.UserProxy.has_role (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'role': 'str'}
        [ARG_TYPE] Processing type annotation for role: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: role -> proxy_handler.str
        [ARG_TYPE] RESOLVED role : proxy_handler.str
      [ASSIGNMENT] Processing: user_roles = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.user_data.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: proxy_handler.UserProxy.user_data.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for user_roles
      [NAME] Found name reference: user_roles
      [SYMBOL_LOOKUP] Variable user_roles not found in any scope
      -> Not module state
      [CALL] Found call: self.user_data.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_data.get
            [INTERMEDIATE] Step 1: self.user_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: proxy_handler.UserProxy.user_data
            [INTERMEDIATE] Step 2: self.user_data.get
      -> Resolved to: proxy_handler.UserProxy.user_data.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.user_data.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: role
      [SYMBOL_LOOKUP] Found role in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found role in function scope: proxy_handler.str
      -> Not module state
      [NAME] Found name reference: user_roles
        [CACHE] user_roles -> proxy_handler.user_roles (cached)
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.UserProxy.has_role
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.UserProxy.has_role
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.UserProxy.id
    [DECORATOR] @property
    [CONTEXT] Entered function: proxy_handler.UserProxy.id (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: self.user_data.get
    [CACHE] self.user_data.get -> proxy_handler.UserProxy.user_data.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.user_data.get
            [INTERMEDIATE] Step 1: self.user_data
    [CACHE] self.user_data -> proxy_handler.UserProxy.user_data (cached)
            [INTERMEDIATE] Step 1 resolved to: proxy_handler.UserProxy.user_data
            [INTERMEDIATE] Step 2: self.user_data.get
      -> Resolved to: proxy_handler.UserProxy.user_data.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.user_data.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.UserProxy.id
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.UserProxy.id
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: proxy_handler.UserProxy._proxy_method_call
    [CONTEXT] Entered function: proxy_handler.UserProxy._proxy_method_call (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'method_name': 'str'}
        [ARG_TYPE] Processing type annotation for method_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: method_name -> proxy_handler.str
        [ARG_TYPE] RESOLVED method_name : proxy_handler.str
      [CALL] Found call: hasattr
    [CACHE] hasattr -> proxy_handler.hasattr (cached)
      -> Resolved to: proxy_handler.hasattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [NAME] Found name reference: hasattr
      [SYMBOL_LOOKUP] Variable hasattr not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_data
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      -> Not module state
      [CALL] Found call: getattr
    [CACHE] getattr -> proxy_handler.getattr (cached)
      -> Resolved to: proxy_handler.getattr
      -> REJECTED (not in catalog or allowlist)
      [CALL] Found call: getattr
    [CACHE] getattr -> proxy_handler.getattr (cached)
      -> Resolved to: proxy_handler.getattr
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: method_name
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [SYMBOL_LOOKUP] Found method_name in function scope: proxy_handler.str
      [NAME] Found name reference: getattr
      [SYMBOL_LOOKUP] Variable getattr not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_data
        [CACHE] self.user_data -> proxy_handler.UserProxy.user_data (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> proxy_handler.UserProxy (cached)
      -> Not module state
      [NAME] Found name reference: method_name
        [CACHE] method_name -> proxy_handler.str (cached)
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
    [CONTEXT] Exited function: proxy_handler.UserProxy._proxy_method_call
    [FUNCTION_ANALYSIS] Completed analysis of: proxy_handler.UserProxy._proxy_method_call
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: proxy_handler.UserProxy
    [SYMBOL_TABLE] Exited class scope
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing session_manager.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Callable -> typing.Callable
    [FROM_IMPORT] Set -> typing.Set
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] dataclass -> dataclasses.dataclass
    [FROM_IMPORT] field -> dataclasses.field
    [FROM_IMPORT] datetime -> datetime.datetime
    [FROM_IMPORT] timedelta -> datetime.timedelta
    [IMPORT] uuid -> uuid
    [IMPORT] threading -> threading
    [FROM_IMPORT] contextmanager -> contextlib.contextmanager
    [FROM_IMPORT] Enum -> enum.Enum
    [FROM_IMPORT] auto -> enum.auto
    [FROM_IMPORT] trace -> decorators.trace
    [FROM_IMPORT] monitor_performance -> decorators.monitor_performance
    [FROM_IMPORT] validate_auth -> decorators.validate_auth
    [FROM_IMPORT] rate_limit -> decorators.rate_limit
    [FROM_IMPORT] HavenProxy -> proxy_handler.HavenProxy
    [FROM_IMPORT] UserProxy -> proxy_handler.UserProxy
    [FROM_IMPORT] DataProxy -> proxy_handler.DataProxy
  [CLASS] Analyzing class: SessionState
    [CONTEXT] Entered class: session_manager.SessionState
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: session_manager.SessionState
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: UserRole
    [CONTEXT] Entered class: session_manager.UserRole
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: session_manager.UserRole
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: SessionMetrics
    [CONTEXT] Entered class: session_manager.SessionMetrics
    [SYMBOL_TABLE] Entered class scope
    [CONTEXT] Exited class: session_manager.SessionMetrics
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: UserSession
    [CONTEXT] Entered class: session_manager.UserSession
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.UserSession.is_valid
    [CONTEXT] Entered function: session_manager.UserSession.is_valid (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.state
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.ACTIVE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.IDLE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
        [CACHE] SessionState -> session_manager.SessionState (cached)
      -> Not module state
      [CALL] Found call: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.expires_at
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.UserSession (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.UserSession.is_valid
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.UserSession.is_valid
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.UserSession.is_expired
    [CONTEXT] Entered function: session_manager.UserSession.is_expired (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.expires_at
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
    [CONTEXT] Exited function: session_manager.UserSession.is_expired
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.UserSession.is_expired
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.UserSession.time_until_expiry
    [CONTEXT] Entered function: session_manager.UserSession.time_until_expiry (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.expires_at
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
    [CONTEXT] Exited function: session_manager.UserSession.time_until_expiry
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.UserSession.time_until_expiry
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.UserSession.update_activity
    [CONTEXT] Entered function: session_manager.UserSession.update_activity (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.last_activity
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metrics.last_activity
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metrics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.last_activity
        [CACHE] self.last_activity -> session_manager.UserSession.last_activity (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metrics.activity_count
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.metrics
        [CACHE] self.metrics -> session_manager.UserSession.metrics (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.UserSession (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.UserSession.update_activity
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.UserSession.update_activity
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: session_manager.UserSession
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: SessionManager
    [CONTEXT] Entered class: session_manager.SessionManager
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.__init__
    [CONTEXT] Entered function: session_manager.SessionManager.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'haven_proxy': 'HavenProxy'}
        [ARG_TYPE] Processing type annotation for haven_proxy: HavenProxy
      [SYMBOL_LOOKUP] Variable HavenProxy not found in any scope
      [SYMBOL_UPDATE] Function: haven_proxy -> proxy_handler.HavenProxy
        [ARG_TYPE] RESOLVED haven_proxy : proxy_handler.HavenProxy
      [ATTRIBUTE] Found attribute access: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: haven_proxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: UserSession
      [SYMBOL_LOOKUP] Variable UserSession not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
            [INTERMEDIATE] Tracking chain steps for: threading.RLock
            [INTERMEDIATE] Step 1: threading.RLock
      -> Resolved to: threading.RLock
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: threading.RLock
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [NAME] Found name reference: threading
      [SYMBOL_LOOKUP] Variable threading not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_callbacks
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.cleanup_interval
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.max_sessions_per_user
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_handlers
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: List
        [CACHE] List -> typing.List (cached)
      -> Not module state
      [NAME] Found name reference: Callable
        [CACHE] Callable -> typing.Callable (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.__init__
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.create_session
    [DECORATOR] @trace
    [CONTEXT] Entered function: session_manager.SessionManager.create_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 5 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'Optional[str]', 'session_duration': 'timedelta', 'ip_address': 'str', 'user_agent': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> typing.Optional
        [ARG_TYPE] RESOLVED user_id : typing.Optional
        [ARG_TYPE] Processing type annotation for session_duration: timedelta
      [SYMBOL_LOOKUP] Variable timedelta not found in any scope
      [SYMBOL_UPDATE] Function: session_duration -> datetime.timedelta
        [ARG_TYPE] RESOLVED session_duration : datetime.timedelta
        [ARG_TYPE] Processing type annotation for ip_address: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: ip_address -> session_manager.str
        [ARG_TYPE] RESOLVED ip_address : session_manager.str
        [ARG_TYPE] Processing type annotation for user_agent: str
        [CACHE] str -> session_manager.str (cached)
      [SYMBOL_UPDATE] Function: user_agent -> session_manager.str
        [ARG_TYPE] RESOLVED user_agent : session_manager.str
      [ASSIGNMENT] Processing: session_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.str
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session_id
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      -> Not module state
      [CALL] Found call: str
      -> IGNORED (built-in function)
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: uuid.uuid4
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
            [INTERMEDIATE] Tracking chain steps for: uuid.uuid4
            [INTERMEDIATE] Step 1: uuid.uuid4
      -> Resolved to: uuid.uuid4
      -> ADDED to calls (external library)
      [ATTRIBUTE] Found attribute access: uuid.uuid4
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [NAME] Found name reference: uuid
      [SYMBOL_LOOKUP] Variable uuid not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: current_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      [TYPE_INFERENCE] Call resolved to: datetime.datetime.now
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for current_time
      [NAME] Found name reference: current_time
      [SYMBOL_LOOKUP] Variable current_time not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      -> Not module state
      [ASSIGNMENT] Processing: user_role = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._determine_user_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager._determine_user_role
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserRole
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserRole
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserRole (from return type)
      [SYMBOL_UPDATE] Function: user_role -> session_manager.UserRole
        [ASSIGNMENT] RESOLVED Updated symbol table: user_role = session_manager.UserRole
      [NAME] Found name reference: user_role
      [SYMBOL_LOOKUP] Found user_role in function scope: session_manager.UserRole
      [SYMBOL_LOOKUP] Found user_role in function scope: session_manager.UserRole
      -> Not module state
      [CALL] Found call: self._determine_user_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._determine_user_role
            [INTERMEDIATE] Step 1: self._determine_user_role
      -> Resolved to: session_manager.SessionManager._determine_user_role
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [ATTRIBUTE] Found attribute access: self._determine_user_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_role = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: user_role
        [CACHE] user_role -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.GUEST
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: UserSession
      [SYMBOL_LOOKUP] Variable UserSession not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (class instantiation)
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session = session_manager.UserSession
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: UserSession
      [SYMBOL_LOOKUP] Variable UserSession not found in any scope
      -> Resolved to: session_manager.UserSession
      -> ADDED to instantiations
      [NAME] Found name reference: UserSession
      [SYMBOL_LOOKUP] Variable UserSession not found in any scope
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [NAME] Found name reference: user_role
        [CACHE] user_role -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.CREATED
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> session_manager.current_time (cached)
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> session_manager.current_time (cached)
      -> Not module state
      [NAME] Found name reference: session_duration
      [SYMBOL_LOOKUP] Found session_duration in function scope: datetime.timedelta
      [SYMBOL_LOOKUP] Found session_duration in function scope: datetime.timedelta
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> session_manager.current_time (cached)
      -> Not module state
      [NAME] Found name reference: ip_address
      [SYMBOL_LOOKUP] Found ip_address in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found ip_address in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: user_agent
      [SYMBOL_LOOKUP] Found user_agent in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_agent in function scope: session_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.permissions
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [CALL] Found call: self._get_role_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._get_role_permissions
            [INTERMEDIATE] Step 1: self._get_role_permissions
      -> Resolved to: session_manager.SessionManager._get_role_permissions
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_role
      [SYMBOL_LOOKUP] Found user_role in function scope: session_manager.UserRole
      [SYMBOL_LOOKUP] Found user_role in function scope: session_manager.UserRole
      [ATTRIBUTE] Found attribute access: self._get_role_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_role
        [CACHE] user_role -> session_manager.UserRole (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [CALL] Found call: self.haven_proxy.user_exists
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.user_exists
            [INTERMEDIATE] Step 1: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.user_exists
      -> Resolved to: session_manager.SessionManager.haven_proxy.user_exists
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [ATTRIBUTE] Found attribute access: self.haven_proxy.user_exists
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.preferences
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [CALL] Found call: self.haven_proxy.get_user_preferences
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.get_user_preferences
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.get_user_preferences
      -> Resolved to: session_manager.SessionManager.haven_proxy.get_user_preferences
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [ATTRIBUTE] Found attribute access: self.haven_proxy.get_user_preferences
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
        [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.max_sessions_per_user
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: oldest_session_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] No name parts extracted from call
        [ASSIGNMENT] FAILED Could not infer type for oldest_session_id
      [NAME] Found name reference: oldest_session_id
      [SYMBOL_LOOKUP] Variable oldest_session_id not found in any scope
      -> Not module state
      [CALL] Found call: self.user_sessions.pop
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.pop
            [INTERMEDIATE] Step 1: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.pop
      -> Resolved to: session_manager.SessionManager.user_sessions.pop
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.user_sessions.pop
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [NAME] Found name reference: oldest_session_id
        [CACHE] oldest_session_id -> session_manager.oldest_session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: self._terminate_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._terminate_session
            [INTERMEDIATE] Step 1: self._terminate_session
      -> Resolved to: session_manager.SessionManager._terminate_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: oldest_session_id
      [SYMBOL_LOOKUP] Variable oldest_session_id not found in any scope
      [ATTRIBUTE] Found attribute access: self._terminate_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: oldest_session_id
        [CACHE] oldest_session_id -> session_manager.oldest_session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [CALL] Found call: self.user_sessions.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.append
            [INTERMEDIATE] Step 1: self.user_sessions
    [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.append
      -> Resolved to: session_manager.SessionManager.user_sessions.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.user_sessions.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
        [CACHE] self.current_session_id -> session_manager.SessionManager.current_session_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [CALL] Found call: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.create_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.create_session
        Calls: 5
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.create_user_session
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: session_manager.SessionManager.create_user_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str', 'session_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
        [ARG_TYPE] Processing type annotation for session_id: str
        [CACHE] str -> session_manager.str (cached)
      [SYMBOL_UPDATE] Function: session_id -> session_manager.str
        [ARG_TYPE] RESOLVED session_id : session_manager.str
      [CALL] Found call: self.haven_proxy.validate_user_credentials
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.validate_user_credentials
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.validate_user_credentials
      -> Resolved to: session_manager.SessionManager.haven_proxy.validate_user_credentials
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.haven_proxy.validate_user_credentials
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [CALL] Found call: ValueError
      [SYMBOL_LOOKUP] Variable ValueError not found in any scope
      -> Resolved to: session_manager.ValueError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: ValueError
      [SYMBOL_LOOKUP] Variable ValueError not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: ValueError
    [CACHE] ValueError -> session_manager.ValueError (cached)
      -> Resolved to: session_manager.ValueError
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: ValueError
        [CACHE] ValueError -> session_manager.ValueError (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_id
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_role
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self._determine_user_role
    [CACHE] self._determine_user_role -> session_manager.SessionManager._determine_user_role (cached)
            [INTERMEDIATE] Tracking chain steps for: self._determine_user_role
            [INTERMEDIATE] Step 1: self._determine_user_role
      -> Resolved to: session_manager.SessionManager._determine_user_role
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self._determine_user_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.ACTIVE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.permissions
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self._get_role_permissions
    [CACHE] self._get_role_permissions -> session_manager.SessionManager._get_role_permissions (cached)
            [INTERMEDIATE] Tracking chain steps for: self._get_role_permissions
            [INTERMEDIATE] Step 1: self._get_role_permissions
      -> Resolved to: session_manager.SessionManager._get_role_permissions
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._get_role_permissions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_role
        [CACHE] session.user_role -> session_manager.session.user_role (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.preferences
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self.haven_proxy.get_user_preferences
    [CACHE] self.haven_proxy.get_user_preferences -> session_manager.SessionManager.haven_proxy.get_user_preferences (cached)
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.get_user_preferences
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.get_user_preferences
      -> Resolved to: session_manager.SessionManager.haven_proxy.get_user_preferences
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.haven_proxy.get_user_preferences
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
        [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: session.update_activity
      [SYMBOL_LOOKUP] Variable session not found in any scope
            [INTERMEDIATE] Tracking chain steps for: session.update_activity
            [INTERMEDIATE] Step 1: session.update_activity
      -> Resolved to: session_manager.session.update_activity
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.update_activity
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: self.user_sessions.append
    [CACHE] self.user_sessions.append -> session_manager.SessionManager.user_sessions.append (cached)
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.append
            [INTERMEDIATE] Step 1: self.user_sessions
    [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.append
      -> Resolved to: session_manager.SessionManager.user_sessions.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.user_sessions.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.create_user_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.create_user_session
        Calls: 3
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_current_session
    [DECORATOR] @trace
    [CONTEXT] Entered function: session_manager.SessionManager.get_current_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.get
            [INTERMEDIATE] Step 1: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.get
      -> Resolved to: session_manager.SessionManager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
        [CACHE] self.current_session_id -> session_manager.SessionManager.current_session_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.is_valid
      [SYMBOL_LOOKUP] Variable session not found in any scope
            [INTERMEDIATE] Tracking chain steps for: session.is_valid
            [INTERMEDIATE] Step 1: session.is_valid
      -> Resolved to: session_manager.session.is_valid
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_valid
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.update_activity
    [CACHE] session.update_activity -> session_manager.session.update_activity (cached)
            [INTERMEDIATE] Tracking chain steps for: session.update_activity
            [INTERMEDIATE] Step 1: session.update_activity
      -> Resolved to: session_manager.session.update_activity
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.update_activity
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.is_expired
      [SYMBOL_LOOKUP] Variable session not found in any scope
            [INTERMEDIATE] Tracking chain steps for: session.is_expired
            [INTERMEDIATE] Step 1: session.is_expired
      -> Resolved to: session_manager.session.is_expired
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_expired
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self._expire_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._expire_session
            [INTERMEDIATE] Step 1: self._expire_session
      -> Resolved to: session_manager.SessionManager._expire_session
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self._expire_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
        [CACHE] self.current_session_id -> session_manager.SessionManager.current_session_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_current_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_current_session
        Calls: 2
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_current_session_id
    [CONTEXT] Entered function: session_manager.SessionManager.get_current_session_id (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session = session_manager.UserSession
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.get_current_session
            [INTERMEDIATE] Step 1: self.get_current_session
      -> Resolved to: session_manager.SessionManager.get_current_session
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.session_id
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_current_session_id
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_current_session_id
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_current_user_id
    [CONTEXT] Entered function: session_manager.SessionManager.get_current_user_id (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session = session_manager.UserSession
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: self.get_current_session
    [CACHE] self.get_current_session -> session_manager.SessionManager.get_current_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self.get_current_session
            [INTERMEDIATE] Step 1: self.get_current_session
      -> Resolved to: session_manager.SessionManager.get_current_session
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_id
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_current_user_id
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_current_user_id
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_current_user
    [CONTEXT] Entered function: session_manager.SessionManager.get_current_user (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Function: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: str
      [SYMBOL_LOOKUP] Found user_id in function scope: str
      -> Not module state
      [CALL] Found call: self.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.get_current_user_id
            [INTERMEDIATE] Step 1: self.get_current_user_id
      -> Resolved to: session_manager.SessionManager.get_current_user_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [CALL] Found call: self.haven_proxy.get_user_info
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.get_user_info
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.get_user_info
      -> Resolved to: session_manager.SessionManager.haven_proxy.get_user_info
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: str
      [SYMBOL_LOOKUP] Found user_id in function scope: str
      [ATTRIBUTE] Found attribute access: self.haven_proxy.get_user_info
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_current_user
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_current_user
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_current_timestamp
    [CONTEXT] Entered function: session_manager.SessionManager.get_current_timestamp (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
    [IMPORT] time -> time
      [CALL] Found call: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
            [INTERMEDIATE] Tracking chain steps for: time.time
            [INTERMEDIATE] Step 1: time.time
      -> Resolved to: time.time
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: time.time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
      [NAME] Found name reference: time
      [SYMBOL_LOOKUP] Variable time not found in any scope
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_current_timestamp
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_current_timestamp
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.validate_session
    [DECORATOR] @trace
    [CONTEXT] Entered function: session_manager.SessionManager.validate_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_id': 'str'}
        [ARG_TYPE] Processing type annotation for session_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: session_id -> session_manager.str
        [ARG_TYPE] RESOLVED session_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.get
    [CACHE] self.active_sessions.get -> session_manager.SessionManager.active_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.get
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.get
      -> Resolved to: session_manager.SessionManager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.is_expired
    [CACHE] session.is_expired -> session_manager.session.is_expired (cached)
            [INTERMEDIATE] Tracking chain steps for: session.is_expired
            [INTERMEDIATE] Step 1: session.is_expired
      -> Resolved to: session_manager.session.is_expired
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_expired
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self._expire_session
    [CACHE] self._expire_session -> session_manager.SessionManager._expire_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self._expire_session
            [INTERMEDIATE] Step 1: self._expire_session
      -> Resolved to: session_manager.SessionManager._expire_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self._expire_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: session.is_valid
    [CACHE] session.is_valid -> session_manager.session.is_valid (cached)
            [INTERMEDIATE] Tracking chain steps for: session.is_valid
            [INTERMEDIATE] Step 1: session.is_valid
      -> Resolved to: session_manager.session.is_valid
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_valid
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.update_activity
    [CACHE] session.update_activity -> session_manager.session.update_activity (cached)
            [INTERMEDIATE] Tracking chain steps for: session.update_activity
            [INTERMEDIATE] Step 1: session.update_activity
      -> Resolved to: session_manager.session.update_activity
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.update_activity
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.validate_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.validate_session
        Calls: 2
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.validate_room_access
    [DECORATOR] @validate_auth(required_role='user')
    [CONTEXT] Entered function: session_manager.SessionManager.validate_room_access (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'room_name': 'str'}
        [ARG_TYPE] Processing type annotation for room_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: room_name -> session_manager.str
        [ARG_TYPE] RESOLVED room_name : session_manager.str
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session = session_manager.UserSession
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: self.get_current_session
    [CACHE] self.get_current_session -> session_manager.SessionManager.get_current_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self.get_current_session
            [INTERMEDIATE] Step 1: self.get_current_session
      -> Resolved to: session_manager.SessionManager.get_current_session
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ASSIGNMENT] Processing: access_granted = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.haven_proxy.validate_room_access
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.haven_proxy.validate_room_access
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for access_granted
      [NAME] Found name reference: access_granted
      [SYMBOL_LOOKUP] Variable access_granted not found in any scope
      -> Not module state
      [CALL] Found call: self.haven_proxy.validate_room_access
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.validate_room_access
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.validate_room_access
      -> Resolved to: session_manager.SessionManager.haven_proxy.validate_room_access
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Found room_name in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found room_name in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.haven_proxy.validate_room_access
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_id
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [NAME] Found name reference: room_name
      [SYMBOL_LOOKUP] Found room_name in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found room_name in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: access_granted
        [CACHE] access_granted -> session_manager.access_granted (cached)
      -> Not module state
      [CALL] Found call: session.metrics.rooms_joined.add
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
            [INTERMEDIATE] Tracking chain steps for: session.metrics.rooms_joined.add
            [INTERMEDIATE] Step 1: session.metrics
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
            [INTERMEDIATE] Step 1 resolved to: session_manager.UserSession.metrics
            [INTERMEDIATE] Step 2: session.metrics.rooms_joined
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
            [INTERMEDIATE] Step 2 resolved to: session_manager.UserSession.metrics.rooms_joined
            [INTERMEDIATE] Step 3: session.metrics.rooms_joined.add
      -> Resolved to: session_manager.UserSession.metrics.rooms_joined.add
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Found room_name in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found room_name in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: session.metrics.rooms_joined.add
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.rooms_joined
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.context_data
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: access_granted
        [CACHE] access_granted -> session_manager.access_granted (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.validate_room_access
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.validate_room_access
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_user_room
    [CONTEXT] Entered function: session_manager.SessionManager.get_user_room (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'Optional[str]'}
        [ARG_TYPE] Processing type annotation for user_id: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> typing.Optional
        [ARG_TYPE] RESOLVED user_id : typing.Optional
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      [SYMBOL_LOOKUP] Found user_id in function scope: typing.Optional
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Function: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [CALL] Found call: self.get_current_user_id
    [CACHE] self.get_current_user_id -> session_manager.SessionManager.get_current_user_id (cached)
            [INTERMEDIATE] Tracking chain steps for: self.get_current_user_id
            [INTERMEDIATE] Step 1: self.get_current_user_id
      -> Resolved to: session_manager.SessionManager.get_current_user_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> typing.Optional (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_user_room
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_user_room
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_user_rooms
    [CONTEXT] Entered function: session_manager.SessionManager.get_user_rooms (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: rooms = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: rooms
      [SYMBOL_LOOKUP] Variable rooms not found in any scope
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      -> Not module state
      [CALL] Found call: self.user_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.get
            [INTERMEDIATE] Step 1: self.user_sessions
    [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.get
      -> Resolved to: session_manager.SessionManager.user_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.user_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.get
    [CACHE] self.active_sessions.get -> session_manager.SessionManager.active_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.get
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.get
      -> Resolved to: session_manager.SessionManager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: rooms.extend
      [SYMBOL_LOOKUP] Variable rooms not found in any scope
            [INTERMEDIATE] Tracking chain steps for: rooms.extend
            [INTERMEDIATE] Step 1: rooms.extend
      -> Resolved to: session_manager.rooms.extend
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: rooms.extend
      [SYMBOL_LOOKUP] Variable rooms not found in any scope
      -> Not module state
      [NAME] Found name reference: rooms
        [CACHE] rooms -> session_manager.rooms (cached)
      -> Not module state
      [CALL] Found call: list
      -> IGNORED (built-in function)
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.rooms_joined
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: rooms.append
      [SYMBOL_LOOKUP] Variable rooms not found in any scope
            [INTERMEDIATE] Tracking chain steps for: rooms.append
            [INTERMEDIATE] Step 1: rooms.append
      -> Resolved to: session_manager.rooms.append
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: rooms.append
      [SYMBOL_LOOKUP] Variable rooms not found in any scope
      -> Not module state
      [NAME] Found name reference: rooms
        [CACHE] rooms -> session_manager.rooms (cached)
      -> Not module state
      [CALL] Found call: self.get_user_room
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.get_user_room
            [INTERMEDIATE] Step 1: self.get_user_room
      -> Resolved to: session_manager.SessionManager.get_user_room
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.get_user_room
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: list
      -> IGNORED (built-in function)
      [NAME] Found name reference: list
        [CACHE] list -> session_manager.list (cached)
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      -> Not module state
      [NAME] Found name reference: rooms
        [CACHE] rooms -> session_manager.rooms (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_user_rooms
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_user_rooms
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_active_users
    [CONTEXT] Entered function: session_manager.SessionManager.get_active_users (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: active_users = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.set
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for active_users
      [NAME] Found name reference: active_users
      [SYMBOL_LOOKUP] Variable active_users not found in any scope
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      -> Not module state
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.values
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.values
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.values
      -> Resolved to: session_manager.SessionManager.active_sessions.values
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.values
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: session.is_valid
    [CACHE] session.is_valid -> session_manager.session.is_valid (cached)
            [INTERMEDIATE] Tracking chain steps for: session.is_valid
            [INTERMEDIATE] Step 1: session.is_valid
      -> Resolved to: session_manager.session.is_valid
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_valid
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_role
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.GUEST
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [CALL] Found call: active_users.add
      [SYMBOL_LOOKUP] Variable active_users not found in any scope
            [INTERMEDIATE] Tracking chain steps for: active_users.add
            [INTERMEDIATE] Step 1: active_users.add
      -> Resolved to: session_manager.active_users.add
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: active_users.add
      [SYMBOL_LOOKUP] Variable active_users not found in any scope
      -> Not module state
      [NAME] Found name reference: active_users
        [CACHE] active_users -> session_manager.active_users (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_id
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: list
      -> IGNORED (built-in function)
      [NAME] Found name reference: list
      [SYMBOL_LOOKUP] Variable list not found in any scope
      -> Not module state
      [NAME] Found name reference: active_users
        [CACHE] active_users -> session_manager.active_users (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_active_users
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_active_users
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.cleanup_user_session
    [DECORATOR] @trace
    [CONTEXT] Entered function: session_manager.SessionManager.cleanup_user_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: session_ids = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] No name parts extracted from call
        [ASSIGNMENT] FAILED Could not infer type for session_ids
      [NAME] Found name reference: session_ids
      [SYMBOL_LOOKUP] Variable session_ids not found in any scope
      -> Not module state
      [CALL] Found call: self.user_sessions.get.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.get.copy
            [INTERMEDIATE] Step 1: self.user_sessions
    [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.get
    [CACHE] self.user_sessions.get -> session_manager.SessionManager.user_sessions.get (cached)
            [INTERMEDIATE] Step 2 resolved to: session_manager.SessionManager.user_sessions.get
            [INTERMEDIATE] Step 3: self.user_sessions.get.copy
      -> Resolved to: session_manager.SessionManager.user_sessions.get.copy
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.user_sessions.get.copy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [CALL] Found call: self.user_sessions.get
    [CACHE] self.user_sessions.get -> session_manager.SessionManager.user_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.get
            [INTERMEDIATE] Step 1: self.user_sessions
    [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.get
      -> Resolved to: session_manager.SessionManager.user_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.user_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      -> Not module state
      [NAME] Found name reference: session_ids
        [CACHE] session_ids -> session_manager.session_ids (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.TERMINATED
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.cleanup_user_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.cleanup_user_session
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.destroy_session
    [DECORATOR] @trace
    [CONTEXT] Entered function: session_manager.SessionManager.destroy_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_id': 'str'}
        [ARG_TYPE] Processing type annotation for session_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: session_id -> session_manager.str
        [ARG_TYPE] RESOLVED session_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.get
    [CACHE] self.active_sessions.get -> session_manager.SessionManager.active_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.get
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.get
      -> Resolved to: session_manager.SessionManager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.user_id
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.user_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.user_id (cached)
      -> Not module state
      [CALL] Found call: self.user_sessions.remove
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_sessions.remove
            [INTERMEDIATE] Step 1: self.user_sessions
    [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.user_sessions
            [INTERMEDIATE] Step 2: self.user_sessions.remove
      -> Resolved to: session_manager.SessionManager.user_sessions.remove
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.user_sessions.remove
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.user_id (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.user_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
        [CACHE] self.user_sessions -> session_manager.SessionManager.user_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.user_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
        [CACHE] self.current_session_id -> session_manager.SessionManager.current_session_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.TERMINATED
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.destroy_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.destroy_session
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager._determine_user_role
    [CONTEXT] Entered function: session_manager.SessionManager._determine_user_role (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
      [CALL] Found call: self.haven_proxy.validate_admin_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.validate_admin_role
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.validate_admin_role
      -> Resolved to: session_manager.SessionManager.haven_proxy.validate_admin_role
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.haven_proxy.validate_admin_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.ADMIN
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [CALL] Found call: self.haven_proxy.validate_moderator_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.haven_proxy.validate_moderator_role
            [INTERMEDIATE] Step 1: self.haven_proxy
    [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.haven_proxy
            [INTERMEDIATE] Step 2: self.haven_proxy.validate_moderator_role
      -> Resolved to: session_manager.SessionManager.haven_proxy.validate_moderator_role
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.haven_proxy.validate_moderator_role
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.haven_proxy
        [CACHE] self.haven_proxy -> session_manager.SessionManager.haven_proxy (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.MODERATOR
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [CALL] Found call: user_id.startswith
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
            [INTERMEDIATE] Tracking chain steps for: user_id.startswith
            [INTERMEDIATE] Step 1: user_id.startswith
      -> Resolved to: session_manager.str.startswith
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: user_id.startswith
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.GUEST
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.USER
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager._determine_user_role
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager._determine_user_role
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager._get_role_permissions
    [CONTEXT] Entered function: session_manager.SessionManager._get_role_permissions (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'role': 'UserRole'}
        [ARG_TYPE] Processing type annotation for role: UserRole
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      [SYMBOL_UPDATE] Function: role -> session_manager.UserRole
        [ARG_TYPE] RESOLVED role : session_manager.UserRole
      [ASSIGNMENT] Processing: base_permissions = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: base_permissions
      [SYMBOL_LOOKUP] Variable base_permissions not found in any scope
      -> Not module state
      [NAME] Found name reference: role
      [SYMBOL_LOOKUP] Found role in function scope: session_manager.UserRole
      [SYMBOL_LOOKUP] Found role in function scope: session_manager.UserRole
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.GUEST
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [NAME] Found name reference: base_permissions
        [CACHE] base_permissions -> session_manager.base_permissions (cached)
      -> Not module state
      [NAME] Found name reference: role
        [CACHE] role -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.USER
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [NAME] Found name reference: base_permissions
        [CACHE] base_permissions -> session_manager.base_permissions (cached)
      -> Not module state
      [NAME] Found name reference: role
        [CACHE] role -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.MODERATOR
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [NAME] Found name reference: base_permissions
        [CACHE] base_permissions -> session_manager.base_permissions (cached)
      -> Not module state
      [NAME] Found name reference: role
        [CACHE] role -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.ADMIN
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [NAME] Found name reference: base_permissions
        [CACHE] base_permissions -> session_manager.base_permissions (cached)
      -> Not module state
      [NAME] Found name reference: role
        [CACHE] role -> session_manager.UserRole (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: UserRole.SYSTEM
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
        [CACHE] UserRole -> session_manager.UserRole (cached)
      -> Not module state
      [NAME] Found name reference: base_permissions
        [CACHE] base_permissions -> session_manager.base_permissions (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager._get_role_permissions
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager._get_role_permissions
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager._expire_session
    [CONTEXT] Entered function: session_manager.SessionManager._expire_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_id': 'str'}
        [ARG_TYPE] Processing type annotation for session_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: session_id -> session_manager.str
        [ARG_TYPE] RESOLVED session_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.get
    [CACHE] self.active_sessions.get -> session_manager.SessionManager.active_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.get
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.get
      -> Resolved to: session_manager.SessionManager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.EXPIRED
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager._expire_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager._expire_session
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager._terminate_session
    [CONTEXT] Entered function: session_manager.SessionManager._terminate_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_id': 'str', 'reason': 'str'}
        [ARG_TYPE] Processing type annotation for session_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: session_id -> session_manager.str
        [ARG_TYPE] RESOLVED session_id : session_manager.str
        [ARG_TYPE] Processing type annotation for reason: str
        [CACHE] str -> session_manager.str (cached)
      [SYMBOL_UPDATE] Function: reason -> session_manager.str
        [ARG_TYPE] RESOLVED reason : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.get
    [CACHE] self.active_sessions.get -> session_manager.SessionManager.active_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.get
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.get
      -> Resolved to: session_manager.SessionManager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.TERMINATED
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.context_data
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: reason
      [SYMBOL_LOOKUP] Found reason in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found reason in function scope: session_manager.str
      -> Not module state
      [CALL] Found call: self._trigger_event
    [CACHE] self._trigger_event -> session_manager.SessionManager._trigger_event (cached)
            [INTERMEDIATE] Tracking chain steps for: self._trigger_event
            [INTERMEDIATE] Step 1: self._trigger_event
      -> Resolved to: session_manager.SessionManager._trigger_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      [ATTRIBUTE] Found attribute access: self._trigger_event
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: self.destroy_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.destroy_session
            [INTERMEDIATE] Step 1: self.destroy_session
      -> Resolved to: session_manager.SessionManager.destroy_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.destroy_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.str (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager._terminate_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager._terminate_session
        Calls: 2
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager._trigger_event
    [CONTEXT] Entered function: session_manager.SessionManager._trigger_event (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'session': 'UserSession'}
        [ARG_TYPE] Processing type annotation for event_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: event_name -> session_manager.str
        [ARG_TYPE] RESOLVED event_name : session_manager.str
        [ARG_TYPE] Processing type annotation for session: UserSession
      [SYMBOL_LOOKUP] Variable UserSession not found in any scope
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ARG_TYPE] RESOLVED session : session_manager.UserSession
      [NAME] Found name reference: handler
      [SYMBOL_LOOKUP] Variable handler not found in any scope
      -> Not module state
      [CALL] Found call: self.event_handlers.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.event_handlers.get
            [INTERMEDIATE] Step 1: self.event_handlers
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.event_handlers
            [INTERMEDIATE] Step 2: self.event_handlers.get
      -> Resolved to: session_manager.SessionManager.event_handlers.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found event_name in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.event_handlers.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_handlers
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found event_name in function scope: session_manager.str
      -> Not module state
      [CALL] Found call: handler
      [SYMBOL_LOOKUP] Variable handler not found in any scope
      -> Resolved to: session_manager.handler
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [NAME] Found name reference: handler
        [CACHE] handler -> session_manager.handler (cached)
      -> Not module state
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: Exception
      [SYMBOL_LOOKUP] Variable Exception not found in any scope
      -> Not module state
      [CALL] Found call: print
      -> IGNORED (built-in function)
      [NAME] Found name reference: print
      [SYMBOL_LOOKUP] Variable print not found in any scope
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: e
      [SYMBOL_LOOKUP] Variable e not found in any scope
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager._trigger_event
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager._trigger_event
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.get_session_statistics
    [DECORATOR] @trace
    [DECORATOR] @rate_limit(calls=100, period=60)
    [CONTEXT] Entered function: session_manager.SessionManager.get_session_statistics (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: total_sessions = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.len
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for total_sessions
      [NAME] Found name reference: total_sessions
      [SYMBOL_LOOKUP] Variable total_sessions not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: active_sessions = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.sum
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for active_sessions
      [NAME] Found name reference: active_sessions
      [SYMBOL_LOOKUP] Variable active_sessions not found in any scope
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      -> Not module state
      [NAME] Found name reference: s
      [SYMBOL_LOOKUP] Variable s not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.values
    [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.values
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.values
      -> Resolved to: session_manager.SessionManager.active_sessions.values
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.values
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.state
      [SYMBOL_LOOKUP] Variable s not found in any scope
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.ACTIVE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: idle_sessions = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.sum
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for idle_sessions
      [NAME] Found name reference: idle_sessions
      [SYMBOL_LOOKUP] Variable idle_sessions not found in any scope
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
        [CACHE] sum -> session_manager.sum (cached)
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [CALL] Found call: self.active_sessions.values
    [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.values
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.values
      -> Resolved to: session_manager.SessionManager.active_sessions.values
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.values
        [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.state
        [CACHE] s.state -> session_manager.s.state (cached)
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.IDLE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
        [CACHE] SessionState -> session_manager.SessionState (cached)
      -> Not module state
      [ASSIGNMENT] Processing: role_distribution = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: role_distribution
      [SYMBOL_LOOKUP] Variable role_distribution not found in any scope
      -> Not module state
      [NAME] Found name reference: role
      [SYMBOL_LOOKUP] Variable role not found in any scope
      -> Not module state
      [NAME] Found name reference: UserRole
      [SYMBOL_LOOKUP] Variable UserRole not found in any scope
      -> Not module state
      [NAME] Found name reference: role_distribution
        [CACHE] role_distribution -> session_manager.role_distribution (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: role.name
      [SYMBOL_LOOKUP] Variable role not found in any scope
      -> Not module state
      [NAME] Found name reference: role
        [CACHE] role -> session_manager.role (cached)
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
        [CACHE] sum -> session_manager.sum (cached)
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [CALL] Found call: self.active_sessions.values
    [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.values
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.values
      -> Resolved to: session_manager.SessionManager.active_sessions.values
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.values
        [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.user_role
      [SYMBOL_LOOKUP] Variable s not found in any scope
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [NAME] Found name reference: role
        [CACHE] role -> session_manager.role (cached)
      -> Not module state
      [ASSIGNMENT] Processing: total_activity = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.sum
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for total_activity
      [NAME] Found name reference: total_activity
      [SYMBOL_LOOKUP] Variable total_activity not found in any scope
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
        [CACHE] sum -> session_manager.sum (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.metrics.activity_count
      [SYMBOL_LOOKUP] Variable s not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.metrics
      [SYMBOL_LOOKUP] Variable s not found in any scope
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [CALL] Found call: self.active_sessions.values
    [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.values
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.values
      -> Resolved to: session_manager.SessionManager.active_sessions.values
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.values
        [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: total_data_transferred = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: sum
      [SYMBOL_LOOKUP] Variable sum not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.sum
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for total_data_transferred
      [NAME] Found name reference: total_data_transferred
      [SYMBOL_LOOKUP] Variable total_data_transferred not found in any scope
      -> Not module state
      [CALL] Found call: sum
      -> IGNORED (built-in function)
      [NAME] Found name reference: sum
        [CACHE] sum -> session_manager.sum (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.metrics.data_transferred
      [SYMBOL_LOOKUP] Variable s not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: s.metrics
        [CACHE] s.metrics -> session_manager.s.metrics (cached)
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [NAME] Found name reference: s
        [CACHE] s -> session_manager.s (cached)
      -> Not module state
      [CALL] Found call: self.active_sessions.values
    [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.values
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.values
      -> Resolved to: session_manager.SessionManager.active_sessions.values
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.values
        [CACHE] self.active_sessions.values -> session_manager.SessionManager.active_sessions.values (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: total_sessions
        [CACHE] total_sessions -> session_manager.total_sessions (cached)
      -> Not module state
      [NAME] Found name reference: active_sessions
        [CACHE] active_sessions -> session_manager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: idle_sessions
        [CACHE] idle_sessions -> session_manager.idle_sessions (cached)
      -> Not module state
      [NAME] Found name reference: role_distribution
        [CACHE] role_distribution -> session_manager.role_distribution (cached)
      -> Not module state
      [NAME] Found name reference: total_activity
        [CACHE] total_activity -> session_manager.total_activity (cached)
      -> Not module state
      [NAME] Found name reference: total_data_transferred
        [CACHE] total_data_transferred -> session_manager.total_data_transferred (cached)
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
        [CACHE] len -> session_manager.len (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.get_session_statistics
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.get_session_statistics
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.session_context
    [DECORATOR] @contextmanager
      [CODE_STANDARD_VIOLATION] MISSING_RETURN_TYPE: Function session_manager.SessionManager.session_context
      [IMPACT] Cannot infer return type - chained method calls may fail
      [ACTION_REQUIRED] Add appropriate type annotation
      [CODE_QUALITY] Found 1 violations in session_manager.SessionManager.session_context
    [CONTEXT] Entered function: session_manager.SessionManager.session_context (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_id': 'str'}
        [ARG_TYPE] Processing type annotation for session_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: session_id -> session_manager.str
        [ARG_TYPE] RESOLVED session_id : session_manager.str
      [ASSIGNMENT] Processing: original_session_id = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: original_session_id
      [SYMBOL_LOOKUP] Variable original_session_id not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
        [CACHE] self.current_session_id -> session_manager.SessionManager.current_session_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found session_id in function scope: session_manager.str
      -> Not module state
      [CALL] Found call: self.get_current_session
    [CACHE] self.get_current_session -> session_manager.SessionManager.get_current_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self.get_current_session
            [INTERMEDIATE] Step 1: self.get_current_session
      -> Resolved to: session_manager.SessionManager.get_current_session
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: self.get_current_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.current_session_id
        [CACHE] self.current_session_id -> session_manager.SessionManager.current_session_id (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: original_session_id
        [CACHE] original_session_id -> session_manager.original_session_id (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.session_context
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.session_context
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.add_session_event_handler
    [CONTEXT] Entered function: session_manager.SessionManager.add_session_event_handler (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'handler': 'Callable'}
        [ARG_TYPE] Processing type annotation for event_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: event_name -> session_manager.str
        [ARG_TYPE] RESOLVED event_name : session_manager.str
        [ARG_TYPE] Processing type annotation for handler: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: handler -> typing.Callable
        [ARG_TYPE] RESOLVED handler : typing.Callable
      [NAME] Found name reference: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found event_name in function scope: session_manager.str
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_handlers
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_handlers
        [CACHE] self.event_handlers -> session_manager.SessionManager.event_handlers (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: self.event_handlers.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.event_handlers.append
            [INTERMEDIATE] Step 1: self.event_handlers
    [CACHE] self.event_handlers -> session_manager.SessionManager.event_handlers (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.event_handlers
            [INTERMEDIATE] Step 2: self.event_handlers.append
      -> Resolved to: session_manager.SessionManager.event_handlers.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: handler
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [ATTRIBUTE] Found attribute access: self.event_handlers.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_handlers
        [CACHE] self.event_handlers -> session_manager.SessionManager.event_handlers (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: handler
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.add_session_event_handler
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.add_session_event_handler
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionManager.periodic_cleanup
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: session_manager.SessionManager.periodic_cleanup (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
      [ASSIGNMENT] Processing: expired_count = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: expired_count
      [SYMBOL_LOOKUP] Variable expired_count not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: idle_count = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: idle_count
      [SYMBOL_LOOKUP] Variable idle_count not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: sessions_to_expire = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: sessions_to_expire
      [SYMBOL_LOOKUP] Variable sessions_to_expire not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: sessions_to_idle = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: sessions_to_idle
      [SYMBOL_LOOKUP] Variable sessions_to_idle not found in any scope
      -> Not module state
      [ASSIGNMENT] Processing: current_time = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      [TYPE_INFERENCE] Call resolved to: datetime.datetime.now
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for current_time
      [NAME] Found name reference: current_time
      [SYMBOL_LOOKUP] Variable current_time not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      -> Not module state
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.active_sessions.items
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.active_sessions.items
            [INTERMEDIATE] Step 1: self.active_sessions
    [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionManager.active_sessions
            [INTERMEDIATE] Step 2: self.active_sessions.items
      -> Resolved to: session_manager.SessionManager.active_sessions.items
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: self.active_sessions.items
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: session.is_expired
    [CACHE] session.is_expired -> session_manager.session.is_expired (cached)
            [INTERMEDIATE] Tracking chain steps for: session.is_expired
            [INTERMEDIATE] Step 1: session.is_expired
      -> Resolved to: session_manager.session.is_expired
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_expired
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: sessions_to_expire.append
      [SYMBOL_LOOKUP] Variable sessions_to_expire not found in any scope
            [INTERMEDIATE] Tracking chain steps for: sessions_to_expire.append
            [INTERMEDIATE] Step 1: sessions_to_expire.append
      -> Resolved to: session_manager.sessions_to_expire.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: sessions_to_expire.append
      [SYMBOL_LOOKUP] Variable sessions_to_expire not found in any scope
      -> Not module state
      [NAME] Found name reference: sessions_to_expire
        [CACHE] sessions_to_expire -> session_manager.sessions_to_expire (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.ACTIVE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: current_time
        [CACHE] current_time -> session_manager.current_time (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.last_activity
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: timedelta
      [SYMBOL_LOOKUP] Variable timedelta not found in any scope
      -> Resolved to: datetime.timedelta
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: timedelta
      [SYMBOL_LOOKUP] Variable timedelta not found in any scope
      -> Not module state
      [CALL] Found call: sessions_to_idle.append
      [SYMBOL_LOOKUP] Variable sessions_to_idle not found in any scope
            [INTERMEDIATE] Tracking chain steps for: sessions_to_idle.append
            [INTERMEDIATE] Step 1: sessions_to_idle.append
      -> Resolved to: session_manager.sessions_to_idle.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: sessions_to_idle.append
      [SYMBOL_LOOKUP] Variable sessions_to_idle not found in any scope
      -> Not module state
      [NAME] Found name reference: sessions_to_idle
        [CACHE] sessions_to_idle -> session_manager.sessions_to_idle (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: sessions_to_expire
        [CACHE] sessions_to_expire -> session_manager.sessions_to_expire (cached)
      -> Not module state
      [CALL] Found call: self._expire_session
    [CACHE] self._expire_session -> session_manager.SessionManager._expire_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self._expire_session
            [INTERMEDIATE] Step 1: self._expire_session
      -> Resolved to: session_manager.SessionManager._expire_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: self._expire_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: expired_count
        [CACHE] expired_count -> session_manager.expired_count (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: sessions_to_idle
        [CACHE] sessions_to_idle -> session_manager.sessions_to_idle (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.active_sessions
        [CACHE] self.active_sessions -> session_manager.SessionManager.active_sessions (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.state
        [CACHE] session.state -> session_manager.session.state (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: SessionState.IDLE
      [SYMBOL_LOOKUP] Variable SessionState not found in any scope
      -> Not module state
      [NAME] Found name reference: SessionState
        [CACHE] SessionState -> session_manager.SessionState (cached)
      -> Not module state
      [NAME] Found name reference: idle_count
        [CACHE] idle_count -> session_manager.idle_count (cached)
      -> Not module state
      [NAME] Found name reference: expired_count
        [CACHE] expired_count -> session_manager.expired_count (cached)
      -> Not module state
      [NAME] Found name reference: idle_count
        [CACHE] idle_count -> session_manager.idle_count (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionManager.periodic_cleanup
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionManager.periodic_cleanup
        Calls: 1
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: session_manager.SessionManager
    [SYMBOL_TABLE] Exited class scope
      [ANNOTATED_ASSIGNMENT] _global_session_manager : Optional[SessionManager]
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Function: _global_session_manager -> typing.Optional
        -> Updated symbol table: _global_session_manager : typing.Optional
  [FUNCTION] Analyzing function: initialize_session_manager
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.initialize_session_manager
    [CONTEXT] Entered function: session_manager.initialize_session_manager (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'haven_proxy': 'HavenProxy'}
        [ARG_TYPE] Processing type annotation for haven_proxy: HavenProxy
      [SYMBOL_LOOKUP] Variable HavenProxy not found in any scope
      [SYMBOL_UPDATE] Function: haven_proxy -> proxy_handler.HavenProxy
        [ARG_TYPE] RESOLVED haven_proxy : proxy_handler.HavenProxy
      [ASSIGNMENT] Processing: _global_session_manager = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.SessionManager (class instantiation)
      [SYMBOL_UPDATE] Function: _global_session_manager -> session_manager.SessionManager
        [ASSIGNMENT] RESOLVED Updated symbol table: _global_session_manager = session_manager.SessionManager
      [NAME] Found name reference: _global_session_manager
      [SYMBOL_LOOKUP] Found _global_session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _global_session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [CALL] Found call: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      -> Resolved to: session_manager.SessionManager
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: haven_proxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [NAME] Found name reference: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      -> Not module state
      [NAME] Found name reference: haven_proxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      -> Not module state
      [NAME] Found name reference: _global_session_manager
        [CACHE] _global_session_manager -> session_manager.SessionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.initialize_session_manager
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.initialize_session_manager
        Calls: 0
        Instantiations: 1
        State Access: 0
  [FUNCTION] Analyzing function: get_current_session
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.get_current_session
    [CONTEXT] Entered function: session_manager.get_current_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: _global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> Resolved to state: session_manager._global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _global_session_manager.get_current_session
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _global_session_manager.get_current_session
            [INTERMEDIATE] Step 1: _global_session_manager.get_current_session
      -> Resolved to: session_manager._global_session_manager.get_current_session
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: _global_session_manager.get_current_session
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> Not module state
      [NAME] Found name reference: _global_session_manager
        [CACHE] _global_session_manager -> session_manager._global_session_manager (cached)
      -> Resolved to state: session_manager._global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: session_manager.get_current_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.get_current_session
        Calls: 0
        Instantiations: 0
        State Access: 1
  [FUNCTION] Analyzing function: get_current_user
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.get_current_user
    [CONTEXT] Entered function: session_manager.get_current_user (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: _global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> Resolved to state: session_manager._global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _global_session_manager.get_current_user
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _global_session_manager.get_current_user
            [INTERMEDIATE] Step 1: _global_session_manager.get_current_user
      -> Resolved to: session_manager._global_session_manager.get_current_user
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: _global_session_manager.get_current_user
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> Not module state
      [NAME] Found name reference: _global_session_manager
        [CACHE] _global_session_manager -> session_manager._global_session_manager (cached)
      -> Resolved to state: session_manager._global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: session_manager.get_current_user
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.get_current_user
        Calls: 0
        Instantiations: 0
        State Access: 1
  [FUNCTION] Analyzing function: get_current_user_id
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.get_current_user_id
    [CONTEXT] Entered function: session_manager.get_current_user_id (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 0 arguments
      [NAME] Found name reference: _global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> Resolved to state: session_manager._global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _global_session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _global_session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: _global_session_manager.get_current_user_id
      -> Resolved to: session_manager._global_session_manager.get_current_user_id
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: _global_session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> Not module state
      [NAME] Found name reference: _global_session_manager
        [CACHE] _global_session_manager -> session_manager._global_session_manager (cached)
      -> Resolved to state: session_manager._global_session_manager
      [SYMBOL_LOOKUP] Variable _global_session_manager not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: session_manager.get_current_user_id
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.get_current_user_id
        Calls: 0
        Instantiations: 0
        State Access: 1
  [CLASS] Analyzing class: SessionInteractionManager
    [CONTEXT] Entered class: session_manager.SessionInteractionManager
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionInteractionManager.__init__
    [CONTEXT] Entered function: session_manager.SessionInteractionManager.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_manager': 'SessionManager'}
        [ARG_TYPE] Processing type annotation for session_manager: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      [SYMBOL_UPDATE] Function: session_manager -> session_manager.SessionManager
        [ARG_TYPE] RESOLVED session_manager : session_manager.SessionManager
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session_manager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.interaction_log
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: Dict
        [CACHE] Dict -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: Set
      [SYMBOL_LOOKUP] Variable Set not found in any scope
      -> Not module state
      [NAME] Found name reference: str
        [CACHE] str -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_analytics
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [CALL] Found call: SessionAnalytics
      [SYMBOL_LOOKUP] Variable SessionAnalytics not found in any scope
      -> Resolved to: session_manager.SessionAnalytics
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: session_manager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [NAME] Found name reference: SessionAnalytics
      [SYMBOL_LOOKUP] Variable SessionAnalytics not found in any scope
      -> Not module state
      [NAME] Found name reference: session_manager
        [CACHE] session_manager -> session_manager.SessionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionInteractionManager.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionInteractionManager.__init__
        Calls: 0
        Instantiations: 1
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionInteractionManager.record_user_interaction
    [DECORATOR] @trace
    [CONTEXT] Entered function: session_manager.SessionInteractionManager.record_user_interaction (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 5 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user1_id': 'str', 'user2_id': 'str', 'interaction_type': 'str', 'data': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for user1_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user1_id -> session_manager.str
        [ARG_TYPE] RESOLVED user1_id : session_manager.str
        [ARG_TYPE] Processing type annotation for user2_id: str
        [CACHE] str -> session_manager.str (cached)
      [SYMBOL_UPDATE] Function: user2_id -> session_manager.str
        [ARG_TYPE] RESOLVED user2_id : session_manager.str
        [ARG_TYPE] Processing type annotation for interaction_type: str
        [CACHE] str -> session_manager.str (cached)
      [SYMBOL_UPDATE] Function: interaction_type -> session_manager.str
        [ARG_TYPE] RESOLVED interaction_type : session_manager.str
        [ARG_TYPE] Processing type annotation for data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: interaction = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: interaction
      [SYMBOL_LOOKUP] Variable interaction not found in any scope
      -> Not module state
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: user1_id
      [SYMBOL_LOOKUP] Found user1_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user1_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: user2_id
      [SYMBOL_LOOKUP] Found user2_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user2_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: interaction_type
      [SYMBOL_LOOKUP] Found interaction_type in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found interaction_type in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in function scope: typing.Dict
      -> Not module state
      [CALL] Found call: self.interaction_log.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.interaction_log.append
            [INTERMEDIATE] Step 1: self.interaction_log
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.interaction_log
            [INTERMEDIATE] Step 2: self.interaction_log.append
      -> Resolved to: session_manager.SessionInteractionManager.interaction_log.append
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: interaction
      [SYMBOL_LOOKUP] Variable interaction not found in any scope
      [ATTRIBUTE] Found attribute access: self.interaction_log.append
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.interaction_log
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: interaction
        [CACHE] interaction -> session_manager.interaction (cached)
      -> Not module state
      [NAME] Found name reference: user1_id
        [CACHE] user1_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
        [CACHE] self.user_relationships -> session_manager.SessionInteractionManager.user_relationships (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user1_id
        [CACHE] user1_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
      [SYMBOL_LOOKUP] Variable set not found in any scope
      -> Not module state
      [NAME] Found name reference: user2_id
        [CACHE] user2_id -> session_manager.str (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
        [CACHE] self.user_relationships -> session_manager.SessionInteractionManager.user_relationships (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
        [CACHE] self.user_relationships -> session_manager.SessionInteractionManager.user_relationships (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user2_id
        [CACHE] user2_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: set
      -> IGNORED (built-in function)
      [NAME] Found name reference: set
        [CACHE] set -> session_manager.set (cached)
      -> Not module state
      [CALL] Found call: self.user_relationships.add
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.user_relationships.add
            [INTERMEDIATE] Step 1: self.user_relationships
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.user_relationships
            [INTERMEDIATE] Step 2: self.user_relationships.add
      -> Resolved to: session_manager.SessionInteractionManager.user_relationships.add
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user2_id
      [SYMBOL_LOOKUP] Found user2_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user2_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.user_relationships.add
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
        [CACHE] self.user_relationships -> session_manager.SessionInteractionManager.user_relationships (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user1_id
        [CACHE] user1_id -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: user2_id
        [CACHE] user2_id -> session_manager.str (cached)
      -> Not module state
      [CALL] Found call: self.user_relationships.add
    [CACHE] self.user_relationships.add -> session_manager.SessionInteractionManager.user_relationships.add (cached)
            [INTERMEDIATE] Tracking chain steps for: self.user_relationships.add
            [INTERMEDIATE] Step 1: self.user_relationships
    [CACHE] self.user_relationships -> session_manager.SessionInteractionManager.user_relationships (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.user_relationships
            [INTERMEDIATE] Step 2: self.user_relationships.add
      -> Resolved to: session_manager.SessionInteractionManager.user_relationships.add
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user1_id
      [SYMBOL_LOOKUP] Found user1_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user1_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.user_relationships.add
        [CACHE] self.user_relationships.add -> session_manager.SessionInteractionManager.user_relationships.add (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.user_relationships
        [CACHE] self.user_relationships -> session_manager.SessionInteractionManager.user_relationships (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user2_id
        [CACHE] user2_id -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: user1_id
        [CACHE] user1_id -> session_manager.str (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session1 = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._get_user_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionInteractionManager._get_user_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session1 -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session1 = session_manager.UserSession
      [NAME] Found name reference: session1
      [SYMBOL_LOOKUP] Found session1 in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session1 in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: self._get_user_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._get_user_session
            [INTERMEDIATE] Step 1: self._get_user_session
      -> Resolved to: session_manager.SessionInteractionManager._get_user_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user1_id
      [SYMBOL_LOOKUP] Found user1_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user1_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self._get_user_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user1_id
        [CACHE] user1_id -> session_manager.str (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session2 = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._get_user_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionInteractionManager._get_user_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session2 -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session2 = session_manager.UserSession
      [NAME] Found name reference: session2
      [SYMBOL_LOOKUP] Found session2 in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session2 in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: self._get_user_session
    [CACHE] self._get_user_session -> session_manager.SessionInteractionManager._get_user_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self._get_user_session
            [INTERMEDIATE] Step 1: self._get_user_session
      -> Resolved to: session_manager.SessionInteractionManager._get_user_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user2_id
      [SYMBOL_LOOKUP] Found user2_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user2_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self._get_user_session
        [CACHE] self._get_user_session -> session_manager.SessionInteractionManager._get_user_session (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user2_id
        [CACHE] user2_id -> session_manager.str (cached)
      -> Not module state
      [NAME] Found name reference: session1
        [CACHE] session1 -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session1.metrics.events_emitted
      [SYMBOL_LOOKUP] Found session1 in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session1 in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session1.metrics
      [SYMBOL_LOOKUP] Found session1 in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session1 in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session1
        [CACHE] session1 -> session_manager.UserSession (cached)
      -> Not module state
      [NAME] Found name reference: session2
        [CACHE] session2 -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session2.metrics.events_received
      [SYMBOL_LOOKUP] Found session2 in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session2 in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session2.metrics
      [SYMBOL_LOOKUP] Found session2 in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session2 in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session2
        [CACHE] session2 -> session_manager.UserSession (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionInteractionManager.record_user_interaction
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionInteractionManager.record_user_interaction
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionInteractionManager._get_user_session
    [CONTEXT] Entered function: session_manager.SessionInteractionManager._get_user_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_manager.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      -> Not module state
      [CALL] Found call: self.session_manager.user_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.user_sessions.get
            [INTERMEDIATE] Step 1: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 2 resolved to: session_manager.SessionInteractionManager.session_manager.user_sessions
            [INTERMEDIATE] Step 3: self.session_manager.user_sessions.get
      -> Resolved to: session_manager.SessionInteractionManager.session_manager.user_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_manager.user_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> session_manager.SessionInteractionManager.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.session_manager.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionInteractionManager.session_manager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.session_manager.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.active_sessions.get
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> session_manager.SessionInteractionManager.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 2 resolved to: session_manager.SessionInteractionManager.session_manager.active_sessions
            [INTERMEDIATE] Step 3: self.session_manager.active_sessions.get
      -> Resolved to: session_manager.SessionInteractionManager.session_manager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.session_manager.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> session_manager.SessionInteractionManager.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionInteractionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.is_valid
    [CACHE] session.is_valid -> session_manager.session.is_valid (cached)
            [INTERMEDIATE] Tracking chain steps for: session.is_valid
            [INTERMEDIATE] Step 1: session.is_valid
      -> Resolved to: session_manager.session.is_valid
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_valid
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionInteractionManager._get_user_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionInteractionManager._get_user_session
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: session_manager.SessionInteractionManager
    [SYMBOL_TABLE] Exited class scope
  [CLASS] Analyzing class: SessionAnalytics
    [CONTEXT] Entered class: session_manager.SessionAnalytics
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionAnalytics.__init__
    [CONTEXT] Entered function: session_manager.SessionAnalytics.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'session_manager': 'SessionManager'}
        [ARG_TYPE] Processing type annotation for session_manager: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      [SYMBOL_UPDATE] Function: session_manager -> session_manager.SessionManager
        [ARG_TYPE] RESOLVED session_manager : session_manager.SessionManager
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session_manager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.analytics_cache
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionAnalytics (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Any
      [SYMBOL_LOOKUP] Variable Any not found in any scope
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionAnalytics.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionAnalytics.__init__
        Calls: 0
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionAnalytics.compute_user_engagement_score
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: session_manager.SessionAnalytics.compute_user_engagement_score (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self._get_user_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionAnalytics._get_user_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in current module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Function: session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: session = session_manager.UserSession
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: self._get_user_session
    [CACHE] self._get_user_session -> session_manager.SessionInteractionManager._get_user_session (cached)
            [INTERMEDIATE] Tracking chain steps for: self._get_user_session
            [INTERMEDIATE] Step 1: self._get_user_session
      -> Resolved to: session_manager.SessionInteractionManager._get_user_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self._get_user_session
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ASSIGNMENT] Processing: activity_score = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: min
      [SYMBOL_LOOKUP] Variable min not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.min
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for activity_score
      [NAME] Found name reference: activity_score
      [SYMBOL_LOOKUP] Variable activity_score not found in any scope
      -> Not module state
      [CALL] Found call: min
      -> IGNORED (built-in function)
      [NAME] Found name reference: min
      [SYMBOL_LOOKUP] Variable min not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.activity_count
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ASSIGNMENT] Processing: room_diversity = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: room_diversity
      [SYMBOL_LOOKUP] Variable room_diversity not found in any scope
      -> Not module state
      [CALL] Found call: len
      -> IGNORED (built-in function)
      [NAME] Found name reference: len
      [SYMBOL_LOOKUP] Variable len not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.rooms_joined
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
        [CACHE] session.metrics -> session_manager.UserSession.metrics (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ASSIGNMENT] Processing: interaction_ratio = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: interaction_ratio
      [SYMBOL_LOOKUP] Variable interaction_ratio not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.events_emitted
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
        [CACHE] session.metrics -> session_manager.UserSession.metrics (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.events_received
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
        [CACHE] session.metrics -> session_manager.UserSession.metrics (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [CALL] Found call: max
      -> IGNORED (built-in function)
      [NAME] Found name reference: max
      [SYMBOL_LOOKUP] Variable max not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics.activity_count
        [CACHE] session.metrics.activity_count -> session_manager.UserSession.metrics.activity_count (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.metrics
        [CACHE] session.metrics -> session_manager.UserSession.metrics (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ASSIGNMENT] Processing: session_duration = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: session_duration
      [SYMBOL_LOOKUP] Variable session_duration not found in any scope
      -> Not module state
      [CALL] Could not extract name parts from call
      [CALL] Found call: datetime.now
    [CACHE] datetime.now -> datetime.datetime.now (cached)
            [INTERMEDIATE] Tracking chain steps for: datetime.now
            [INTERMEDIATE] Step 1: datetime.now
      -> Resolved to: datetime.datetime.now
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: datetime.now
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [NAME] Found name reference: datetime
      [SYMBOL_LOOKUP] Variable datetime not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: session.created_at
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found session in function scope: session_manager.UserSession
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.UserSession (cached)
      -> Not module state
      [ASSIGNMENT] Processing: duration_factor = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: min
      [SYMBOL_LOOKUP] Variable min not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.min
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for duration_factor
      [NAME] Found name reference: duration_factor
      [SYMBOL_LOOKUP] Variable duration_factor not found in any scope
      -> Not module state
      [CALL] Found call: min
      -> IGNORED (built-in function)
      [NAME] Found name reference: min
        [CACHE] min -> session_manager.min (cached)
      -> Not module state
      [NAME] Found name reference: session_duration
        [CACHE] session_duration -> session_manager.session_duration (cached)
      -> Not module state
      [ASSIGNMENT] Processing: engagement_score = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: engagement_score
      [SYMBOL_LOOKUP] Variable engagement_score not found in any scope
      -> Not module state
      [NAME] Found name reference: activity_score
        [CACHE] activity_score -> session_manager.activity_score (cached)
      -> Not module state
      [NAME] Found name reference: room_diversity
        [CACHE] room_diversity -> session_manager.room_diversity (cached)
      -> Not module state
      [NAME] Found name reference: interaction_ratio
        [CACHE] interaction_ratio -> session_manager.interaction_ratio (cached)
      -> Not module state
      [NAME] Found name reference: duration_factor
        [CACHE] duration_factor -> session_manager.duration_factor (cached)
      -> Not module state
      [CALL] Found call: min
      -> IGNORED (built-in function)
      [NAME] Found name reference: min
        [CACHE] min -> session_manager.min (cached)
      -> Not module state
      [NAME] Found name reference: engagement_score
        [CACHE] engagement_score -> session_manager.engagement_score (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionAnalytics.compute_user_engagement_score
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionAnalytics.compute_user_engagement_score
        Calls: 1
        Instantiations: 0
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: session_manager.SessionAnalytics._get_user_session
    [CONTEXT] Entered function: session_manager.SessionAnalytics._get_user_session (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'user_id': 'str'}
        [ARG_TYPE] Processing type annotation for user_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: user_id -> session_manager.str
        [ARG_TYPE] RESOLVED user_id : session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_manager.session_lock
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      -> Not module state
      [CALL] Found call: self.session_manager.user_sessions.get
    [CACHE] self.session_manager.user_sessions.get -> session_manager.SessionInteractionManager.session_manager.user_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.user_sessions.get
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> session_manager.SessionInteractionManager.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.user_sessions
    [CACHE] self.session_manager.user_sessions -> session_manager.SessionInteractionManager.session_manager.user_sessions (cached)
            [INTERMEDIATE] Step 2 resolved to: session_manager.SessionInteractionManager.session_manager.user_sessions
            [INTERMEDIATE] Step 3: self.session_manager.user_sessions.get
      -> Resolved to: session_manager.SessionInteractionManager.session_manager.user_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [ATTRIBUTE] Found attribute access: self.session_manager.user_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager.user_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> session_manager.SessionAnalytics.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionAnalytics (cached)
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      [SYMBOL_LOOKUP] Found user_id in function scope: session_manager.str
      -> Not module state
      [ASSIGNMENT] Processing: session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.session_manager.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionAnalytics.session_manager.active_sessions.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for session
      [NAME] Found name reference: session
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [CALL] Found call: self.session_manager.active_sessions.get
    [CACHE] self.session_manager.active_sessions.get -> session_manager.SessionInteractionManager.session_manager.active_sessions.get (cached)
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.active_sessions.get
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> session_manager.SessionInteractionManager.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: session_manager.SessionInteractionManager.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.active_sessions
    [CACHE] self.session_manager.active_sessions -> session_manager.SessionInteractionManager.session_manager.active_sessions (cached)
            [INTERMEDIATE] Step 2 resolved to: session_manager.SessionInteractionManager.session_manager.active_sessions
            [INTERMEDIATE] Step 3: self.session_manager.active_sessions.get
      -> Resolved to: session_manager.SessionInteractionManager.session_manager.active_sessions.get
      -> REJECTED (not in catalog or allowlist)
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Variable session_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.session_manager.active_sessions.get
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager.active_sessions
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> session_manager.SessionAnalytics.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> session_manager.SessionAnalytics (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> session_manager.session_id (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [CALL] Found call: session.is_valid
    [CACHE] session.is_valid -> session_manager.session.is_valid (cached)
            [INTERMEDIATE] Tracking chain steps for: session.is_valid
            [INTERMEDIATE] Step 1: session.is_valid
      -> Resolved to: session_manager.session.is_valid
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: session.is_valid
      [SYMBOL_LOOKUP] Variable session not found in any scope
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
      [NAME] Found name reference: session
        [CACHE] session -> session_manager.session (cached)
      -> Not module state
    [CONTEXT] Exited function: session_manager.SessionAnalytics._get_user_session
    [FUNCTION_ANALYSIS] Completed analysis of: session_manager.SessionAnalytics._get_user_session
        Calls: 0
        Instantiations: 0
        State Access: 0
    [CONTEXT] Exited class: session_manager.SessionAnalytics
    [SYMBOL_TABLE] Exited class scope
=== Module Analysis Complete ===
  Module analysis complete
=== Analyzing socketio_events.py ===
[RESOLVER_COMPAT] Using reorganized resolver implementation
=== Starting Module Analysis ===
    [FROM_IMPORT] Dict -> typing.Dict
    [FROM_IMPORT] Any -> typing.Any
    [FROM_IMPORT] Optional -> typing.Optional
    [FROM_IMPORT] Callable -> typing.Callable
    [FROM_IMPORT] List -> typing.List
    [FROM_IMPORT] Union -> typing.Union
    [FROM_IMPORT] wraps -> functools.wraps
    [IMPORT] logging -> logging
    [FROM_IMPORT] SocketIO -> flask_socketio.SocketIO
    [FROM_IMPORT] emit -> flask_socketio.emit
    [FROM_IMPORT] disconnect -> flask_socketio.disconnect
    [FROM_IMPORT] join_room -> flask_socketio.join_room
    [FROM_IMPORT] leave_room -> flask_socketio.leave_room
    [FROM_IMPORT] trace -> decorators.trace
    [FROM_IMPORT] monitor_performance -> decorators.monitor_performance
    [FROM_IMPORT] validate_auth -> decorators.validate_auth
    [FROM_IMPORT] rate_limit -> decorators.rate_limit
    [FROM_IMPORT] SessionManager -> session_manager.SessionManager
    [FROM_IMPORT] UserSession -> session_manager.UserSession
    [FROM_IMPORT] HavenProxy -> proxy_handler.HavenProxy
    [FROM_IMPORT] DataProxy -> proxy_handler.DataProxy
    [FROM_IMPORT] EventValidator -> event_validator.EventValidator
    [FROM_IMPORT] MessageValidator -> event_validator.MessageValidator
    [MODULE_STATE] _socketio_instance : Optional[SocketIO] = None
    [MODULE_STATE] _haven_proxy : Optional[HavenProxy] = None
    [MODULE_STATE] _session_manager : Optional[SessionManager] = None
    [MODULE_STATE] EVENT_HANDLERS : Dict[str, Callable] = {}
    [MODULE_STATE] ACTIVE_ROOMS : Dict[str, List[str]] = {}
  [CLASS] Analyzing class: SocketIOEventRegistry
    [CONTEXT] Entered class: socketio_events.SocketIOEventRegistry
    [SYMBOL_TABLE] Entered class scope
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.SocketIOEventRegistry.__init__
    [CONTEXT] Entered function: socketio_events.SocketIOEventRegistry.__init__ (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'socketio': 'SocketIO', 'session_manager': 'SessionManager'}
        [ARG_TYPE] Processing type annotation for socketio: SocketIO
      [SYMBOL_LOOKUP] Variable SocketIO not found in any scope
      [SYMBOL_UPDATE] Function: socketio -> flask_socketio.SocketIO
        [ARG_TYPE] RESOLVED socketio : flask_socketio.SocketIO
        [ARG_TYPE] Processing type annotation for session_manager: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      [SYMBOL_UPDATE] Function: session_manager -> session_manager.SessionManager
        [ARG_TYPE] RESOLVED session_manager : session_manager.SessionManager
      [ATTRIBUTE] Found attribute access: self.socketio
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: socketio
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: session_manager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [CALL] Found call: EventValidator
      [SYMBOL_LOOKUP] Variable EventValidator not found in any scope
      -> Resolved to: event_validator.EventValidator
      -> ADDED to instantiations
      [NAME] Found name reference: EventValidator
      [SYMBOL_LOOKUP] Variable EventValidator not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.message_validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [CALL] Found call: MessageValidator
      [SYMBOL_LOOKUP] Variable MessageValidator not found in any scope
      -> Resolved to: event_validator.MessageValidator
      -> ADDED to instantiations
      [NAME] Found name reference: MessageValidator
      [SYMBOL_LOOKUP] Variable MessageValidator not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.registered_events
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      -> Not module state
      [NAME] Found name reference: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      -> Not module state
      [NAME] Found name reference: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.middleware_stack
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      -> Not module state
      [NAME] Found name reference: Callable
        [CACHE] Callable -> typing.Callable (cached)
      -> Not module state
    [CONTEXT] Exited function: socketio_events.SocketIOEventRegistry.__init__
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.SocketIOEventRegistry.__init__
        Calls: 0
        Instantiations: 2
        State Access: 0
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.SocketIOEventRegistry.register_dynamic_event
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: socketio_events.SocketIOEventRegistry.register_dynamic_event (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'handler': 'Callable'}
        [ARG_TYPE] Processing type annotation for event_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: event_name -> socketio_events.str
        [ARG_TYPE] RESOLVED event_name : socketio_events.str
        [ARG_TYPE] Processing type annotation for handler: Callable
      [SYMBOL_LOOKUP] Variable Callable not found in any scope
      [SYMBOL_UPDATE] Function: handler -> typing.Callable
        [ARG_TYPE] RESOLVED handler : typing.Callable
      [NESTED_FUNCTION] Analyzing nested function: wrapped_handler
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 0 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'handler': 'Callable'}
      [CALL] Found call: self.socketio.emit
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.socketio.emit
            [INTERMEDIATE] Step 1: self.socketio
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.emit
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.emit::event_received
      [ATTRIBUTE] Found attribute access: self.socketio.emit
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
      -> Not module state
      [CALL] Found call: self.session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_current_timestamp
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [CALL] Found call: self.session_manager.get_current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_current_session_id
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_current_session_id
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_current_session_id
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_current_session_id::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_current_session_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: handler
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [TYPE_INFERENCE] Call resolved to: typing.Callable
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for result
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      -> Not module state
      [CALL] Found call: handler
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      -> Resolved to: typing.Callable
      -> REJECTED (not in catalog or allowlist)
      [NAME] Found name reference: handler
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      [SYMBOL_LOOKUP] Found handler in function scope: typing.Callable
      -> Not module state
      [NAME] Found name reference: args
      [SYMBOL_LOOKUP] Variable args not found in any scope
      -> Not module state
      [NAME] Found name reference: kwargs
      [SYMBOL_LOOKUP] Variable kwargs not found in any scope
      -> Not module state
      [CALL] Found call: self.event_validator.validate_result
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.event_validator.validate_result
            [INTERMEDIATE] Step 1: self.event_validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.event_validator
            [INTERMEDIATE] Step 2: self.event_validator.validate_result
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.event_validator.validate_result
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.event_validator.validate_result::$result
        [FUNCTION_ARG] Checking argument: result
      [SYMBOL_LOOKUP] Variable result not found in any scope
      [ATTRIBUTE] Found attribute access: self.event_validator.validate_result
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> socketio_events.result (cached)
      -> Not module state
      [CALL] Found call: self.socketio.emit
    [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: self.socketio.emit
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.emit
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.emit::${event_name}_success
        [EMIT] Room parameter: dynamic_value
      [ATTRIBUTE] Found attribute access: self.socketio.emit
        [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
        [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> socketio_events.result (cached)
      -> Not module state
      [CALL] Found call: self.event_validator.get_validation_details
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.event_validator.get_validation_details
            [INTERMEDIATE] Step 1: self.event_validator
    [CACHE] self.event_validator -> socketio_events.SocketIOEventRegistry.event_validator (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.event_validator
            [INTERMEDIATE] Step 2: self.event_validator.get_validation_details
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.event_validator.get_validation_details
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.event_validator.get_validation_details::unknown_event
      [ATTRIBUTE] Found attribute access: self.event_validator.get_validation_details
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.event_validator
        [CACHE] self.event_validator -> socketio_events.SocketIOEventRegistry.event_validator (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [CALL] Found call: self.session_manager.get_user_room
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_user_room
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_user_room
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_user_room
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_user_room::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_user_room
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> socketio_events.result (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [ATTRIBUTE] Found attribute access: self.registered_events
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [NAME] Found name reference: wrapped_handler
      [SYMBOL_LOOKUP] Variable wrapped_handler not found in any scope
      -> Not module state
    [CONTEXT] Exited function: socketio_events.SocketIOEventRegistry.register_dynamic_event
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.SocketIOEventRegistry.register_dynamic_event
        Calls: 7
        Instantiations: 0
        State Access: 0
        SocketIO Emits: 2
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.SocketIOEventRegistry.batch_register_events
    [CONTEXT] Entered function: socketio_events.SocketIOEventRegistry.batch_register_events (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_configs': 'List[Dict[str, Any]]'}
        [ARG_TYPE] Processing type annotation for event_configs: List
      [SYMBOL_LOOKUP] Variable List not found in any scope
      [SYMBOL_UPDATE] Function: event_configs -> typing.List
        [ARG_TYPE] RESOLVED event_configs : typing.List
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Variable config not found in any scope
      -> Not module state
      [NAME] Found name reference: event_configs
      [SYMBOL_LOOKUP] Found event_configs in function scope: typing.List
      [SYMBOL_LOOKUP] Found event_configs in function scope: typing.List
      -> Not module state
      [ASSIGNMENT] Processing: event_name = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: event_name
      [SYMBOL_LOOKUP] Variable event_name not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> socketio_events.config (cached)
      -> Not module state
      [ASSIGNMENT] Processing: handler = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.create_event_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: socketio_events.SocketIOEventRegistry.create_event_handler
        [RETURN_TYPE_RESOLUTION] Resolving return type: Callable
        [RETURN_TYPE_RESOLUTION] Class 'Callable' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Callable
      [TYPE_INFERENCE] Could not resolve return type 'Callable' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Callable (from return type - unresolved)
      [SYMBOL_UPDATE] Function: handler -> Callable
        [ASSIGNMENT] RESOLVED Updated symbol table: handler = Callable
      [NAME] Found name reference: handler
      [SYMBOL_LOOKUP] Found handler in function scope: Callable
      [SYMBOL_LOOKUP] Found handler in function scope: Callable
      -> Not module state
      [CALL] Found call: self.create_event_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.create_event_handler
            [INTERMEDIATE] Step 1: self.create_event_handler
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.create_event_handler
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.create_event_handler::$config
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Variable config not found in any scope
      [ATTRIBUTE] Found attribute access: self.create_event_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> socketio_events.config (cached)
      -> Not module state
      [ASSIGNMENT] Processing: decorated_handler = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.apply_middleware_stack
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: socketio_events.SocketIOEventRegistry.apply_middleware_stack
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for decorated_handler
      [NAME] Found name reference: decorated_handler
      [SYMBOL_LOOKUP] Variable decorated_handler not found in any scope
      -> Not module state
      [CALL] Found call: self.apply_middleware_stack
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.apply_middleware_stack
            [INTERMEDIATE] Step 1: self.apply_middleware_stack
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.apply_middleware_stack
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.apply_middleware_stack::$handler
        [FUNCTION_ARG] Checking argument: handler
      [SYMBOL_LOOKUP] Found handler in function scope: Callable
      [SYMBOL_LOOKUP] Found handler in function scope: Callable
      [ATTRIBUTE] Found attribute access: self.apply_middleware_stack
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: handler
        [CACHE] handler -> Callable (cached)
      -> Not module state
      [CALL] Found call: config.get
      [SYMBOL_LOOKUP] Variable config not found in any scope
            [INTERMEDIATE] Tracking chain steps for: config.get
            [INTERMEDIATE] Step 1: config.get
        [EMIT_DETECTION] Direct FQN match: socketio_events.config.get
      -> DETECTED and ADDED emit call: socketio_events.config.get::middleware
      [ATTRIBUTE] Found attribute access: config.get
      [SYMBOL_LOOKUP] Variable config not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> socketio_events.config (cached)
      -> Not module state
      [CALL] Found call: self.socketio.on
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.socketio.on
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.on
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.on
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.on::$decorated_handler
        [FUNCTION_ARG] Checking argument: decorated_handler
      [SYMBOL_LOOKUP] Variable decorated_handler not found in any scope
      [CALL] Found call: self.socketio.on
    [CACHE] self.socketio.on -> socketio_events.SocketIOEventRegistry.socketio.on (cached)
            [INTERMEDIATE] Tracking chain steps for: self.socketio.on
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.on
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.on
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.on::$event_name
        [FUNCTION_ARG] Checking argument: event_name
      [SYMBOL_LOOKUP] Variable event_name not found in any scope
      [ATTRIBUTE] Found attribute access: self.socketio.on
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.event_name (cached)
      -> Not module state
      [NAME] Found name reference: decorated_handler
        [CACHE] decorated_handler -> socketio_events.decorated_handler (cached)
      -> Not module state
    [CONTEXT] Exited function: socketio_events.SocketIOEventRegistry.batch_register_events
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.SocketIOEventRegistry.batch_register_events
        Calls: 5
        Instantiations: 0
        State Access: 0
        SocketIO Emits: 2
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.SocketIOEventRegistry.create_event_handler
    [CONTEXT] Entered function: socketio_events.SocketIOEventRegistry.create_event_handler (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'config': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for config: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: config -> typing.Dict
        [ARG_TYPE] RESOLVED config : typing.Dict
      [ASSIGNMENT] Processing: event_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: config.get
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for event_type
      [NAME] Found name reference: event_type
      [SYMBOL_LOOKUP] Variable event_type not found in any scope
      -> Not module state
      [CALL] Found call: config.get
    [CACHE] config.get -> socketio_events.config.get (cached)
            [INTERMEDIATE] Tracking chain steps for: config.get
            [INTERMEDIATE] Step 1: config.get
        [EMIT_DETECTION] Direct FQN match: socketio_events.config.get
      -> DETECTED and ADDED emit call: socketio_events.config.get::type
      [ATTRIBUTE] Found attribute access: config.get
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: config
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: event_type
        [CACHE] event_type -> socketio_events.event_type (cached)
      -> Not module state
      [CALL] Found call: self._create_room_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._create_room_handler
            [INTERMEDIATE] Step 1: self._create_room_handler
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry._create_room_handler
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry._create_room_handler::$config
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._create_room_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: event_type
        [CACHE] event_type -> socketio_events.event_type (cached)
      -> Not module state
      [CALL] Found call: self._create_broadcast_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._create_broadcast_handler
            [INTERMEDIATE] Step 1: self._create_broadcast_handler
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry._create_broadcast_handler
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry._create_broadcast_handler::$config
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._create_broadcast_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: event_type
        [CACHE] event_type -> socketio_events.event_type (cached)
      -> Not module state
      [CALL] Found call: self._create_auth_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._create_auth_handler
            [INTERMEDIATE] Step 1: self._create_auth_handler
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry._create_auth_handler
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry._create_auth_handler::$config
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._create_auth_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> typing.Dict (cached)
      -> Not module state
      [CALL] Found call: self._create_standard_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self._create_standard_handler
            [INTERMEDIATE] Step 1: self._create_standard_handler
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry._create_standard_handler
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry._create_standard_handler::$config
        [FUNCTION_ARG] Checking argument: config
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found config in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: self._create_standard_handler
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: config
        [CACHE] config -> typing.Dict (cached)
      -> Not module state
    [CONTEXT] Exited function: socketio_events.SocketIOEventRegistry.create_event_handler
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.SocketIOEventRegistry.create_event_handler
        Calls: 5
        Instantiations: 0
        State Access: 0
        SocketIO Emits: 1
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.SocketIOEventRegistry._create_room_handler
    [CONTEXT] Entered function: socketio_events.SocketIOEventRegistry._create_room_handler (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'config': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for config: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: config -> typing.Dict
        [ARG_TYPE] RESOLVED config : typing.Dict
      [NESTED_FUNCTION] Analyzing nested function: room_handler
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'config': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Dict
        [CACHE] Dict -> typing.Dict (cached)
      [SYMBOL_UPDATE] Nested: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: room_name = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for room_name
      [NAME] Found name reference: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      -> Not module state
      [CALL] Found call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
            [INTERMEDIATE] Tracking chain steps for: data.get
            [INTERMEDIATE] Step 1: data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [CALL] Found call: self.session_manager.validate_room_access
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.validate_room_access
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.validate_room_access
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.validate_room_access
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.validate_room_access::$room_name
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      [ATTRIBUTE] Found attribute access: self.session_manager.validate_room_access
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: join_room
      [SYMBOL_LOOKUP] Variable join_room not found in any scope
        [EMIT_DETECTION] Direct FQN match: flask_socketio.join_room
      -> DETECTED and ADDED emit call: flask_socketio.join_room::$room_name
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      [NAME] Found name reference: join_room
      [SYMBOL_LOOKUP] Variable join_room not found in any scope
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: self.socketio.emit
    [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: self.socketio.emit
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.emit
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.emit::user_joined_room
        [EMIT] Room parameter: $room_name
      [ATTRIBUTE] Found attribute access: self.socketio.emit
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [CALL] Found call: self.session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_current_user_id
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_current_user_id
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_current_user_id::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: self.session_manager.get_current_timestamp
    [CACHE] self.session_manager.get_current_timestamp -> socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_current_timestamp
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [NAME] Found name reference: active_room
      [SYMBOL_LOOKUP] Variable active_room not found in any scope
      -> Not module state
      [CALL] Found call: ACTIVE_ROOMS.get
      [SYMBOL_LOOKUP] Variable ACTIVE_ROOMS not found in any scope
            [INTERMEDIATE] Tracking chain steps for: ACTIVE_ROOMS.get
            [INTERMEDIATE] Step 1: ACTIVE_ROOMS.get
        [EMIT_DETECTION] Direct FQN match: socketio_events.ACTIVE_ROOMS.get
      -> DETECTED and ADDED emit call: socketio_events.ACTIVE_ROOMS.get::$room_name
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      [ATTRIBUTE] Found attribute access: ACTIVE_ROOMS.get
      [SYMBOL_LOOKUP] Variable ACTIVE_ROOMS not found in any scope
      -> Not module state
      [NAME] Found name reference: ACTIVE_ROOMS
      [SYMBOL_LOOKUP] Variable ACTIVE_ROOMS not found in any scope
      -> Resolved to state: socketio_events.ACTIVE_ROOMS
      [SYMBOL_LOOKUP] Variable ACTIVE_ROOMS not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: self.socketio.emit
    [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: self.socketio.emit
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.emit
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.emit::room_activity
        [EMIT] Room parameter: $active_room
      [ATTRIBUTE] Found attribute access: self.socketio.emit
        [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
        [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [NAME] Found name reference: active_room
        [CACHE] active_room -> socketio_events.active_room (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: room_handler
      [SYMBOL_LOOKUP] Variable room_handler not found in any scope
      -> Not module state
    [CONTEXT] Exited function: socketio_events.SocketIOEventRegistry._create_room_handler
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.SocketIOEventRegistry._create_room_handler
        Calls: 7
        Instantiations: 0
        State Access: 1
        SocketIO Emits: 3
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.SocketIOEventRegistry._create_broadcast_handler
    [CONTEXT] Entered function: socketio_events.SocketIOEventRegistry._create_broadcast_handler (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'config': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for config: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: config -> typing.Dict
        [ARG_TYPE] RESOLVED config : typing.Dict
      [NESTED_FUNCTION] Analyzing nested function: broadcast_handler
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'config': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for data: Dict
        [CACHE] Dict -> typing.Dict (cached)
      [SYMBOL_UPDATE] Nested: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: message = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for message
      [NAME] Found name reference: message
      [SYMBOL_LOOKUP] Variable message not found in any scope
      -> Not module state
      [CALL] Found call: data.get
    [CACHE] data.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: data.get
            [INTERMEDIATE] Step 1: data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [CALL] Found call: self.message_validator.validate_message
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.message_validator.validate_message
            [INTERMEDIATE] Step 1: self.message_validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.message_validator
            [INTERMEDIATE] Step 2: self.message_validator.validate_message
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.message_validator.validate_message
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.message_validator.validate_message::$message
        [FUNCTION_ARG] Checking argument: message
      [SYMBOL_LOOKUP] Variable message not found in any scope
      [ATTRIBUTE] Found attribute access: self.message_validator.validate_message
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.message_validator
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [CALL] Found call: self.socketio.emit
    [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: self.socketio.emit
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.emit
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.emit::global_message
        [EMIT] Broadcast parameter: True
      [ATTRIBUTE] Found attribute access: self.socketio.emit
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [CALL] Found call: self.session_manager.get_current_user_id
    [CACHE] self.session_manager.get_current_user_id -> socketio_events.SocketIOEventRegistry.session_manager.get_current_user_id (cached)
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_current_user_id
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_current_user_id
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_current_user_id::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [CALL] Found call: self.session_manager.get_current_timestamp
    [CACHE] self.session_manager.get_current_timestamp -> socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_current_timestamp
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_current_timestamp::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
      -> Not module state
      [CALL] Found call: self.session_manager.get_active_users
      [SYMBOL_LOOKUP] Variable self not found in any scope
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_active_users
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_active_users
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_active_users
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_active_users::unknown_event
      [ATTRIBUTE] Found attribute access: self.session_manager.get_active_users
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_room = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: self.session_manager.get_user_room
      [SYMBOL_LOOKUP] Variable self not found in any scope
      [TYPE_INFERENCE] Call resolved to: socketio_events.SocketIOEventRegistry.session_manager.get_user_room
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for user_room
      [NAME] Found name reference: user_room
      [SYMBOL_LOOKUP] Variable user_room not found in any scope
      -> Not module state
      [CALL] Found call: self.session_manager.get_user_room
    [CACHE] self.session_manager.get_user_room -> socketio_events.SocketIOEventRegistry.session_manager.get_user_room (cached)
            [INTERMEDIATE] Tracking chain steps for: self.session_manager.get_user_room
            [INTERMEDIATE] Step 1: self.session_manager
    [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.session_manager
            [INTERMEDIATE] Step 2: self.session_manager.get_user_room
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.session_manager.get_user_room
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.session_manager.get_user_room::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
      [ATTRIBUTE] Found attribute access: self.session_manager.get_user_room
      [SYMBOL_LOOKUP] Variable self not found in any scope
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.session_manager
        [CACHE] self.session_manager -> socketio_events.SocketIOEventRegistry.session_manager (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: self.socketio.emit
    [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: self.socketio.emit
            [INTERMEDIATE] Step 1: self.socketio
    [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
            [INTERMEDIATE] Step 1 resolved to: socketio_events.SocketIOEventRegistry.socketio
            [INTERMEDIATE] Step 2: self.socketio.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.socketio.emit
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.socketio.emit::personal_message
        [EMIT] Room parameter: $user_room
      [ATTRIBUTE] Found attribute access: self.socketio.emit
        [CACHE] self.socketio.emit -> socketio_events.SocketIOEventRegistry.socketio.emit (cached)
      -> Not module state
      [ATTRIBUTE] Found attribute access: self.socketio
        [CACHE] self.socketio -> socketio_events.SocketIOEventRegistry.socketio (cached)
      -> Not module state
      [NAME] Found name reference: self
        [CACHE] self -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: user_room
        [CACHE] user_room -> socketio_events.user_room (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: broadcast_handler
      [SYMBOL_LOOKUP] Variable broadcast_handler not found in any scope
      -> Not module state
    [CONTEXT] Exited function: socketio_events.SocketIOEventRegistry._create_broadcast_handler
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.SocketIOEventRegistry._create_broadcast_handler
        Calls: 7
        Instantiations: 0
        State Access: 0
        SocketIO Emits: 2
    [CONTEXT] Exited class: socketio_events.SocketIOEventRegistry
    [SYMBOL_TABLE] Exited class scope
  [FUNCTION] Analyzing function: register_events
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.register_events
    [DECORATOR] @trace
    [CONTEXT] Entered function: socketio_events.register_events (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'socketio': 'SocketIO', 'haven_proxy': 'HavenProxy'}
        [ARG_TYPE] Processing type annotation for socketio: SocketIO
      [SYMBOL_LOOKUP] Variable SocketIO not found in any scope
      [SYMBOL_UPDATE] Function: socketio -> flask_socketio.SocketIO
        [ARG_TYPE] RESOLVED socketio : flask_socketio.SocketIO
        [ARG_TYPE] Processing type annotation for haven_proxy: HavenProxy
      [SYMBOL_LOOKUP] Variable HavenProxy not found in any scope
      [SYMBOL_UPDATE] Function: haven_proxy -> proxy_handler.HavenProxy
        [ARG_TYPE] RESOLVED haven_proxy : proxy_handler.HavenProxy
      [ASSIGNMENT] Processing: _socketio_instance = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: _socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: socketio
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      -> Not module state
      [ASSIGNMENT] Processing: _haven_proxy = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: _haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: haven_proxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      -> Not module state
      [ASSIGNMENT] Processing: _session_manager = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.SessionManager (class instantiation)
      [SYMBOL_UPDATE] Function: _session_manager -> session_manager.SessionManager
        [ASSIGNMENT] RESOLVED Updated symbol table: _session_manager = session_manager.SessionManager
      [NAME] Found name reference: _session_manager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [CALL] Found call: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      -> Resolved to: session_manager.SessionManager
      -> ADDED to instantiations
        [FUNCTION_ARG] Checking argument: haven_proxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found haven_proxy in function scope: proxy_handler.HavenProxy
      [NAME] Found name reference: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      -> Not module state
      [NAME] Found name reference: haven_proxy
        [CACHE] haven_proxy -> proxy_handler.HavenProxy (cached)
      -> Not module state
      [ASSIGNMENT] Processing: registry = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: SocketIOEventRegistry
      [SYMBOL_LOOKUP] Variable SocketIOEventRegistry not found in any scope
      [TYPE_INFERENCE] Call resolved to: socketio_events.SocketIOEventRegistry
      [TYPE_INFERENCE] RESOLVED Inferred type: socketio_events.SocketIOEventRegistry (class instantiation)
      [SYMBOL_UPDATE] Function: registry -> socketio_events.SocketIOEventRegistry
        [ASSIGNMENT] RESOLVED Updated symbol table: registry = socketio_events.SocketIOEventRegistry
      [NAME] Found name reference: registry
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      -> Not module state
      [CALL] Found call: SocketIOEventRegistry
      [SYMBOL_LOOKUP] Variable SocketIOEventRegistry not found in any scope
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry::$socketio
        [FUNCTION_ARG] Checking argument: socketio
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
        [FUNCTION_ARG] Checking argument: _session_manager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [NAME] Found name reference: SocketIOEventRegistry
      [SYMBOL_LOOKUP] Variable SocketIOEventRegistry not found in any scope
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NESTED_FUNCTION] Analyzing nested function: handle_connect
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'socketio': 'SocketIO', 'haven_proxy': 'HavenProxy'}
        [ARG_TYPE] Processing type annotation for auth: Optional
      [SYMBOL_LOOKUP] Variable Optional not found in any scope
      [SYMBOL_UPDATE] Nested: auth -> typing.Optional
        [ARG_TYPE] RESOLVED auth : typing.Optional
      [ASSIGNMENT] Processing: session_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _session_manager.create_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.create_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: session_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: session_id = str
      [NAME] Found name reference: session_id
      [SYMBOL_LOOKUP] Found session_id in nested scope: str
      [SYMBOL_LOOKUP] Found session_id in nested scope: str
      -> Not module state
      [CALL] Found call: _session_manager.create_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.create_session
            [INTERMEDIATE] Step 1: _session_manager.create_session
      -> Resolved to: session_manager.SessionManager.create_session
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.create_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: auth
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      -> Not module state
      [CALL] Found call: auth.get
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
            [INTERMEDIATE] Tracking chain steps for: auth.get
            [INTERMEDIATE] Step 1: auth.get
      -> Resolved to: typing.Optional.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: auth.get
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      -> Not module state
      [NAME] Found name reference: auth
        [CACHE] auth -> typing.Optional (cached)
      -> Not module state
      [CALL] Found call: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
            [INTERMEDIATE] Tracking chain steps for: logging.info
            [INTERMEDIATE] Step 1: logging.info
      -> Resolved to: logging.info
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: logging.info
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [NAME] Found name reference: logging
      [SYMBOL_LOOKUP] Variable logging not found in any scope
      -> Not module state
      [CALL] Found call: socketio.emit
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::runner_connected
      [ATTRIBUTE] Found attribute access: socketio.emit
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      [SYMBOL_LOOKUP] Found socketio in function scope: flask_socketio.SocketIO
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.get_runner_capabilities
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_runner_capabilities
            [INTERMEDIATE] Step 1: _haven_proxy.get_runner_capabilities
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_runner_capabilities
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_runner_capabilities::unknown_event
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_runner_capabilities
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: join_room
    [CACHE] join_room -> flask_socketio.join_room (cached)
        [EMIT_DETECTION] Direct FQN match: flask_socketio.join_room
      -> DETECTED and ADDED emit call: flask_socketio.join_room::runners
      [NAME] Found name reference: join_room
      [SYMBOL_LOOKUP] Variable join_room not found in any scope
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::runner_room_joined
        [EMIT] Room parameter: runners
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [NAME] Found name reference: auth
        [CACHE] auth -> typing.Optional (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.validate_user_credentials
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_user_credentials
            [INTERMEDIATE] Step 1: _haven_proxy.validate_user_credentials
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_user_credentials
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_user_credentials::$auth
        [FUNCTION_ARG] Checking argument: auth
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_user_credentials
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: auth
        [CACHE] auth -> typing.Optional (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: auth.get
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [SYMBOL_LOOKUP] Found auth in nested scope: typing.Optional
      [TYPE_INFERENCE] Call resolved to: typing.Optional.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for user_id
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
      -> Not module state
      [CALL] Found call: auth.get
    [CACHE] auth.get -> typing.Optional.get (cached)
            [INTERMEDIATE] Tracking chain steps for: auth.get
            [INTERMEDIATE] Step 1: auth.get
      -> Resolved to: typing.Optional.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: auth.get
        [CACHE] auth.get -> typing.Optional.get (cached)
      -> Not module state
      [NAME] Found name reference: auth
        [CACHE] auth -> typing.Optional (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_session = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _session_manager.create_user_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.create_user_session
        [RETURN_TYPE_RESOLUTION] Resolving return type: UserSession
        [RETURN_TYPE_RESOLUTION] Found in other module: session_manager.UserSession
      [TYPE_INFERENCE] RESOLVED Inferred type: session_manager.UserSession (from return type)
      [SYMBOL_UPDATE] Nested: user_session -> session_manager.UserSession
        [ASSIGNMENT] RESOLVED Updated symbol table: user_session = session_manager.UserSession
      [NAME] Found name reference: user_session
      [SYMBOL_LOOKUP] Found user_session in nested scope: session_manager.UserSession
      [SYMBOL_LOOKUP] Found user_session in nested scope: session_manager.UserSession
      -> Not module state
      [CALL] Found call: _session_manager.create_user_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.create_user_session
            [INTERMEDIATE] Step 1: _session_manager.create_user_session
      -> Resolved to: session_manager.SessionManager.create_user_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in nested scope: str
      [SYMBOL_LOOKUP] Found session_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _session_manager.create_user_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::connection_established
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.get_user_preferences
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_user_preferences
            [INTERMEDIATE] Step 1: _haven_proxy.get_user_preferences
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_user_preferences
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_user_preferences::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Variable user_id not found in any scope
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_user_preferences
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_room = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: user_room
      [SYMBOL_LOOKUP] Variable user_room not found in any scope
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: join_room
    [CACHE] join_room -> flask_socketio.join_room (cached)
        [EMIT_DETECTION] Direct FQN match: flask_socketio.join_room
      -> DETECTED and ADDED emit call: flask_socketio.join_room::$user_room
        [FUNCTION_ARG] Checking argument: user_room
      [SYMBOL_LOOKUP] Variable user_room not found in any scope
      [NAME] Found name reference: join_room
        [CACHE] join_room -> flask_socketio.join_room (cached)
      -> Not module state
      [NAME] Found name reference: user_room
        [CACHE] user_room -> socketio_events.user_room (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::user_connected
        [EMIT] Broadcast parameter: True
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::guest_connected
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.get_guest_limitations
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_guest_limitations
            [INTERMEDIATE] Step 1: _haven_proxy.get_guest_limitations
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_guest_limitations
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_guest_limitations::unknown_event
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_guest_limitations
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [SYMBOL_TABLE] Exited nested scope
      [NESTED_FUNCTION] Analyzing nested function: handle_disconnect
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 0 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'socketio': 'SocketIO', 'haven_proxy': 'HavenProxy'}
      [ASSIGNMENT] Processing: session_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _session_manager.get_current_session_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_session_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: session_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: session_id = str
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_session_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_session_id
            [INTERMEDIATE] Step 1: _session_manager.get_current_session_id
      -> Resolved to: session_manager.SessionManager.get_current_session_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_session_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: _session_manager.get_current_user_id
      -> Resolved to: session_manager.SessionManager.get_current_user_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.cleanup_user_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.cleanup_user_session
            [INTERMEDIATE] Step 1: _session_manager.cleanup_user_session
      -> Resolved to: session_manager.SessionManager.cleanup_user_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _session_manager.cleanup_user_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::user_disconnected
        [EMIT] Broadcast parameter: True
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: room
      [SYMBOL_LOOKUP] Variable room not found in any scope
      -> Not module state
      [CALL] Found call: _session_manager.get_user_rooms
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_user_rooms
            [INTERMEDIATE] Step 1: _session_manager.get_user_rooms
      -> Resolved to: session_manager.SessionManager.get_user_rooms
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _session_manager.get_user_rooms
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: leave_room
      [SYMBOL_LOOKUP] Variable leave_room not found in any scope
        [EMIT_DETECTION] Direct FQN match: flask_socketio.leave_room
      -> DETECTED and ADDED emit call: flask_socketio.leave_room::$room
        [FUNCTION_ARG] Checking argument: room
      [SYMBOL_LOOKUP] Variable room not found in any scope
      [NAME] Found name reference: leave_room
      [SYMBOL_LOOKUP] Variable leave_room not found in any scope
      -> Not module state
      [NAME] Found name reference: room
        [CACHE] room -> socketio_events.room (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::user_left_room
        [EMIT] Room parameter: $room
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: room
        [CACHE] room -> socketio_events.room (cached)
      -> Not module state
      [NAME] Found name reference: room
        [CACHE] room -> socketio_events.room (cached)
      -> Not module state
      [CALL] Found call: _session_manager.destroy_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: _session_manager.destroy_session
            [INTERMEDIATE] Step 1: _session_manager.destroy_session
      -> Resolved to: session_manager.SessionManager.destroy_session
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: session_id
      [SYMBOL_LOOKUP] Found session_id in nested scope: str
      [SYMBOL_LOOKUP] Found session_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _session_manager.destroy_session
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: session_id
        [CACHE] session_id -> str (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NESTED_FUNCTION] Analyzing nested function: handle_join_room
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'socketio': 'SocketIO', 'haven_proxy': 'HavenProxy'}
        [ARG_TYPE] Processing type annotation for data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Nested: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: room_name = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for room_name
      [NAME] Found name reference: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      -> Not module state
      [CALL] Found call: data.get
    [CACHE] data.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: data.get
            [INTERMEDIATE] Step 1: data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_user_id
    [CACHE] _session_manager.get_current_user_id -> session_manager.SessionManager.get_current_user_id (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: _session_manager.get_current_user_id
      -> Resolved to: session_manager.SessionManager.get_current_user_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_user_id
        [CACHE] _session_manager.get_current_user_id -> session_manager.SessionManager.get_current_user_id (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.validate_room_access
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_room_access
            [INTERMEDIATE] Step 1: _haven_proxy.validate_room_access
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_room_access
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_room_access::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_room_access
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: join_room
    [CACHE] join_room -> flask_socketio.join_room (cached)
        [EMIT_DETECTION] Direct FQN match: flask_socketio.join_room
      -> DETECTED and ADDED emit call: flask_socketio.join_room::$room_name
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      [NAME] Found name reference: join_room
        [CACHE] join_room -> flask_socketio.join_room (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::room_joined
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::new_room_member
        [EMIT] Room parameter: $room_name
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.get_user_info
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_user_info
            [INTERMEDIATE] Step 1: _haven_proxy.get_user_info
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_user_info
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_user_info::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_user_info
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [ASSIGNMENT] Processing: room_stats = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _haven_proxy.get_room_statistics
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      [TYPE_INFERENCE] Call resolved to: socketio_events._haven_proxy.get_room_statistics
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for room_stats
      [NAME] Found name reference: room_stats
      [SYMBOL_LOOKUP] Variable room_stats not found in any scope
      -> Not module state
      [CALL] Found call: _haven_proxy.get_room_statistics
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_room_statistics
            [INTERMEDIATE] Step 1: _haven_proxy.get_room_statistics
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_room_statistics
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_room_statistics::$room_name
        [FUNCTION_ARG] Checking argument: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_room_statistics
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::room_stats_updated
        [EMIT] Room parameter: $room_name
        [FUNCTION_ARG] Checking argument: room_stats
      [SYMBOL_LOOKUP] Variable room_stats not found in any scope
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: room_stats
        [CACHE] room_stats -> socketio_events.room_stats (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NESTED_FUNCTION] Analyzing nested function: handle_send_message
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'socketio': 'SocketIO', 'haven_proxy': 'HavenProxy'}
        [ARG_TYPE] Processing type annotation for data: Dict
        [CACHE] Dict -> typing.Dict (cached)
      [SYMBOL_UPDATE] Nested: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: message = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for message
      [NAME] Found name reference: message
      [SYMBOL_LOOKUP] Variable message not found in any scope
      -> Not module state
      [CALL] Found call: data.get
    [CACHE] data.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: data.get
            [INTERMEDIATE] Step 1: data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.get
        [CACHE] data.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Dict (cached)
      -> Not module state
      [ASSIGNMENT] Processing: target_type = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for target_type
      [NAME] Found name reference: target_type
      [SYMBOL_LOOKUP] Variable target_type not found in any scope
      -> Not module state
      [CALL] Found call: data.get
    [CACHE] data.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: data.get
            [INTERMEDIATE] Step 1: data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.get
        [CACHE] data.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Dict (cached)
      -> Not module state
      [ASSIGNMENT] Processing: target = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: data.get
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [TYPE_INFERENCE] Call resolved to: typing.Dict.get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for target
      [NAME] Found name reference: target
      [SYMBOL_LOOKUP] Variable target not found in any scope
      -> Not module state
      [CALL] Found call: data.get
    [CACHE] data.get -> typing.Dict.get (cached)
            [INTERMEDIATE] Tracking chain steps for: data.get
            [INTERMEDIATE] Step 1: data.get
      -> Resolved to: typing.Dict.get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: data.get
        [CACHE] data.get -> typing.Dict.get (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Dict (cached)
      -> Not module state
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: _session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_user_id
    [CACHE] _session_manager.get_current_user_id -> session_manager.SessionManager.get_current_user_id (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: _session_manager.get_current_user_id
      -> Resolved to: session_manager.SessionManager.get_current_user_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_user_id
        [CACHE] _session_manager.get_current_user_id -> session_manager.SessionManager.get_current_user_id (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.validate_message_content
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_message_content
            [INTERMEDIATE] Step 1: _haven_proxy.validate_message_content
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_message_content
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_message_content::$message
        [FUNCTION_ARG] Checking argument: message
      [SYMBOL_LOOKUP] Variable message not found in any scope
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_message_content
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::message_rejected
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: target_type
        [CACHE] target_type -> socketio_events.target_type (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.validate_room_access
    [CACHE] _haven_proxy.validate_room_access -> socketio_events._haven_proxy.validate_room_access (cached)
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_room_access
            [INTERMEDIATE] Step 1: _haven_proxy.validate_room_access
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_room_access
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_room_access::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
        [FUNCTION_ARG] Checking argument: target
      [SYMBOL_LOOKUP] Variable target not found in any scope
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_room_access
        [CACHE] _haven_proxy.validate_room_access -> socketio_events._haven_proxy.validate_room_access (cached)
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: target
        [CACHE] target -> socketio_events.target (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::room_message
        [EMIT] Room parameter: $target
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.get_user_info
    [CACHE] _haven_proxy.get_user_info -> socketio_events._haven_proxy.get_user_info (cached)
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_user_info
            [INTERMEDIATE] Step 1: _haven_proxy.get_user_info
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_user_info
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_user_info::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_user_info
        [CACHE] _haven_proxy.get_user_info -> socketio_events._haven_proxy.get_user_info (cached)
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: target
        [CACHE] target -> socketio_events.target (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.log_room_message
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.log_room_message
            [INTERMEDIATE] Step 1: _haven_proxy.log_room_message
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.log_room_message
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.log_room_message::$target
        [FUNCTION_ARG] Checking argument: target
      [SYMBOL_LOOKUP] Variable target not found in any scope
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
        [FUNCTION_ARG] Checking argument: message
      [SYMBOL_LOOKUP] Variable message not found in any scope
      [ATTRIBUTE] Found attribute access: _haven_proxy.log_room_message
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: target
        [CACHE] target -> socketio_events.target (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [NAME] Found name reference: target_type
        [CACHE] target_type -> socketio_events.target_type (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.validate_direct_message_permission
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_direct_message_permission
            [INTERMEDIATE] Step 1: _haven_proxy.validate_direct_message_permission
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_direct_message_permission
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_direct_message_permission::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
        [FUNCTION_ARG] Checking argument: target
      [SYMBOL_LOOKUP] Variable target not found in any scope
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_direct_message_permission
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [NAME] Found name reference: target
        [CACHE] target -> socketio_events.target (cached)
      -> Not module state
      [ASSIGNMENT] Processing: target_room = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: target_room
      [SYMBOL_LOOKUP] Variable target_room not found in any scope
      -> Not module state
      [NAME] Found name reference: target
        [CACHE] target -> socketio_events.target (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::direct_message
        [EMIT] Room parameter: $target_room
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.get_user_info
    [CACHE] _haven_proxy.get_user_info -> socketio_events._haven_proxy.get_user_info (cached)
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.get_user_info
            [INTERMEDIATE] Step 1: _haven_proxy.get_user_info
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.get_user_info
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.get_user_info::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _haven_proxy.get_user_info
        [CACHE] _haven_proxy.get_user_info -> socketio_events._haven_proxy.get_user_info (cached)
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: target_room
        [CACHE] target_room -> socketio_events.target_room (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::message_delivered
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: target
        [CACHE] target -> socketio_events.target (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [NAME] Found name reference: target_type
        [CACHE] target_type -> socketio_events.target_type (cached)
      -> Not module state
      [CALL] Found call: _haven_proxy.validate_broadcast_permission
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_broadcast_permission
            [INTERMEDIATE] Step 1: _haven_proxy.validate_broadcast_permission
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_broadcast_permission
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_broadcast_permission::$user_id
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_broadcast_permission
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: socketio.emit
    [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: socketio.emit
            [INTERMEDIATE] Step 1: socketio.emit
        [EMIT_DETECTION] Direct FQN match: flask_socketio.SocketIO.emit
      -> DETECTED and ADDED emit call: flask_socketio.SocketIO.emit::broadcast_message
        [EMIT] Broadcast parameter: True
      [ATTRIBUTE] Found attribute access: socketio.emit
        [CACHE] socketio.emit -> flask_socketio.SocketIO.emit (cached)
      -> Not module state
      [NAME] Found name reference: socketio
        [CACHE] socketio -> flask_socketio.SocketIO (cached)
      -> Not module state
      [NAME] Found name reference: message
        [CACHE] message -> socketio_events.message (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> socketio_events.user_id (cached)
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
        [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [ASSIGNMENT] Processing: dynamic_events = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: dynamic_events
      [SYMBOL_LOOKUP] Variable dynamic_events not found in any scope
      -> Not module state
      [CALL] Found call: registry.batch_register_events
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
            [INTERMEDIATE] Tracking chain steps for: registry.batch_register_events
            [INTERMEDIATE] Step 1: registry.batch_register_events
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.batch_register_events
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.batch_register_events::$dynamic_events
        [FUNCTION_ARG] Checking argument: dynamic_events
      [SYMBOL_LOOKUP] Variable dynamic_events not found in any scope
      [ATTRIBUTE] Found attribute access: registry.batch_register_events
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      -> Not module state
      [NAME] Found name reference: registry
        [CACHE] registry -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: dynamic_events
        [CACHE] dynamic_events -> socketio_events.dynamic_events (cached)
      -> Not module state
      [NAME] Found name reference: event_name
      [SYMBOL_LOOKUP] Variable event_name not found in any scope
      -> Not module state
      [CALL] Found call: registry.register_dynamic_event
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
            [INTERMEDIATE] Tracking chain steps for: registry.register_dynamic_event
            [INTERMEDIATE] Step 1: registry.register_dynamic_event
        [EMIT_DETECTION] Direct FQN match: socketio_events.SocketIOEventRegistry.register_dynamic_event
      -> DETECTED and ADDED emit call: socketio_events.SocketIOEventRegistry.register_dynamic_event::$event_name
        [FUNCTION_ARG] Checking argument: event_name
      [SYMBOL_LOOKUP] Variable event_name not found in any scope
      [ATTRIBUTE] Found attribute access: registry.register_dynamic_event
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      [SYMBOL_LOOKUP] Found registry in function scope: socketio_events.SocketIOEventRegistry
      -> Not module state
      [NAME] Found name reference: registry
        [CACHE] registry -> socketio_events.SocketIOEventRegistry (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.event_name (cached)
      -> Not module state
      [CALL] Found call: create_dynamic_handler
      [SYMBOL_LOOKUP] Variable create_dynamic_handler not found in any scope
        [EMIT_DETECTION] Direct FQN match: socketio_events.create_dynamic_handler
      -> DETECTED and ADDED emit call: socketio_events.create_dynamic_handler::$event_name
        [FUNCTION_ARG] Checking argument: event_name
      [SYMBOL_LOOKUP] Variable event_name not found in any scope
        [FUNCTION_ARG] Checking argument: _haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
        [FUNCTION_ARG] Checking argument: _session_manager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found _session_manager in function scope: session_manager.SessionManager
      [NAME] Found name reference: create_dynamic_handler
      [SYMBOL_LOOKUP] Variable create_dynamic_handler not found in any scope
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.event_name (cached)
      -> Not module state
      [NAME] Found name reference: _haven_proxy
        [CACHE] _haven_proxy -> socketio_events._haven_proxy (cached)
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: _session_manager
        [CACHE] _session_manager -> session_manager.SessionManager (cached)
      -> Not module state
    [CONTEXT] Exited function: socketio_events.register_events
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.register_events
        Calls: 42
        Instantiations: 1
        State Access: 2
        SocketIO Emits: 22
  [FUNCTION] Analyzing function: create_dynamic_handler
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.create_dynamic_handler
    [DECORATOR] @trace
    [DECORATOR] @monitor_performance
    [CONTEXT] Entered function: socketio_events.create_dynamic_handler (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 3 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'proxy': 'HavenProxy', 'session_manager': 'SessionManager'}
        [ARG_TYPE] Processing type annotation for event_name: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: event_name -> socketio_events.str
        [ARG_TYPE] RESOLVED event_name : socketio_events.str
        [ARG_TYPE] Processing type annotation for proxy: HavenProxy
      [SYMBOL_LOOKUP] Variable HavenProxy not found in any scope
      [SYMBOL_UPDATE] Function: proxy -> proxy_handler.HavenProxy
        [ARG_TYPE] RESOLVED proxy : proxy_handler.HavenProxy
        [ARG_TYPE] Processing type annotation for session_manager: SessionManager
      [SYMBOL_LOOKUP] Variable SessionManager not found in any scope
      [SYMBOL_UPDATE] Function: session_manager -> session_manager.SessionManager
        [ARG_TYPE] RESOLVED session_manager : session_manager.SessionManager
      [NESTED_FUNCTION] Analyzing nested function: dynamic_handler
      [SYMBOL_TABLE] Entered nested scope
      [ARG_PROCESSING] Processing 1 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'event_name': 'str', 'proxy': 'HavenProxy', 'session_manager': 'SessionManager'}
        [ARG_TYPE] Processing type annotation for data: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Nested: data -> typing.Dict
        [ARG_TYPE] RESOLVED data : typing.Dict
      [ASSIGNMENT] Processing: user_id = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [TYPE_INFERENCE] Call resolved to: session_manager.SessionManager.get_current_user_id
        [RETURN_TYPE_RESOLUTION] Resolving return type: str
        [RETURN_TYPE_RESOLUTION] Class 'str' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: str
      [TYPE_INFERENCE] Could not resolve return type 'str' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: str (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: user_id -> str
        [ASSIGNMENT] RESOLVED Updated symbol table: user_id = str
      [NAME] Found name reference: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      -> Not module state
      [CALL] Found call: session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: session_manager.get_current_user_id
            [INTERMEDIATE] Step 1: session_manager.get_current_user_id
      -> Resolved to: session_manager.SessionManager.get_current_user_id
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: session_manager.get_current_user_id
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: session_manager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [CALL] Found call: proxy.validate_event_data
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
            [INTERMEDIATE] Tracking chain steps for: proxy.validate_event_data
            [INTERMEDIATE] Step 1: proxy.validate_event_data
      -> Resolved to: proxy_handler.HavenProxy.validate_event_data
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: proxy.validate_event_data
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      -> Not module state
      [NAME] Found name reference: proxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      -> Not module state
      [NAME] Found name reference: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
      -> Not module state
      [NAME] Found name reference: data
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [ASSIGNMENT] Processing: result = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: proxy.process_event
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [TYPE_INFERENCE] Call resolved to: proxy_handler.HavenProxy.process_event
        [RETURN_TYPE_RESOLUTION] Resolving return type: Dict[str, Any]
        [RETURN_TYPE_RESOLUTION] Class 'Dict[str, Any]' not found in any module
        [RETURN_TYPE_RESOLUTION] Could not resolve return type: Dict[str, Any]
      [TYPE_INFERENCE] Could not resolve return type 'Dict[str, Any]' to FQN
      [TYPE_INFERENCE] RESOLVED Inferred type: Dict[str, Any] (from return type - unresolved)
      [SYMBOL_UPDATE] Nested: result -> Dict[str, Any]
        [ASSIGNMENT] RESOLVED Updated symbol table: result = Dict[str, Any]
      [NAME] Found name reference: result
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      -> Not module state
      [CALL] Found call: proxy.process_event
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
            [INTERMEDIATE] Tracking chain steps for: proxy.process_event
            [INTERMEDIATE] Step 1: proxy.process_event
      -> Resolved to: proxy_handler.HavenProxy.process_event
      -> ADDED to calls
        [FUNCTION_ARG] Checking argument: event_name
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found event_name in function scope: socketio_events.str
        [FUNCTION_ARG] Checking argument: data
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
      [SYMBOL_LOOKUP] Found data in nested scope: typing.Dict
        [FUNCTION_ARG] Checking argument: user_id
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [SYMBOL_LOOKUP] Found user_id in nested scope: str
      [ATTRIBUTE] Found attribute access: proxy.process_event
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      [SYMBOL_LOOKUP] Found proxy in function scope: proxy_handler.HavenProxy
      -> Not module state
      [NAME] Found name reference: proxy
        [CACHE] proxy -> proxy_handler.HavenProxy (cached)
      -> Not module state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [NAME] Found name reference: data
        [CACHE] data -> typing.Dict (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [CALL] Found call: result.get
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
            [INTERMEDIATE] Tracking chain steps for: result.get
            [INTERMEDIATE] Step 1: result.get
      -> Resolved to: Dict[str, Any].get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [CALL] Found call: _socketio_instance.emit
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _socketio_instance.emit
            [INTERMEDIATE] Step 1: _socketio_instance.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events._socketio_instance.emit
      -> DETECTED and ADDED emit call: socketio_events._socketio_instance.emit::${event_name}_processed
      [ATTRIBUTE] Found attribute access: _socketio_instance.emit
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Not module state
      [NAME] Found name reference: _socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [CALL] Found call: session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
            [INTERMEDIATE] Tracking chain steps for: session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      [SYMBOL_LOOKUP] Found session_manager in function scope: session_manager.SessionManager
      -> Not module state
      [NAME] Found name reference: session_manager
        [CACHE] session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [CALL] Found call: result.get
    [CACHE] result.get -> Dict[str, Any].get (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get
            [INTERMEDIATE] Step 1: result.get
      -> Resolved to: Dict[str, Any].get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get
        [CACHE] result.get -> Dict[str, Any].get (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [CALL] Found call: _socketio_instance.emit
    [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: _socketio_instance.emit
            [INTERMEDIATE] Step 1: _socketio_instance.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events._socketio_instance.emit
      -> DETECTED and ADDED emit call: socketio_events._socketio_instance.emit::${event_name}_notification
        [EMIT] Broadcast parameter: True
      [ATTRIBUTE] Found attribute access: _socketio_instance.emit
        [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
      -> Not module state
      [NAME] Found name reference: _socketio_instance
        [CACHE] _socketio_instance -> socketio_events._socketio_instance (cached)
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [CALL] Found call: result.get
    [CACHE] result.get -> Dict[str, Any].get (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get
            [INTERMEDIATE] Step 1: result.get
      -> Resolved to: Dict[str, Any].get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get
        [CACHE] result.get -> Dict[str, Any].get (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [CALL] Found call: result.get
    [CACHE] result.get -> Dict[str, Any].get (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get
            [INTERMEDIATE] Step 1: result.get
      -> Resolved to: Dict[str, Any].get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get
        [CACHE] result.get -> Dict[str, Any].get (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [ASSIGNMENT] Processing: room_name = ...
        [ASSIGNMENT] Call assignment detected
      [TYPE_INFERENCE] Attempting to infer type from call: result.get
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      [SYMBOL_LOOKUP] Found result in nested scope: Dict[str, Any]
      [TYPE_INFERENCE] Call resolved to: Dict[str, Any].get
      [TYPE_INFERENCE] FAILED Could not infer type
        [ASSIGNMENT] FAILED Could not infer type for room_name
      [NAME] Found name reference: room_name
      [SYMBOL_LOOKUP] Variable room_name not found in any scope
      -> Not module state
      [CALL] Found call: result.get
    [CACHE] result.get -> Dict[str, Any].get (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get
            [INTERMEDIATE] Step 1: result.get
      -> Resolved to: Dict[str, Any].get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get
        [CACHE] result.get -> Dict[str, Any].get (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [CALL] Found call: _socketio_instance.emit
    [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: _socketio_instance.emit
            [INTERMEDIATE] Step 1: _socketio_instance.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events._socketio_instance.emit
      -> DETECTED and ADDED emit call: socketio_events._socketio_instance.emit::${event_name}_room_update
        [EMIT] Room parameter: $room_name
      [ATTRIBUTE] Found attribute access: _socketio_instance.emit
        [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
      -> Not module state
      [NAME] Found name reference: _socketio_instance
        [CACHE] _socketio_instance -> socketio_events._socketio_instance (cached)
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [CALL] Found call: result.get
    [CACHE] result.get -> Dict[str, Any].get (cached)
            [INTERMEDIATE] Tracking chain steps for: result.get
            [INTERMEDIATE] Step 1: result.get
      -> Resolved to: Dict[str, Any].get
      -> REJECTED (not in catalog or allowlist)
      [ATTRIBUTE] Found attribute access: result.get
        [CACHE] result.get -> Dict[str, Any].get (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [NAME] Found name reference: room_name
        [CACHE] room_name -> socketio_events.room_name (cached)
      -> Not module state
      [NAME] Found name reference: result
        [CACHE] result -> Dict[str, Any] (cached)
      -> Not module state
      [CALL] Found call: _socketio_instance.emit
    [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: _socketio_instance.emit
            [INTERMEDIATE] Step 1: _socketio_instance.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events._socketio_instance.emit
      -> DETECTED and ADDED emit call: socketio_events._socketio_instance.emit::${event_name}_error
      [ATTRIBUTE] Found attribute access: _socketio_instance.emit
        [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
      -> Not module state
      [NAME] Found name reference: _socketio_instance
        [CACHE] _socketio_instance -> socketio_events._socketio_instance (cached)
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: event_name
        [CACHE] event_name -> socketio_events.str (cached)
      -> Not module state
      [NAME] Found name reference: user_id
        [CACHE] user_id -> str (cached)
      -> Not module state
      [CALL] Found call: session_manager.get_current_timestamp
    [CACHE] session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: session_manager.get_current_timestamp
        [CACHE] session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
      -> Not module state
      [NAME] Found name reference: session_manager
        [CACHE] session_manager -> session_manager.SessionManager (cached)
      -> Not module state
      [SYMBOL_TABLE] Exited nested scope
      [NAME] Found name reference: dynamic_handler
      [SYMBOL_LOOKUP] Variable dynamic_handler not found in any scope
      -> Not module state
    [CONTEXT] Exited function: socketio_events.create_dynamic_handler
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.create_dynamic_handler
        Calls: 8
        Instantiations: 0
        State Access: 1
        SocketIO Emits: 4
  [FUNCTION] Analyzing function: emergency_broadcast
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.emergency_broadcast
    [CONTEXT] Entered function: socketio_events.emergency_broadcast (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'message': 'str', 'severity': 'str'}
        [ARG_TYPE] Processing type annotation for message: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: message -> socketio_events.str
        [ARG_TYPE] RESOLVED message : socketio_events.str
        [ARG_TYPE] Processing type annotation for severity: str
        [CACHE] str -> socketio_events.str (cached)
      [SYMBOL_UPDATE] Function: severity -> socketio_events.str
        [ARG_TYPE] RESOLVED severity : socketio_events.str
      [NAME] Found name reference: _socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: _haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _socketio_instance.emit
    [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: _socketio_instance.emit
            [INTERMEDIATE] Step 1: _socketio_instance.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events._socketio_instance.emit
      -> DETECTED and ADDED emit call: socketio_events._socketio_instance.emit::emergency_broadcast
        [EMIT] Broadcast parameter: True
      [ATTRIBUTE] Found attribute access: _socketio_instance.emit
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Not module state
      [NAME] Found name reference: _socketio_instance
        [CACHE] _socketio_instance -> socketio_events._socketio_instance (cached)
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: message
      [SYMBOL_LOOKUP] Found message in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found message in function scope: socketio_events.str
      -> Not module state
      [NAME] Found name reference: severity
      [SYMBOL_LOOKUP] Found severity in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found severity in function scope: socketio_events.str
      -> Not module state
      [CALL] Found call: _session_manager.get_current_timestamp
    [CACHE] _session_manager.get_current_timestamp -> session_manager.SessionManager.get_current_timestamp (cached)
            [INTERMEDIATE] Tracking chain steps for: _session_manager.get_current_timestamp
            [INTERMEDIATE] Step 1: _session_manager.get_current_timestamp
      -> Resolved to: session_manager.SessionManager.get_current_timestamp
      -> ADDED to calls
      [ATTRIBUTE] Found attribute access: _session_manager.get_current_timestamp
      [SYMBOL_LOOKUP] Variable _session_manager not found in any scope
      -> Not module state
      [NAME] Found name reference: _session_manager
      [SYMBOL_LOOKUP] Variable _session_manager not found in any scope
      -> Resolved to state: socketio_events._session_manager
      [SYMBOL_LOOKUP] Variable _session_manager not found in any scope
      -> ADDED to accessed_state
    [CONTEXT] Exited function: socketio_events.emergency_broadcast
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.emergency_broadcast
        Calls: 2
        Instantiations: 0
        State Access: 3
        SocketIO Emits: 1
  [FUNCTION] Analyzing function: admin_notification
    [FUNCTION_ANALYSIS] Starting analysis of: socketio_events.admin_notification
    [CONTEXT] Entered function: socketio_events.admin_notification (depth: 1)
    [SYMBOL_TABLE] Entered function scope
      [ARG_PROCESSING] Processing 2 arguments
        [ARG_PROCESSING] Found parameter types in recon data: {'admin_id': 'str', 'notification': 'Dict[str, Any]'}
        [ARG_TYPE] Processing type annotation for admin_id: str
      [SYMBOL_LOOKUP] Variable str not found in any scope
      [SYMBOL_UPDATE] Function: admin_id -> socketio_events.str
        [ARG_TYPE] RESOLVED admin_id : socketio_events.str
        [ARG_TYPE] Processing type annotation for notification: Dict
      [SYMBOL_LOOKUP] Variable Dict not found in any scope
      [SYMBOL_UPDATE] Function: notification -> typing.Dict
        [ARG_TYPE] RESOLVED notification : typing.Dict
      [NAME] Found name reference: _socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [CALL] Found call: _haven_proxy.validate_admin_role
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
            [INTERMEDIATE] Tracking chain steps for: _haven_proxy.validate_admin_role
            [INTERMEDIATE] Step 1: _haven_proxy.validate_admin_role
        [EMIT_DETECTION] Direct FQN match: socketio_events._haven_proxy.validate_admin_role
      -> DETECTED and ADDED emit call: socketio_events._haven_proxy.validate_admin_role::$admin_id
        [FUNCTION_ARG] Checking argument: admin_id
      [SYMBOL_LOOKUP] Found admin_id in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found admin_id in function scope: socketio_events.str
      [ATTRIBUTE] Found attribute access: _haven_proxy.validate_admin_role
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Not module state
      [NAME] Found name reference: _haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> Resolved to state: socketio_events._haven_proxy
      [SYMBOL_LOOKUP] Variable _haven_proxy not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: admin_id
      [SYMBOL_LOOKUP] Found admin_id in function scope: socketio_events.str
      [SYMBOL_LOOKUP] Found admin_id in function scope: socketio_events.str
      -> Not module state
      [ASSIGNMENT] Processing: admin_room = ...
        [ASSIGNMENT] Non-call assignment
      [NAME] Found name reference: admin_room
      [SYMBOL_LOOKUP] Variable admin_room not found in any scope
      -> Not module state
      [NAME] Found name reference: admin_id
        [CACHE] admin_id -> socketio_events.str (cached)
      -> Not module state
      [CALL] Found call: _socketio_instance.emit
    [CACHE] _socketio_instance.emit -> socketio_events._socketio_instance.emit (cached)
            [INTERMEDIATE] Tracking chain steps for: _socketio_instance.emit
            [INTERMEDIATE] Step 1: _socketio_instance.emit
        [EMIT_DETECTION] Direct FQN match: socketio_events._socketio_instance.emit
      -> DETECTED and ADDED emit call: socketio_events._socketio_instance.emit::admin_notification
        [EMIT] Room parameter: $admin_room
        [FUNCTION_ARG] Checking argument: notification
      [SYMBOL_LOOKUP] Found notification in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found notification in function scope: typing.Dict
      [ATTRIBUTE] Found attribute access: _socketio_instance.emit
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> Not module state
      [NAME] Found name reference: _socketio_instance
        [CACHE] _socketio_instance -> socketio_events._socketio_instance (cached)
      -> Resolved to state: socketio_events._socketio_instance
      [SYMBOL_LOOKUP] Variable _socketio_instance not found in any scope
      -> ADDED to accessed_state
      [NAME] Found name reference: notification
      [SYMBOL_LOOKUP] Found notification in function scope: typing.Dict
      [SYMBOL_LOOKUP] Found notification in function scope: typing.Dict
      -> Not module state
      [NAME] Found name reference: admin_room
        [CACHE] admin_room -> socketio_events.admin_room (cached)
      -> Not module state
    [CONTEXT] Exited function: socketio_events.admin_notification
    [FUNCTION_ANALYSIS] Completed analysis of: socketio_events.admin_notification
        Calls: 2
        Instantiations: 0
        State Access: 2
        SocketIO Emits: 1
=== Module Analysis Complete ===
  Module analysis complete
=== ANALYSIS PASS COMPLETE ===

Generating report...
=== GENERATING JSON REPORT ===
Report successfully written to: code_atlas_report_refactored_reorganized.json
Report size: 203023 bytes
=== CODE ATLAS GENERATION COMPLETE ===
Analysis successful using recon:refactored + analysis:refactored + resolver:reorganized!
Check 'code_atlas_report.json' for results.
